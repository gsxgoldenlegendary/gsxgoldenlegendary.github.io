[{"title":"Adjustment and Application of the Prism Spectrometer","url":"/2021/04/09/Adjustment-and-Application-of-the-Prism-Spectrometer/","content":"<p>大学物理基础实验 A 实验报告《分光计的调节与使用》：</p>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/physics03.pdf\">移动端点击链接下载查看</a></p>\n<span id=\"more\"></span>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/physics03.pdf\" data-height=\"600px\"></div>\n","categories":["Physics"],"tags":["Physical Experiment"]},{"title":"Analogue and Digital Circuits Crip","url":"/2022/01/14/Analog-and-Digital-Circuits-Crip/","content":"<p>《模拟与数字电路》期末考试合法小抄:</p>\n<span id=\"more\"></span>\n<figure>\n<img src=\"https://gsxgoldenlegendary.github.io/images/crip_11.jpg\" alt=\"page0\" /><figcaption>page0</figcaption>\n</figure>\n<figure>\n<img src=\"https://gsxgoldenlegendary.github.io/images/crip_12.jpg\" alt=\"page0\" /><figcaption>page0</figcaption>\n</figure>\n","categories":["Computer Science"],"tags":["Digital Circuit"]},{"title":"Analysis on Causes of Qinghai-Tibet Railway Construction","url":"/2021/05/09/Analysis-on-Causes-of-Qinghai-Tibet-Railway-Construction/","content":"<p>中国近现代史纲要课程论文《青藏铁路建设原因浅析》：</p>\n<span id=\"more\"></span>\n<p>移动端点击链接下载查看；</p>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/politics01.pdf\">Analysis on Causes of Qinghai-Tibet Railway Construction</a></p>\n<p>PC端支持在线预览。</p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/politics01.pdf\" data-height=\"600px\"></div>\n","categories":["Sociology"],"tags":["PRC History"]},{"title":"Arithmetic Unit and Rigister","url":"/2021/10/30/Arithmetic-Unit-and-Rigister/","content":"<p>数字电路实验报告《运算器与寄存器》：</p>\n<span id=\"more\"></span>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/computer05.pdf\">移动端点击链接下载查看</a></p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/computer05.pdf\" data-height=\"600px\"></div>\n","categories":["Computer Science"],"tags":["Digital Circuit"]},{"title":"Array and Generalized List","url":"/2021/12/29/Array-and-Generalized-List/","content":"<p>数组和广义表的逻辑结构、存储结构及基本操作：</p>\n<span id=\"more\"></span>\n<h1 id=\"逻辑结构\">逻辑结构</h1>\n<h2 id=\"数组\">数组</h2>\n<p>ADT Array{</p>\n<p>数据对象： <span class=\"math display\">\\[\nj_i=0,\\cdots,b_i-1,i=1,2,\\cdots,n.\n\\]</span></p>\n<p><span class=\"math display\">\\[\nD=\\{a_{j_1j_2\\cdots j_n}|n(n&gt;0),a_{j_1j_2\\cdots j_n}\\in ElemSet\\}\n\\]</span></p>\n<p><span class=\"math inline\">\\(n\\)</span>称为数组的维数，<span class=\"math inline\">\\(b_i\\)</span>是数组第<span class=\"math inline\">\\(i\\)</span>维的长度，<span class=\"math inline\">\\(j_i\\)</span>是数组元素第<span class=\"math inline\">\\(i\\)</span>维下标。</p>\n<p>数据关系： <span class=\"math display\">\\[\nR=\\{R1,R2,\\cdots,Rn\\}\n\\]</span></p>\n<p><span class=\"math display\">\\[\nR1=\\{&lt;a_{j_1\\cdots j_i\\cdots j_n},a_{j_1\\cdots j_{i+1}\\cdots j_n}&gt;|0\\leqslant j_k\\leqslant b_k-1,i\\leqslant k\\leqslant n, 且k\\neq i,0\\leqslant j_i\\leqslant b_i-2,a_{j_1\\cdots j_i\\cdots j_n},a_{j_1\\cdots j_{i+1}\\cdots j_n}\\in D,i=2,\\cdots,n\\}\n\\]</span></p>\n<p>基本操作：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">InitArray(&amp;A,n,bound1,•••,boundn);</span><br><span class=\"line\">DestroyArray(&amp;A);</span><br><span class=\"line\">Value(A,&amp;e,index1,•••,indexn);</span><br><span class=\"line\">Assign(&amp;A,e,index1,•••,indexn);</span><br></pre></td></tr></table></figure>\n<p>}ADT Array</p>\n<h2 id=\"广义表\">广义表</h2>\n<p>ADT GList{</p>\n<p>数据对象： <span class=\"math display\">\\[\nD=\\{e_i|i=1,2,\\cdots,n;n\\geqslant0;e_i\\in AtomSet或e_i\\in GList\\}\n\\]</span> 数据关系： <span class=\"math display\">\\[\nR1=\\{&lt;e_{i-1},e_i&gt;|e_{i-1},e_i\\in D,2\\leqslant i\\leqslant n\\}\n\\]</span> 基本操作：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">InitGList(&amp;L);</span><br><span class=\"line\">CreateGList(&amp;L,S);</span><br><span class=\"line\">DestroyGList(&amp;L);</span><br><span class=\"line\">CopyGList(&amp;T,L);</span><br><span class=\"line\">GListLength(L);</span><br><span class=\"line\">GListDepth(L);</span><br><span class=\"line\">GListEmpty(L);</span><br><span class=\"line\">GetHead(L);</span><br><span class=\"line\">GetTail(L);</span><br><span class=\"line\">InsertFirst_GL(&amp;L,e);</span><br><span class=\"line\">DeleteFirst_GL(&amp;L,&amp;e);</span><br><span class=\"line\">Traverse_GL(L,Visit());</span><br></pre></td></tr></table></figure>\n<p>}ADT GList</p>\n<h1 id=\"存储结构\">存储结构</h1>\n<h2 id=\"数组-1\">数组</h2>\n<h3 id=\"数组的顺序存储表示\">数组的顺序存储表示</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdarg.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MAX_ARRAY_DIM 8</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">    ElemType*base;</span><br><span class=\"line\">    <span class=\"type\">int</span> dim;</span><br><span class=\"line\">    <span class=\"type\">int</span>*bounds;</span><br><span class=\"line\">    <span class=\"type\">int</span>*constants;</span><br><span class=\"line\">&#125;Array;</span><br></pre></td></tr></table></figure>\n<h3 id=\"稀疏矩阵的三元顺序表存储表示\">稀疏矩阵的三元顺序表存储表示</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MAXSIZE 12500</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">    <span class=\"type\">int</span> i,j;\t\t\t\t<span class=\"comment\">//非零元的行下标和列下标</span></span><br><span class=\"line\">    ElemType e;</span><br><span class=\"line\">&#125;Triple;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">    Triple data[MAXSIZE+<span class=\"number\">1</span>];\t <span class=\"comment\">//非零元三元组表，以行序为主序</span></span><br><span class=\"line\">    <span class=\"type\">int</span> mn,nu,tu;\t\t\t<span class=\"comment\">//矩阵的行数、列数、非零元个数</span></span><br><span class=\"line\">&#125;TSMatrix;</span><br></pre></td></tr></table></figure>\n<h3 id=\"稀疏矩阵的行逻辑链接的顺序表存储表示\">稀疏矩阵的行逻辑链接的顺序表存储表示</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MAXSIZE 12500</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">    <span class=\"type\">int</span> i,j;\t\t\t\t</span><br><span class=\"line\">    ElemType e;</span><br><span class=\"line\">&#125;Triple;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">    Triple data[MAXSIZE+<span class=\"number\">1</span>];   </span><br><span class=\"line\">    <span class=\"type\">int</span> rpos[MAXRC+<span class=\"number\">1</span>];       </span><br><span class=\"line\">    <span class=\"type\">int</span> mu,nu,tu;</span><br><span class=\"line\">&#125;RLSMatrix;</span><br></pre></td></tr></table></figure>\n<h3 id=\"稀疏矩阵的十字链表存储表示\">稀疏矩阵的十字链表存储表示</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">OLNode</span>&#123;</span></span><br><span class=\"line\">    <span class=\"type\">int</span> i,j;\t\t\t\t\t<span class=\"comment\">//行号和列号</span></span><br><span class=\"line\">    ElemType e;\t\t\t\t\t<span class=\"comment\">//元素值</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">OLNode</span>*<span class=\"title\">right</span>,*<span class=\"title\">down</span>;</span>\t </span><br><span class=\"line\">&#125;OLNode,*OLink;\t\t\t\t\t<span class=\"comment\">//非零元素结点</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">    OLink*rhead,chead;</span><br><span class=\"line\">    <span class=\"type\">int</span> mu,nu,tu;\t\t\t\t<span class=\"comment\">//行数、列数、非零元个数</span></span><br><span class=\"line\">&#125;CrossList;</span><br></pre></td></tr></table></figure>\n<h2 id=\"广义表-1\">广义表</h2>\n<h3 id=\"广义表的头尾链表存储表示\">广义表的头尾链表存储表示</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">enum</span>&#123;</span></span><br><span class=\"line\">    ATOM,</span><br><span class=\"line\">    LIST</span><br><span class=\"line\">&#125;ElemTag;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">GLNode</span>&#123;</span></span><br><span class=\"line\">    ElemTag tag;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">union</span>&#123;</span></span><br><span class=\"line\">        AtomType atom;</span><br><span class=\"line\">        <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">            <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">GLNode</span> *<span class=\"title\">hp</span>,*<span class=\"title\">tpl</span></span></span><br><span class=\"line\"><span class=\"class\">        &#125;<span class=\"title\">ptr</span>;</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;*GList;</span><br></pre></td></tr></table></figure>\n<h3 id=\"广义表的扩展线性链表存储表示\">广义表的扩展线性链表存储表示</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">enum</span>&#123;</span></span><br><span class=\"line\">    ATOM,</span><br><span class=\"line\">    LIST</span><br><span class=\"line\">&#125;ElemTag;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">GLNode</span>&#123;</span></span><br><span class=\"line\">    ElemTag tag;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">union</span>&#123;</span></span><br><span class=\"line\">        AtomType atom;</span><br><span class=\"line\">        <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">GLNode</span> *<span class=\"title\">hp</span>;</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">GLNode</span> *<span class=\"title\">tp</span>;</span></span><br><span class=\"line\">&#125;*GList;</span><br></pre></td></tr></table></figure>\n<h1 id=\"基本操作\">基本操作</h1>\n<h2 id=\"数组-2\">数组</h2>\n<h3 id=\"数组的顺序存储表示-1\">数组的顺序存储表示</h3>\n<h4 id=\"初始化\">初始化</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">InitArray</span><span class=\"params\">(Array &amp;A,<span class=\"type\">int</span> dim,...)</span>&#123;</span><br><span class=\"line\">    A.dim=dim;</span><br><span class=\"line\">    A.bounds=(<span class=\"type\">int</span>*)<span class=\"built_in\">malloc</span>(dim*<span class=\"keyword\">sizeof</span>(<span class=\"type\">int</span>));</span><br><span class=\"line\">    elemtotal=<span class=\"number\">1</span>;</span><br><span class=\"line\">    va_start(ap,dim);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;dim;++i)&#123;</span><br><span class=\"line\">        A.bounds[i]=va_arg(ap,<span class=\"type\">int</span>);</span><br><span class=\"line\">        elemtotal*=A.bounds[i];</span><br><span class=\"line\">    &#125;<span class=\"comment\">//for</span></span><br><span class=\"line\">    var_end(ap);</span><br><span class=\"line\">    A.base=(ElemType*)<span class=\"built_in\">malloc</span>(elemtotal*<span class=\"keyword\">sizeof</span>(ElemType));</span><br><span class=\"line\">    A.constants=(<span class=\"type\">int</span>*)<span class=\"built_in\">malloc</span>(dim*<span class=\"keyword\">sizeof</span>(<span class=\"type\">int</span>));</span><br><span class=\"line\">    A.constant[dim<span class=\"number\">-1</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=dim<span class=\"number\">-1</span>;i&gt;=<span class=\"number\">0</span>;--i)</span><br><span class=\"line\">        A.constants[i]=A.bounds[i+<span class=\"number\">1</span>]*A.constants[i+<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;<span class=\"comment\">//InitArray</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"映像函数\">映像函数</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">Locate</span><span class=\"params\">(Array A,va_list ap,<span class=\"type\">int</span> &amp;off)</span>&#123;</span><br><span class=\"line\">    off=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"number\">0</span>;i&lt;A.dim;++i)&#123;</span><br><span class=\"line\">        ind=va_arg(ap,<span class=\"type\">int</span>);</span><br><span class=\"line\">        off+=A.constants[i]*ind;</span><br><span class=\"line\">    &#125;<span class=\"comment\">//for</span></span><br><span class=\"line\">&#125;<span class=\"comment\">//Locate</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"矩阵\">矩阵</h2>\n<h3 id=\"稀疏矩阵的三元顺序表存储表示-1\">稀疏矩阵的三元顺序表存储表示</h3>\n<h4 id=\"转置\">转置</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">TransMatrix</span><span class=\"params\">(TSMatrix a,TSMatrix &amp;b)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//时间复杂度O(a.nu*a.tu)</span></span><br><span class=\"line\">    &#123;b.mu,b.nu,b.tu&#125;=&#123;a.nu,a.mu,a.tu&#125;;</span><br><span class=\"line\">   <span class=\"keyword\">if</span>(b.tu)&#123;</span><br><span class=\"line\">    q=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(col=<span class=\"number\">1</span>;col&lt;a.nu;++col)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(p=<span class=\"number\">0</span>;p&lt;a.tu;++p)</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(a.data[p].col==col)&#123;</span><br><span class=\"line\">                b.data[q].i=a.data[p].j;</span><br><span class=\"line\">                b.data[q].j=a.data[p].i;</span><br><span class=\"line\">                b.data[q].value=a.data[p].value;</span><br><span class=\"line\">                ++q;</span><br><span class=\"line\">            &#125;<span class=\"comment\">//if</span></span><br><span class=\"line\">   &#125;<span class=\"comment\">//if</span></span><br><span class=\"line\">&#125;<span class=\"comment\">//TransMatrix</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"快速转置\">快速转置</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">FastTransMatrix</span><span class=\"params\">(TSMatrix a,TSMatrix &amp;b)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//时间复杂度O(a.nu+a.tu)</span></span><br><span class=\"line\">    &#123;b.mu,b.nu,b.tu&#125;=&#123;a.nu,a.mu,a.tu&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(b.tu)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(col=<span class=\"number\">0</span>;col&lt;a.nu;++col)</span><br><span class=\"line\">            num[col]=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(t=<span class=\"number\">0</span>;t&lt;a.tu;++t)</span><br><span class=\"line\">            ++num[a.data[t].col];</span><br><span class=\"line\">        cpot[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(col=<span class=\"number\">1</span>;col&lt;a.nu,++col)</span><br><span class=\"line\">            cpot[col]=cpot[col<span class=\"number\">-1</span>]+cum[col<span class=\"number\">-1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(p=<span class=\"number\">0</span>;p&lt;a.tu;++p)&#123;</span><br><span class=\"line\">            col=a.data[p].j;</span><br><span class=\"line\">            q=cpot[col];</span><br><span class=\"line\">            b.data[q].i=a.data[p].j;</span><br><span class=\"line\">            b.data[q].j=a.data[p].i;</span><br><span class=\"line\">            b.data[q].value=a.data.value;</span><br><span class=\"line\">            ++cpot[col];</span><br><span class=\"line\">        &#125;<span class=\"comment\">//for</span></span><br><span class=\"line\">    &#125;<span class=\"comment\">//if</span></span><br><span class=\"line\">&#125;<span class=\"comment\">//TastTransMatrix</span></span><br></pre></td></tr></table></figure>\n","categories":["Computer Science"],"tags":["Data Structure"]},{"title":"Assemble Programming","url":"/2022/03/12/Assemble-Programming/","content":"<p>计算机组成原理实验报告《汇编程序设计》：</p>\n<span id=\"more\"></span>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/computer0d.pdf\">移动端点击链接下载查看</a></p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/computer0d.pdf\" data-height=\"600px\"></div>\n","categories":["Computer Science"],"tags":["Computer Organization"]},{"title":"Assembler","url":"/2021/12/12/Assembler/","content":"<h1 id=\"assembler\">Assembler</h1>\n<p>Experiment Report to ICS labA.</p>\n<span id=\"more\"></span>\n<h2 id=\"tasks\">Tasks</h2>\n<ol type=\"1\">\n<li>learn how to use Makefile.</li>\n<li>read the code, understand the framework of the program, and train the ability to read the program.</li>\n<li>replace all <code>TO BE DONE</code> in the code with the correct code.</li>\n</ol>\n<h2 id=\"process\">Process</h2>\n<p>I tried use only vim to edit the code, but when the file is too long , efficiency went down. So I use CLion in Windows to edit the code, then use Ubuntu run the programme.</p>\n<p>I read the codes line by line, and complete all <code>TO BE DONE</code> one by one. Because the code is very clear and understandable, there were not many problems in this stage. But most time used in debugging.😂</p>\n<h2 id=\"debugging\">Debugging</h2>\n<p>I will write almost all bugs I met as follows.</p>\n<ol type=\"1\">\n<li>Originally, I misunderstood some codes about labels, so when meeting labels, the line was not printed in output file. Then I set the line with label <code>lOperation</code> and the problem diminished.</li>\n<li>When almost all being done, I recognised that some 16-base number was mixed in 2-base numbers. Then I found that something was wrong in <code>ConvertBin2Hex</code> function. Using <code>DecToChar</code> function, the bug was fixed.</li>\n<li>When I finished debugging in CLion, I made the programme in Ubuntu, but an error occurred. It is because I used <code>_atoi</code> function, but it isn't admitted in g++ compiler. So I write a function to replace the library function.</li>\n</ol>\n<h2 id=\"gains\">Gains</h2>\n<ol type=\"1\">\n<li>Through this lab, I learned how to process command parameters, and how to set debug mode by TA's marvellous codes.👍</li>\n<li>After finishing the assembler, I understand assembly language more deeply, and have known how it is converted to machine language.</li>\n<li>Actually, I haven't use command to compile and run a single C++ programme. Thanks to this lab, I learned to do so.</li>\n<li>I used almost 6 hours to complete the lab. No pains, no gains!</li>\n</ol>\n","categories":["Computer Science"],"tags":["Computing System"]},{"title":"Basic Laws of Electromagnetism and Electromagnetic Waves","url":"/2021/07/04/Basic-Laws-of-Electromagnetism-and-Electromagnetic-Waves/","content":"<p>电磁现象的基本规律与电磁波笔记：</p>\n<span id=\"more\"></span>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/physics19.pdf\">移动端点击链接下载查看</a></p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/physics19.pdf\" data-height=\"600px\"></div>\n","categories":["Physics"],"tags":["Electromagnetism"]},{"title":"Basics of Thermal and Temperature","url":"/2021/03/04/Basics-of-Thermal-and-Temperature/","content":"<p>热学基础知识与温度笔记：</p>\n<span id=\"more\"></span>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/physics08.pdf\">移动端点击链接下载查看</a></p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/physics08.pdf\" data-height=\"600px\"></div>\n","categories":["Physics"],"tags":["Thermology"]},{"title":"Better Angels","url":"/2021/12/16/Better-Angels/","content":"<h1 id=\"better-angels\">Better Angels</h1>\n<p>Experiment Report for ICS lab3:</p>\n<span id=\"more\"></span>\n<h2 id=\"task\">Task</h2>\n<h3 id=\"task-1\">task 1</h3>\n<p>Read and understand In lab 3, I will get a piece of machine code in 'foo.txt'. My first task is to translate machine code into assembly code. Store my program in 'translate.txt'.</p>\n<h3 id=\"task-2\">task 2</h3>\n<p>Guess This code is some other's program in lab2. Guess the owner of the program by the last 4 lines of the program. Write down the owner's student id in 'id.txt'.</p>\n<h3 id=\"task-3\">task 3</h3>\n<p>Optimize The code in lab2 is a L-version program. Of course it's performance is not very well. In this part, I need to optimize other's program. (Rewriting is also a legitimate optimization method) Store the optimized code in 'optimized.txt'.</p>\n<h2 id=\"process\">Process</h2>\n<h3 id=\"read\">read</h3>\n<p>I read the code line by line, and translate it into assembly. Because machine language is very similar to assembly, there was not much programme.</p>\n<h3 id=\"guess\">guess</h3>\n<p>I wrote a C++ programme to calculate the ID of the owner of the codes. Codes are as follows.</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> F[<span class=\"number\">100</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tF[<span class=\"number\">0</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\tF[<span class=\"number\">1</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\tF[<span class=\"number\">2</span>]=<span class=\"number\">2</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">3</span>;i&lt;<span class=\"number\">100</span>;++i)&#123;</span><br><span class=\"line\">\t\tF[i]=(F[i<span class=\"number\">-1</span>]+<span class=\"number\">2</span>*F[i<span class=\"number\">-3</span>])%<span class=\"number\">1024</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(F[i]==<span class=\"number\">486</span>)</span><br><span class=\"line\">\t\t\tstd::cout&lt;&lt;i;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"optimise\">optimise</h3>\n<p>I optimise the code by changing fundamental structure. I wrote a C++ programme to write the codes. The programme is as follows.</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;fstream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> F[<span class=\"number\">15001</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tF[<span class=\"number\">0</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\tF[<span class=\"number\">1</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\tF[<span class=\"number\">2</span>]=<span class=\"number\">2</span>;</span><br><span class=\"line\">\t<span class=\"function\">std::ofstream <span class=\"title\">file_writer</span><span class=\"params\">(<span class=\"string\">&quot;opt.txt&quot;</span>)</span></span>;</span><br><span class=\"line\">\tfile_writer&lt;&lt;<span class=\"string\">&quot;.ORIG x3000\\nLEA R1,#0\\nADD R2,R0,R1\\nLDR R7,R2,#3\\nTRAP x25\\n&quot;</span>; </span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">15000</span>;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(i&gt;<span class=\"number\">2</span>)</span><br><span class=\"line\">\t\t\tF[i]=(F[i<span class=\"number\">-1</span>]+<span class=\"number\">2</span>*F[i<span class=\"number\">-3</span>])%<span class=\"number\">1024</span>;</span><br><span class=\"line\">\t\tfile_writer&lt;&lt;<span class=\"string\">&quot;.FILL #&quot;</span>&lt;&lt;F[i]&lt;&lt;std::endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfile_writer&lt;&lt;<span class=\"string\">&quot;.END&quot;</span>;</span><br><span class=\"line\">\tfile_writer.<span class=\"built_in\">close</span>();</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>According to Prof. Zhang, a 15% performance optimising can be called a \"splendid advance\". The programme I got used 46506 instructions on average(tested in LIU Liangyu(PB20000180)'s LC-3 web). And my optimised programme used 3 instructions in all cases. Using the formula <span class=\"math display\">\\[\n3=46506\\times(1-15\\%)^n,\n\\]</span> So I have completed 59 \"splendid advance\"s at least.</p>\n<h2 id=\"gains\">Gains</h2>\n<p>It is difficult for a man to read machine language. So I can understand why advanced languages are invented.</p>\n<p>No pains, no gains!</p>\n","categories":["Computer Science"],"tags":["Computing System"]},{"title":"Binary Relationship","url":"/2021/07/03/Binary-Relationship/","content":"<p>二元关系笔记：</p>\n<span id=\"more\"></span>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/math15.pdf\">移动端点击链接下载查看</a></p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/math15.pdf\" data-height=\"600px\"></div>\n","categories":["Mathematics"],"tags":["Algebra Structure"]},{"title":"Booting Process of a Computer","url":"/2022/03/13/Booting-Process-of-a-Computer/","content":"<p>计算机组成原理调研报告《计算机的开机过程》：</p>\n<span id=\"more\"></span>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/computer0e.pdf\">移动端点击链接下载查看</a></p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/computer0e.pdf\" data-height=\"600px\"></div>\n","categories":["Computer Science"],"tags":["Computer Organization"]},{"title":"Can AI Replace Man or not?","url":"/2021/10/31/Can-AI-Replace-Man-or-not/","content":"<p>马克思主义基本原理概论课程论文《人工智能能否取代人类？》：</p>\n<h3 id=\"摘要\">摘要</h3>\n<p>人工智能能否取代人类，是一个值得重点讨论的问题。本文采用驳论的方法，论证了认为人工智能可以取代人类观点的不合理性。通过理论分析，得出人工智能不能取代人类的结论。得出人工智能不能取代人类的结论，对当代人对人工智能的发展指明方向。</p>\n<h3 id=\"关键词\">关键词</h3>\n<p>人工智能 人类智能</p>\n<span id=\"more\"></span>\n<h2 id=\"引言\">引言</h2>\n<p>从1998年电脑“深蓝”战胜国际象棋冠军克斯帕罗夫，到2016年AlphaGo战胜李世石九段，人工智能从无到有，迅速地发展、壮大，逐步融入到人们日常生活之中，高校人工智能专业如雨后春笋般成立。新一代人工智能正在全球范围内蓬勃兴起，为经济社会发展注入了新动能，正在深刻改变人们的生产生活方式。<a href=\"#fn1\" class=\"footnote-ref\" id=\"fnref1\"><sup>1</sup></a>渐渐地，人们开始思考：人工智能究竟能否取代人类？</p>\n<h2 id=\"人工智能的概念解析\">人工智能的概念解析</h2>\n<h3 id=\"智能\">智能</h3>\n<p>要解析人工智能的定义，必须对智能这个概念进行澄清。一般认为，智能是指个体对客观事物进行合理分析、判断及有目的地行动和有效地处理周围环境事宜的综合能力。人的智能为人的社会特质提供了重要基础。特殊的人格的本质不是人的胡子、血液、抽象的本性，而是人的社会特质。<a href=\"#fn2\" class=\"footnote-ref\" id=\"fnref2\"><sup>2</sup></a></p>\n<h3 id=\"人工智能\">人工智能</h3>\n<p>人工智能，是一门综合了计算机科学、生理学、哲学的交叉学科。人工智能的概念由于智能概念的不确定性而没有一个统一的标准，一个通俗的定义是：“虽然现在的机器不能思维也没有”直觉的方程式“，但可以把人处理问题的方法编入智能程序，使不能思维的机器也有智能，使机器能做那些需要人的智能才能做的事，也就是人工智能”。<a href=\"#fn3\" class=\"footnote-ref\" id=\"fnref3\"><sup>3</sup></a></p>\n<h2 id=\"关于人工智能的论断\">关于人工智能的论断</h2>\n<h3 id=\"工具论\">工具论</h3>\n<p>这种论断主张人工智能由于先天性的不足，也就是人工智能的设计原理和动力是作为人类智能的辅助和补充而不是作为将要取代人类智能。人工智能从诞生的那一天起就决定了它将来的命运，只能作为人类智能的工具，无论其功能如何强大、智能化程度多么高，人工智能和人类智能之间存在着不可逾越的鸿沟，人的主体地位是无法动摇的。</p>\n<h3 id=\"取代论\">取代论</h3>\n<p>这种论断主张人工智能虽然只是作为人类智能的补充，但由于其发展速度很快，远远超越同时期人类智能的发展速度。只是由于人工智能的起步较低，在现阶段人工智能虽然无法和人类智能相媲美，但万事开头难，每门科学都是如此，<a href=\"#fn4\" class=\"footnote-ref\" id=\"fnref4\"><sup>4</sup></a>但其在局部表现出超越人类智能的现实，超过人类智能只是时间上的问题。</p>\n<h2 id=\"人工智能不会取代人类智能\">人工智能不会取代人类智能</h2>\n<p>我从以下三个方面论述人工智能不会取代人类智能。</p>\n<h3 id=\"进化论\">进化论</h3>\n<p>有人从进化论的角度认为人工智能必将战胜人类，认为人工智能在人类的主动帮助下能够完成不断地进化，再加上人工智能进化速度远超人类，以至于使其超过人类。这种依据显然是错误的，其原因有二：</p>\n<p>首先，人类改进人工智能不属于进化。进化这个概念指的是事物的演化和发展，它的含义极其广泛，包括天体的消长、生物的演变、社会的发展等等。<a href=\"#fn5\" class=\"footnote-ref\" id=\"fnref5\"><sup>5</sup></a>从这个定义可以看出，人工智能不属于其中任何一方面，故目前不应该将进化论在人工智能上应用。确切地说，人工智能所谓的“进化”应该类似于计算机软硬件的“升级”。</p>\n<p>其次，人工智能没有进化的动机。人工智能和外部环境的联系是通过人类间接完成的，也就是说外部环境的变动对其不会产生直接的影响，即没有进化的外因。另外，人工智能不会因为自己的需要去“用进废退”，其发展于升级取决于人类智能的价值取向，即没有进化的内因。没有需要，就没有生产。<a href=\"#fn6\" class=\"footnote-ref\" id=\"fnref6\"><sup>6</sup></a></p>\n<h3 id=\"创造性理论\">创造性理论</h3>\n<p>有人通过创造性理论阐释人工智能可以取代人类，认为只要人工智能具有创造性，便可以在全方面代替人类进行社会活动。而目前人工智能的学习能力可以使其进行一些创造，那么是不是很快就能有与人类相提并论的创造性了呢？这种观点显然是错误的。</p>\n<p>创造性的来源在于意识。暂且不提人工智能是否有意识，先看看意识由什么决定：不是意识决定生活，而是生活决定意识。<a href=\"#fn7\" class=\"footnote-ref\" id=\"fnref7\"><sup>7</sup></a>人工智能没有生活，哪里谈得上其意识的价值？正是人与人交往的生活方式，给人无限的创造源泉。智慧同智慧相碰，就迸溅出无数的火花。<a href=\"#fn8\" class=\"footnote-ref\" id=\"fnref8\"><sup>8</sup></a>这样，创造性理论便不攻自破了。</p>\n<h3 id=\"量变质变论\">量变质变论</h3>\n<p>人工智能在本世纪初的发展速度相较于上世纪末可以用爆炸来形容。所以有人认为人工智能不断表现出来的超越人类的量变可以促发战胜人类智能的质变。这种想法一样是幼稚而错误的。</p>\n<p>量变质变定律的关键在于“最低限额”。这个“最低限额”相对于不同事物的不同时期和不同环境都不会相同。目前人工智能相较于生物有很大差距，并不应该依据生物的“最低限额”进行类比。在尚没有可类比的实例时，不应采用这种方法进行研究。关于这一方面，甚至有研究者进行了强力的否定：单纯的人工智能的量变难以实现到超越人类智能的质变！<a href=\"#fn9\" class=\"footnote-ref\" id=\"fnref9\"><sup>9</sup></a></p>\n<h2 id=\"结语\">结语</h2>\n<p>随着人工智能的发展，人类个体已经越来越无法与机器人匹敌，但是我们知道个人是微弱的，但是我们也知道整体就是力量。<a href=\"#fn10\" class=\"footnote-ref\" id=\"fnref10\"><sup>10</sup></a>人类的总体智能仍然是强大的、有着无限潜能的。或许我们会因为在某些方面不如人工智能而遗憾，但是人要学会走路，也要学会摔跤。而且只有经过摔跤，才能学会走路。<a href=\"#fn11\" class=\"footnote-ref\" id=\"fnref11\"><sup>11</sup></a>在科学上面是没有平坦的大路可走的，只有那在崎岖小路上攀登不畏劳苦的人，才有希望到达光辉的顶点。<a href=\"#fn12\" class=\"footnote-ref\" id=\"fnref12\"><sup>12</sup></a>对于我们这代人，尤其是学习计算机科学方向的我们，更应该发展好人工智能技术，使之更好地为人类服务。</p>\n<section class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn1\"><p>习近平.2018世界人工智能大会致贺信[Z].2018.<a href=\"#fnref1\" class=\"footnote-back\">↩</a></p></li>\n<li id=\"fn2\"><p>[德]马克思.黑格尔法哲学批判[M].曹典顺,译.北京:中国社会科学出版社,2009.<a href=\"#fnref2\" class=\"footnote-back\">↩</a></p></li>\n<li id=\"fn3\"><p>童天湘.从“人机大战”到人机共生[J].自然辩证法研究,1997(9).<a href=\"#fnref3\" class=\"footnote-back\">↩</a></p></li>\n<li id=\"fn4\"><p>[德]马克思.资本论（第一卷）[M].郭大力,王亚南,译.上海:生活·读书·新知三联书店,2009.<a href=\"#fnref4\" class=\"footnote-back\">↩</a></p></li>\n<li id=\"fn5\"><p>李难.进化论教程[M].北京:高等教育出版社,1990.<a href=\"#fnref5\" class=\"footnote-back\">↩</a></p></li>\n<li id=\"fn6\"><p>[德]马克思.政治经济学批判[M].徐坚,译.北京.人民出版社.1955.<a href=\"#fnref6\" class=\"footnote-back\">↩</a></p></li>\n<li id=\"fn7\"><p>[德]马克思,[德]恩格斯,德意志意识形态[M].郭沫若,译.上海:群益出版社,1947.<a href=\"#fnref7\" class=\"footnote-back\">↩</a></p></li>\n<li id=\"fn8\"><p>中共中央马克思恩格斯列宁斯大林著作编译局,马克思恩格斯全集[M].北京:人民出版社,2006.<a href=\"#fnref8\" class=\"footnote-back\">↩</a></p></li>\n<li id=\"fn9\"><p>宁春勇.人工智能能否超越人类智能？[D].郑州:河南大学,2007.<a href=\"#fnref9\" class=\"footnote-back\">↩</a></p></li>\n<li id=\"fn10\"><p>中共中央马克思恩格斯列宁斯大林著作编译局,马克思恩格斯全集[M].北京:人民出版社,2006.<a href=\"#fnref10\" class=\"footnote-back\">↩</a></p></li>\n<li id=\"fn11\"><p>中共中央马克思恩格斯列宁斯大林著作编译局,马克思恩格斯全集[M].北京:人民出版社,2006.<a href=\"#fnref11\" class=\"footnote-back\">↩</a></p></li>\n<li id=\"fn12\"><p>中共中央马克思恩格斯列宁斯大林著作编译局,马克思恩格斯全集[M].北京:人民出版社,2006.<a href=\"#fnref12\" class=\"footnote-back\">↩</a></p></li>\n</ol>\n</section>\n","categories":["Philosophy"],"tags":["Marxism"]},{"title":"Complex Function","url":"/2021/12/06/Complex-Function/","content":"<h1 id=\"复变数函数\">复变数函数</h1>\n<p>本章引入复变数函数、极限、连续和导数的概念，然后讨论复变函数论的主要研究对象——解析函数，这类函数在理论和实际问题中都有着广泛的应用，接着介绍一些常见的复初等函数及它们的基本性质。</p>\n<span id=\"more\"></span>\n<h2 id=\"复变数函数-1\">复变数函数</h2>\n<h3 id=\"复变数函数-2\">复变数函数</h3>\n<p>设<span class=\"math inline\">\\(E\\)</span>是复平面上的一个点集，若对于<span class=\"math inline\">\\(E\\)</span>中的每一个点<span class=\"math inline\">\\(z\\)</span>，按一定规律有一个复数<span class=\"math inline\">\\(w\\)</span>与之相对应，则称在<span class=\"math inline\">\\(E\\)</span>上定义了一个复单值函数，记作<span class=\"math inline\">\\(w=f(z)(z\\in E)\\)</span>；如果对于自变量<span class=\"math inline\">\\(z\\)</span>的一个值，按规律与之对应的<span class=\"math inline\">\\(w\\)</span>不止一个，则称<span class=\"math inline\">\\(w=f(z)\\)</span>是多值函数。</p>\n<h3 id=\"复变函数与变换\">复变函数与变换</h3>\n<p>设<span class=\"math inline\">\\(w=f(z)\\)</span>是集合<span class=\"math inline\">\\(E\\)</span>上的单值函数，如果对于<span class=\"math inline\">\\(E\\)</span>中任意两个不同点<span class=\"math inline\">\\(z_1\\)</span>及<span class=\"math inline\">\\(z_2\\)</span>，它们在（函数值）集合<span class=\"math inline\">\\(e&#39;\\)</span>中对应的点<span class=\"math inline\">\\(w_1=f(z_1)及\\)</span><span class=\"math inline\">\\(w_2=f(z_2)\\)</span>也不同，则称<span class=\"math inline\">\\(w=f(z)\\)</span>是集<span class=\"math inline\">\\(E\\)</span>中的一个一一映照（或双方单值映照）。或者说，<span class=\"math inline\">\\(w=f(z)\\)</span>双方单值地把集<span class=\"math inline\">\\(E\\)</span>映成集<span class=\"math inline\">\\(E&#39;\\)</span>。</p>\n<h2 id=\"函数的极限和连续性\">函数的极限和连续性</h2>\n<h3 id=\"复数列的极限\">复数列的极限</h3>\n<p>设函数<span class=\"math inline\">\\(w=f(z)\\)</span>在点<span class=\"math inline\">\\(z_0\\)</span>的某个去心邻域<span class=\"math inline\">\\(0&lt;|z-z_0|&lt;\\rho\\)</span>内有定义，而且实极限 <span class=\"math display\">\\[\n\\lim\\limits_{z\\to z_0}|f(z)-w_0|=0,\n\\]</span> 就称当<span class=\"math inline\">\\(z\\)</span>趋于<span class=\"math inline\">\\(z_0\\)</span>时<span class=\"math inline\">\\(f(z)\\)</span>的极限为<span class=\"math inline\">\\(w_0\\)</span>，记作 <span class=\"math display\">\\[\n\\lim\\limits_{z\\to z_0}f(z)=w_0\n\\]</span></p>\n<h3 id=\"复函数的连续\">复函数的连续</h3>\n<p>如果等式 <span class=\"math display\">\\[\n\\lim\\limits_{z\\to z_0}f(z)=f(z_0)\n\\]</span> 成立，就称函数<span class=\"math inline\">\\(f(z)\\)</span>在点<span class=\"math inline\">\\(z_0\\)</span>连续，如果<span class=\"math inline\">\\(f(z)\\)</span>在区域<span class=\"math inline\">\\(D\\)</span>中的每点都连续，就称<span class=\"math inline\">\\(f(z)\\)</span>在区域<span class=\"math inline\">\\(D\\)</span>中连续。</p>\n<h3 id=\"复函数的连续的充要条件\">复函数的连续的充要条件</h3>\n<p>函数<span class=\"math inline\">\\(f(z)=u(x,y)+\\mathrm iv(x,y)\\)</span>在点<span class=\"math inline\">\\(z_0=x_0+iy_0\\)</span>处连续的充要条件是<span class=\"math inline\">\\(u(x,y)\\)</span>和<span class=\"math inline\">\\(v(x,y)\\)</span>作为二元函数在<span class=\"math inline\">\\((x_0,y_0)\\)</span>处连续。</p>\n<h3 id=\"复函数的极限\">复函数的极限</h3>\n<p>设<span class=\"math inline\">\\(w=f(z)\\)</span>在点<span class=\"math inline\">\\(z\\)</span>的某个邻域<span class=\"math inline\">\\(U\\)</span>内有定义，<span class=\"math inline\">\\(z+\\Delta z\\in U\\)</span>，如果极限 <span class=\"math display\">\\[\n\\lim\\limits_{\\Delta z\\to 0}\\frac{f(z+\\Delta z)-f(z)}{\\Delta z}\n\\]</span> 存在，就称函数<span class=\"math inline\">\\(f(z)\\)</span>在点<span class=\"math inline\">\\(z\\)</span>可微，而且这个极限称为<span class=\"math inline\">\\(f(z)\\)</span>在点<span class=\"math inline\">\\(z\\)</span>的导数或微商，记为<span class=\"math inline\">\\(f&#39;(z),\\frac{\\mathrm df}{\\mathrm dz}\\)</span>或<span class=\"math inline\">\\(\\frac{\\mathrm d w}{\\mathrm dz}\\)</span>。即 <span class=\"math display\">\\[\nf&#39;(z)=\\lim\\limits_{\\Delta z\\to 0}\\frac{f(z+\\Delta z)-f(z)}{\\Delta z}.\n\\]</span></p>\n<h3 id=\"解析与奇点\">解析与奇点</h3>\n<p>如果<span class=\"math inline\">\\(f(z)\\)</span>在区域<span class=\"math inline\">\\(D\\)</span>内的每一点可微，则称<span class=\"math inline\">\\(f(z)\\)</span>在<span class=\"math inline\">\\(D\\)</span>内解析，或者说<span class=\"math inline\">\\(f(z)\\)</span>是<span class=\"math inline\">\\(D\\)</span>内的解析函数；如果<span class=\"math inline\">\\(f(z)\\)</span>在点<span class=\"math inline\">\\(z_0\\)</span>的某个邻域内可微，则称<span class=\"math inline\">\\(f(z)\\)</span>在点<span class=\"math inline\">\\(z_0\\)</span>解析；如果<span class=\"math inline\">\\(f(z)\\)</span>在点<span class=\"math inline\">\\(z_0\\)</span>不解析，则<span class=\"math inline\">\\(z_0\\)</span>称为<span class=\"math inline\">\\(f(z)\\)</span>的奇点。</p>\n<h2 id=\"柯西黎曼方程\">柯西——黎曼方程</h2>\n<h3 id=\"复函数在某点可微的充要条件\">复函数在某点可微的充要条件</h3>\n<p>函数<span class=\"math inline\">\\(f(z)=u(x,y)+\\mathrm iv(x,y)\\)</span>在点<span class=\"math inline\">\\(z=x+\\mathrm iy\\)</span>可微的充分必要条件是：</p>\n<ol type=\"1\">\n<li>二元函数<span class=\"math inline\">\\(u(x,y),v(x,y)\\)</span>在点<span class=\"math inline\">\\((x,y)\\)</span>可微；</li>\n<li><span class=\"math inline\">\\(u(x,y)\\)</span>及<span class=\"math inline\">\\(v(x,y)\\)</span>在点<span class=\"math inline\">\\((x,y)\\)</span>满足柯西——黎曼方程（简称C-R方程）</li>\n</ol>\n<p><span class=\"math display\">\\[\n\\frac{\\partial u}{\\partial x}=\\frac{\\partial v}{\\partial y},\\newline \\frac{\\partial u}{\\partial y}=-\\frac{\\partial v}{\\partial x}.\n\\]</span></p>\n<h3 id=\"复函数在区间上可微的充要条件\">复函数在区间上可微的充要条件</h3>\n<p>函数<span class=\"math inline\">\\(f(z)=u(x,y)+\\mathrm iv(x,y)\\)</span>在区间<span class=\"math inline\">\\(D\\)</span>内可微（即在D内解析）的充分必要条件是：</p>\n<ol type=\"1\">\n<li>二元函数<span class=\"math inline\">\\(u(x,y),v(x,y)\\)</span>在<span class=\"math inline\">\\(D\\)</span>内可微；</li>\n<li><span class=\"math inline\">\\(u(x,y)\\)</span>及<span class=\"math inline\">\\(v(x,y)\\)</span>在<span class=\"math inline\">\\(D\\)</span>内处处满足C-R方程。</li>\n</ol>\n","categories":["Mathematics"],"tags":["Complex Function"]},{"title":"Complex and Planar Point Set","url":"/2021/12/06/Complex-and-Planar-Point-Set/","content":"<h1 id=\"复数和平面点集\">复数和平面点集</h1>\n<p>复变函数这门学科的一切讨论都是在复数范围内进行的，本章内容是中学复数知识的复习和补充。</p>\n<span id=\"more\"></span>\n<h2 id=\"复数序列的极限无穷远点\">复数序列的极限、无穷远点</h2>\n<h3 id=\"复数列的极限\">复数列的极限</h3>\n<p>设<span class=\"math inline\">\\(z_1,z_2,\\cdots,z_n,\\cdots\\)</span>是一个复数序列，<span class=\"math inline\">\\(z_0\\)</span>是已给复数，如果 <span class=\"math display\">\\[\n\\lim\\limits_{n\\to+\\infty}|z_n-z_0|=0,\n\\]</span> 就称复数<span class=\"math inline\">\\(z_0\\)</span>是复数列<span class=\"math inline\">\\(\\{z_n\\}\\)</span>的极限，记作<span class=\"math inline\">\\(\\lim\\limits_{n\\to+\\infty}z_n=z_0\\)</span>或<span class=\"math inline\">\\(z_n\\to z_0\\)</span>。</p>\n<h3 id=\"复极限与实极限\">复极限与实极限</h3>\n<p>复极限<span class=\"math inline\">\\(\\lim\\limits_{n\\to+\\infty}z_n=z_0\\)</span>等价于两个实极限： <span class=\"math display\">\\[\n\\lim\\limits_{n\\to+\\infty}x_n=x_0,\\lim\\limits_{n\\to+\\infty}y_n=y_0,\n\\]</span> 其中<span class=\"math inline\">\\(z_0=x_0+\\mathrm iy_0,z_n=x_n+\\mathrm iy_n\\)</span>。</p>\n<h2 id=\"平面点集\">平面点集</h2>\n<h3 id=\"区域\">区域</h3>\n<p>具有下列性质的非空点集<span class=\"math inline\">\\(D\\)</span>称为区域：</p>\n<ol type=\"1\">\n<li><span class=\"math inline\">\\(D\\)</span>是开集；</li>\n<li><span class=\"math inline\">\\(D\\)</span>中任意两点可以用一条全在<span class=\"math inline\">\\(D\\)</span>中的折线连接起来（连通性）。</li>\n</ol>\n<p>区域<span class=\"math inline\">\\(D\\)</span>加上它的边界<span class=\"math inline\">\\(C\\)</span>后称为闭域，记为<span class=\"math inline\">\\(\\overline D=C+D\\)</span>。</p>\n","categories":["Mathematics"],"tags":["Complex Function"]},{"title":"Continuity of Single Variable Function","url":"/2021/03/07/Continuity-of-Single-Variable-Function/","content":"<p>单变量函数的连续性笔记：</p>\n<span id=\"more\"></span>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/math04.pdf\">移动端点击链接下载查看</a></p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/math04.pdf\" data-height=\"600px\"></div>\n","categories":["Mathematics"],"tags":["Mathematical Analysis"]},{"title":"Counter","url":"/2021/11/14/Counter/","content":"<p>数字电路实验报告《计数器》：</p>\n<span id=\"more\"></span>\n<p>移动端点击链接下载查看；</p>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/computer07.pdf\">Counter</a></p>\n<p>PC端支持在线预览。</p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/computer07.pdf\" data-height=\"600px\"></div>\n","categories":["Computer Science"],"tags":["Digital Circuit"]},{"title":"Cryptography and Its Applications","url":"/2022/03/08/Cryptography-and-Its-Applications/","content":"<p>信息安全导论实验报告《密码学及其应用》：</p>\n<span id=\"more\"></span>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/computer0c.pdf\">移动端点击链接下载查看</a></p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/computer0c.pdf\" data-height=\"600px\"></div>\n","categories":["Computer Science"],"tags":["Information Security"]},{"title":"Current and Circuits","url":"/2021/07/04/Current-and-Circuits/","content":"<p>电流与电路笔记：</p>\n<span id=\"more\"></span>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/physics15.pdf\">移动端点击链接下载查看</a></p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/physics15.pdf\" data-height=\"600px\"></div>\n","categories":["Physics"],"tags":["Electromagnetism"]},{"title":"Determination of Coefficient of Surface Tension","url":"/2021/05/15/Determination-of-Coefficient-of-Surface-Tension/","content":"<p>大学物理基础实验 A 实验报告《表面张力系数测定》：</p>\n<span id=\"more\"></span>\n<p>移动端点击链接下载查看；</p>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/physics05.pdf\">Determination of Coefficient of Surface Tension</a></p>\n<p>PC端支持在线预览。</p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/physics05.pdf\" data-height=\"600px\"></div>\n","categories":["Physics"],"tags":["Physical Experiment"]},{"title":"Differential Calculus of Multiple Variable Function","url":"/2021/07/16/Differential-Calculus-of-Multiple-Variable-Function/","content":"<p>多变量函数的微分学笔记：</p>\n<span id=\"more\"></span>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/math09.pdf\">移动端点击链接下载查看</a></p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/math09.pdf\" data-height=\"600px\"></div>\n","categories":["Mathematics"],"tags":["Mathematical Analysis"]},{"title":"Differential Calculus of Single Variable Function","url":"/2021/03/07/Differential-Calculus-of-Single-Variable-Function/","content":"<p>单变量函数的微分学笔记：</p>\n<span id=\"more\"></span>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/math05.pdf\">移动端点击链接下载查看</a></p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/math05.pdf\" data-height=\"600px\"></div>\n","categories":["Mathematics"],"tags":["Mathematical Analysis"]},{"title":"Discussion on Boolean Logic","url":"/2020/12/27/Discussion-on-Boolean-Logic/","content":"<p>计算机导论课程论文《关于布尔逻辑的探讨》：</p>\n<span id=\"more\"></span>\n<p>移动端点击链接下载查看；</p>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/computer01.pdf\">Discussion on Boolean Logic</a></p>\n<p>PC端支持在线预览。</p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/computer01.pdf\" data-height=\"600px\"></div>\n","categories":["Mathematics"],"tags":["Algebra Structure"]},{"title":"Electric Dipole and Approximate Methods","url":"/2021/05/22/Electric-Dipole-and-Approximate-Methods/","content":"<p>电磁学 C 课程论文《电偶极子与近似方法》：</p>\n<span id=\"more\"></span>\n<p>移动端点击链接下载查看；</p>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/physics06.pdf\">Electric Dipole and Approximate Methods</a></p>\n<p>PC端支持在线预览。</p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/physics06.pdf\" data-height=\"600px\"></div>\n","categories":["Physics"],"tags":["Electromagnetism"]},{"title":"Electric Forces and Electric Fields","url":"/2021/07/04/Electric-Forces-and-Electric-Fields/","content":"<p>电力与电场笔记：</p>\n<span id=\"more\"></span>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/physics13.pdf\">移动端点击链接下载查看</a></p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/physics13.pdf\" data-height=\"600px\"></div>\n","categories":["Physics"],"tags":["Electromagnetism"]},{"title":"Electromagnetic Induction and Magnetic Field Energy","url":"/2021/07/04/Electromagnetic-Induction-and-Magnetic-Field-Energy/","content":"<p>电磁感应与磁场能量笔记：</p>\n<span id=\"more\"></span>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/physics18.pdf\">移动端点击链接下载查看</a></p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/physics18.pdf\" data-height=\"600px\"></div>\n","categories":["Physics"],"tags":["Electromagnetism"]},{"title":"Electromagnetism Crip","url":"/2021/07/04/Electromagnetism-Crip/","content":"<p>《电磁学（C）》期中、期末考试合法小抄：</p>\n<span id=\"more\"></span>\n<figure>\n<img src=\"https://gsxgoldenlegendary.github.io/images/crip_05.jpg\" alt=\"midterm_page_0\" /><figcaption>midterm_page_0</figcaption>\n</figure>\n<figure>\n<img src=\"https://gsxgoldenlegendary.github.io/images/crip_06.jpg\" alt=\"midterm_page_1\" /><figcaption>midterm_page_1</figcaption>\n</figure>\n<figure>\n<img src=\"https://gsxgoldenlegendary.github.io/images/crip_07.jpg\" alt=\"final_page_0\" /><figcaption>final_page_0</figcaption>\n</figure>\n<figure>\n<img src=\"https://gsxgoldenlegendary.github.io/images/crip_08.jpg\" alt=\"final_page_1\" /><figcaption>final_page_1</figcaption>\n</figure>\n","categories":["Physics"],"tags":["Electromagnetism"]},{"title":"Emotion Management Research of College Students","url":"/2020/12/29/Emotion-Management-Research-of-College-Students/","content":"<p>大学生心理学课程论文《大学生情绪管理方式调研》：</p>\n<span id=\"more\"></span>\n<p>移动端点击链接下载查看；</p>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/psycology01.pdf\">Emotion Management Research of College Students</a></p>\n<p>PC端支持在线预览。</p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/psycology01.pdf\" data-height=\"600px\"></div>\n","categories":["Philosophy"],"tags":["Emotion"]},{"title":"Encoder and Decoder","url":"/2021/10/30/Encoder-and-Decoder/","content":"<p>数字电路实验报告《编码器与译码器》：</p>\n<span id=\"more\"></span>\n<p>移动端点击链接下载查看；</p>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/computer04.pdf\">Encoder and Decoder</a></p>\n<p>PC端支持在线预览。</p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/computer04.pdf\" data-height=\"600px\"></div>\n","categories":["Computer Science"],"tags":["Digital Circuit"]},{"title":"Establish Network Security Experiment Environment","url":"/2022/03/02/Establish-Network-Security-Experiment-Environment/","content":"<p>信息安全导论实验报告《建立网络安全实验环境》：</p>\n<span id=\"more\"></span>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/computer0b.pdf\">移动端点击链接下载查看</a></p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/computer0b.pdf\" data-height=\"600px\"></div>\n","categories":["Computer Science"],"tags":["Information Security"]},{"title":"Factor-group","url":"/2021/07/03/Factor-group/","content":"<p>商群笔记：</p>\n<span id=\"more\"></span>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/math17.pdf\">移动端点击链接下载查看</a></p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/math17.pdf\" data-height=\"600px\"></div>\n","categories":["Mathematics"],"tags":["Algebra Structure"]},{"title":"Figure Characteristic of Random Variable","url":"/2021/11/11/Figure-Characteristic-of-Random-Variable/","content":"<h1 id=\"随机变量的数字特征\">随机变量的数字特征</h1>\n<p>数字特征是指能够刻画随机变量某些方面的性质特征的量称为随机变量的数字特征。 比较常用的数字特征有数学期望，方差，协方差和相关系数等。</p>\n<span id=\"more\"></span>\n<h2 id=\"数学期望均值与中位数\">数学期望（均值）与中位数</h2>\n<h3 id=\"取有限个值的离散型随机变量的数学期望\">取有限个值的离散型随机变量的数学期望</h3>\n<p>设随机变量<span class=\"math inline\">\\(X\\)</span>只取有限个可能值<span class=\"math inline\">\\(a_1,a_2,\\cdots,a_m\\)</span>，其概率分布为 <span class=\"math display\">\\[\nP(X=a_i)=p_i,i=1,\\cdots,m,\n\\]</span> 则<span class=\"math inline\">\\(X\\)</span>的数学期望，记为<span class=\"math inline\">\\(E(X)\\)</span>，或EX，定义为 <span class=\"math display\">\\[\nE(X)=a_1p_1+a_2p_2+\\cdots+a_mp_m.\n\\]</span></p>\n<h3 id=\"取无限个值的离散型随机变量的数学期望\">取无限个值的离散型随机变量的数学期望</h3>\n<p>设随机变量<span class=\"math inline\">\\(X\\)</span>取无限个可能值<span class=\"math inline\">\\(a_1,a_2,\\cdots\\)</span>，其概率分布为 <span class=\"math display\">\\[\nP(X=a_i)=p_i,i=1,2,\\cdots,\n\\]</span> 如果 <span class=\"math display\">\\[\n\\sum\\limits_{i=1}^\\infty|a_i|p_i&lt;\\infty,\n\\]</span> 则称 <span class=\"math display\">\\[\nE(X)=\\sum\\limits_{i=1}^\\infty a_ip_i\n\\]</span> 为<span class=\"math inline\">\\(X\\)</span>的数学期望。</p>\n<h3 id=\"连续型随机变量的数学期望\">连续型随机变量的数学期望</h3>\n<p>设<span class=\"math inline\">\\(X\\)</span>的概率密度函数<span class=\"math inline\">\\(f(x)\\)</span>，如果 <span class=\"math display\">\\[\n\\int_{-\\infty}^\\infty|x|f(x)\\mathbf{d}x&lt;\\infty,\n\\]</span> 则称 <span class=\"math display\">\\[\nE(X)=\\int_{-\\infty}^\\infty xf(x)\\mathbf{d}x\n\\]</span> 为<span class=\"math inline\">\\(X\\)</span>的数学期望。</p>\n<h3 id=\"随机变量和的数学期望\">随机变量和的数学期望</h3>\n<p>若干个随机变量之和的期望等于各随机变量的期望之和，即 <span class=\"math display\">\\[\nE(X_1+X_2+\\cdots+X_n)=E(X_1)+E(X_2)+\\cdots+E(X_n).\n\\]</span></p>\n<h3 id=\"随机变量积的数学期望\">随机变量积的数学期望</h3>\n<p>若干个随机变量之积的期望等于各随机变量的期望之积，即 <span class=\"math display\">\\[\nE(X_1X_2\\cdots X_n)=E(X_1)E(X_2)\\cdots E(X_n).\n\\]</span></p>\n<h3 id=\"随机变量函数的数学期望\">随机变量函数的数学期望</h3>\n<p>设随机变量<span class=\"math inline\">\\(X\\)</span>为离散型，有分布<span class=\"math inline\">\\(P(X=a_i)=p_i(i=1,2,\\cdots)\\)</span>；或为连续型，有概率密度函数<span class=\"math inline\">\\(f(x)\\)</span>，则 <span class=\"math display\">\\[\nE(g(X))=\\sum\\limits_ig(a_i)p_i(当\\sum\\limits_i|g(a_i)|p_i&lt;\\infty 时),\n\\]</span> 或 <span class=\"math display\">\\[\nE(g(X))=\\int_{-\\infty}^\\infty g(x)f(x)\\mathrm{d}x(当\\int_{-\\infty}^\\infty |g(x)|f(x)\\mathrm{d}x时).\n\\]</span></p>\n<h3 id=\"条件数学期望条件均值\">条件数学期望（条件均值）</h3>\n<p>在给定了某些其他随机变量<span class=\"math inline\">\\(X,Z,\\cdots\\)</span>的值<span class=\"math inline\">\\(x,z,\\cdots\\)</span>的条件之下<span class=\"math inline\">\\(Y\\)</span>的条件期望，记为<span class=\"math inline\">\\(E(Y|X=x,Z=z,\\cdots)\\)</span>。以只有一个变量<span class=\"math inline\">\\(X\\)</span>为例，就是<span class=\"math inline\">\\(E(Y|X=x)\\)</span>。在<span class=\"math inline\">\\(X\\)</span>已明确而不致引起误解的情况下，也可简记为<span class=\"math inline\">\\(E(Y|x)\\)</span>。 <span class=\"math display\">\\[\nE(Y|x)=\\int_{-\\infty}^\\infty yf(y|x)\\mathrm{d}y.\n\\]</span></p>\n<h3 id=\"中位数\">中位数</h3>\n<p>设连续型随机变量<span class=\"math inline\">\\(X\\)</span>的分布函数为<span class=\"math inline\">\\(F(X)\\)</span>，则满足条件 <span class=\"math display\">\\[\nP(X\\leqslant m)=F(m)=\\frac{1}{2}\n\\]</span> 的数<span class=\"math inline\">\\(m\\)</span>称为<span class=\"math inline\">\\(X\\)</span>或分布<span class=\"math inline\">\\(F\\)</span>的中位数。</p>\n<h2 id=\"方差与矩\">方差与矩</h2>\n<h3 id=\"方差和标准差\">方差和标准差</h3>\n<p>设<span class=\"math inline\">\\(X\\)</span>为随机变量，分布为<span class=\"math inline\">\\(F\\)</span>，则 <span class=\"math display\">\\[\n\\mathrm{Var}(X)=E(X-EX)^2\n\\]</span> 称为<span class=\"math inline\">\\(X\\)</span>（或分布<span class=\"math inline\">\\(F\\)</span>）的方差，其算数平方根<span class=\"math inline\">\\(\\sqrt{\\mathrm{Var}(X)}\\)</span>称为<span class=\"math inline\">\\(X\\)</span>（或分布<span class=\"math inline\">\\(F\\)</span>）的标准差。</p>\n<h3 id=\"方差的基本性质\">方差的基本性质</h3>\n<ol type=\"1\">\n<li>常数的方差为<span class=\"math inline\">\\(0\\)</span>。</li>\n<li>若<span class=\"math inline\">\\(c\\)</span>为常数，则<span class=\"math inline\">\\(\\mathrm{Var}(X+c)=\\mathrm{Var}(X)\\)</span>。</li>\n<li>若<span class=\"math inline\">\\(c\\)</span>为常数，则<span class=\"math inline\">\\(\\mathrm{Var}(cX)=c^2\\mathrm{Var}(X)\\)</span>。</li>\n</ol>\n<h3 id=\"随机变量和的方差\">随机变量和的方差</h3>\n<p>独立随机变量之和的方差等于各变量的方差之和，即 <span class=\"math display\">\\[\n\\mathrm{Var}(X_1+\\cdots+X_n)=\\mathrm{Var(X_1)}+\\cdots+\\mathrm{Var}(X_n).\n\\]</span></p>\n<h3 id=\"矩\">矩</h3>\n<p>设<span class=\"math inline\">\\(X\\)</span>为随机变量，<span class=\"math inline\">\\(c\\)</span>为常数，<span class=\"math inline\">\\(k\\)</span>为正整数，则量<span class=\"math inline\">\\(E((X-c)^k)\\)</span>称为<span class=\"math inline\">\\(X\\)</span>关于<span class=\"math inline\">\\(c\\)</span>点的<span class=\"math inline\">\\(k\\)</span>阶矩。</p>\n<h2 id=\"协方差与相关系数\">协方差与相关系数</h2>\n<h3 id=\"协方差\">协方差</h3>\n<p>称 <span class=\"math display\">\\[\nE((X-E(X))(Y-E(Y)))\n\\]</span> 为<span class=\"math inline\">\\(X,Y\\)</span>的协方差，并记为<span class=\"math inline\">\\(\\mathrm{Cov}(X,Y)\\)</span>。</p>\n<h3 id=\"协方差的重要性质\">协方差的重要性质</h3>\n<ol type=\"1\">\n<li>若<span class=\"math inline\">\\(X,Y\\)</span>独立，则<span class=\"math inline\">\\(\\mathrm{Cov}(X,Y)=0\\)</span>。</li>\n<li><span class=\"math inline\">\\((\\mathrm{Cov}(X,Y))^2\\leqslant \\sigma_1^2\\sigma_2^2\\)</span>，等号当且仅当<span class=\"math inline\">\\(X,Y\\)</span>之间有严格线性关系（即存在常数<span class=\"math inline\">\\(a,b\\)</span>使<span class=\"math inline\">\\(Y=a+bX\\)</span>）时成立。</li>\n</ol>\n<h3 id=\"相关系数\">相关系数</h3>\n<p>称<span class=\"math inline\">\\(\\frac{\\mathrm{Cov}(X,Y)}{\\sigma_1\\sigma_2}\\)</span>为<span class=\"math inline\">\\(X,Y\\)</span>的相关系数，并记为<span class=\"math inline\">\\(\\mathrm{Corr}(X,Y)\\)</span>。</p>\n<h3 id=\"相关系数的重要性质\">相关系数的重要性质</h3>\n<ol type=\"1\">\n<li>若<span class=\"math inline\">\\(X,Y\\)</span>独立，则<span class=\"math inline\">\\(\\mathrm{Corr}(X,Y)=0\\)</span>。</li>\n<li><span class=\"math inline\">\\((-1\\leqslant\\mathrm{Corr}(X,Y)\\leqslant 1\\)</span>，等号当且仅当<span class=\"math inline\">\\(X,Y\\)</span>之间有严格线性关系时达到。</li>\n</ol>\n<h2 id=\"大数定理和中心极限定理\">大数定理和中心极限定理</h2>\n<h3 id=\"大数定理\">大数定理</h3>\n<p>设<span class=\"math inline\">\\(X_1,X_2,\\cdots,X_n,\\cdots\\)</span>是独立同分布的随机变量，记它们的公共均值为<span class=\"math inline\">\\(a\\)</span>，有设它们的方差存在并记为<span class=\"math inline\">\\(\\sigma^2\\)</span>，则对任意给定的<span class=\"math inline\">\\(\\varepsilon&gt;0\\)</span>，有 <span class=\"math display\">\\[\n\\lim\\limits_{n\\to\\infty}P(|\\overline{X_n}-a|\\geqslant\\varepsilon)=0.\n\\]</span></p>\n<h3 id=\"马尔科夫不等式\">马尔科夫不等式</h3>\n<p>若<span class=\"math inline\">\\(Y\\)</span>为只取非负值的随机变量，则对任给常数<span class=\"math inline\">\\(\\varepsilon&gt;0\\)</span>，有 <span class=\"math display\">\\[\nP(Y\\geqslant\\varepsilon)\\leqslant\\frac{E(Y)}{\\varepsilon}.\n\\]</span></p>\n<h3 id=\"契比雪夫不等式\">契比雪夫不等式</h3>\n<p>若<span class=\"math inline\">\\(\\mathrm{Var}(Y)\\)</span>存在，则 <span class=\"math display\">\\[\nP(|Y-EY|\\geqslant\\varepsilon)\\leqslant\\frac{\\mathrm{Var}(Y)}{\\varepsilon^2}.\n\\]</span></p>\n<h3 id=\"林德伯格定理\">林德伯格定理</h3>\n<p>设<span class=\"math inline\">\\(X_1,X_2,\\cdots,X_n,\\cdots\\)</span>为独立同分布的随机变量， <span class=\"math display\">\\[\nE(X_i)=a,\\mathrm{Var}(X_i)=\\sigma^2(0&lt;\\sigma^2&lt;\\infty),\n\\]</span> 则对任何实数<span class=\"math inline\">\\(x\\)</span>，有 <span class=\"math display\">\\[\n\\lim\\limits_{n\\to\\infty}P(\\frac{1}{\\sqrt{n}\\sigma}(X_1+\\cdots+X_n-na)\\leqslant x)=\\Phi(x).\n\\]</span> 这里，<span class=\"math inline\">\\(\\Phi(x)\\)</span>是标准正态分布<span class=\"math inline\">\\(N(0,1)\\)</span>的分布函数，即 <span class=\"math display\">\\[\n\\Phi(x)=\\frac{1}{\\sqrt{2\\pi}}\\int_{-\\infty}^{\\infty}e^{-\\frac{t^2}{2}}\\mathrm{d}t.\n\\]</span></p>\n<h3 id=\"历史上最早的中心极限定理\">历史上最早的中心极限定理</h3>\n<p>设<span class=\"math inline\">\\(X_1,X_2,\\cdots,X_n,\\cdots\\)</span>独立同分布，<span class=\"math inline\">\\(X_i\\)</span>的分布是 <span class=\"math display\">\\[\nP(X_i=1)=p,P(X_i=0)=1-p(0&lt;p&lt;1).\n\\]</span> 则对任何实数<span class=\"math inline\">\\(x\\)</span>，有 <span class=\"math display\">\\[\n\\lim\\limits_{n\\to\\infty}P(\\frac{1}{\\sqrt{np(1-p)}}(X_1+\\cdots+X_n-np)\\leqslant x)=\\Phi(x).\n\\]</span> 这里，<span class=\"math inline\">\\(\\Phi(x)\\)</span>是标准正态分布<span class=\"math inline\">\\(N(0,1)\\)</span>的分布函数，即 <span class=\"math display\">\\[\n\\Phi(x)=\\frac{1}{\\sqrt{2\\pi}}\\int_{-\\infty}^{\\infty}e^{-\\frac{t^2}{2}}\\mathrm{d}t.\n\\]</span></p>\n","categories":["Mathematics"],"tags":["Probability Theory"]},{"title":"Finite State Machine","url":"/2021/11/06/Finite-State-Machine/","content":"<p>数字电路实验报告《有限状态机》：</p>\n<span id=\"more\"></span>\n<p>移动端点击链接下载查看；</p>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/computer06_1.pdf\">Finite State Machine(1)</a></p>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/computer06_2.pdf\">Finite State Machine(2)</a></p>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/computer06_3.pdf\">Finite State Machine(3)</a></p>\n<p>PC端支持在线预览。</p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/computer06_1.pdf\" data-height=\"600px\"></div>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/computer06_2.pdf\" data-height=\"600px\"></div>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/computer06_3.pdf\" data-height=\"600px\"></div>\n","categories":["Computer Science"],"tags":["Digital Circuit"]},{"title":"Free-fall Method for Measuring Acceleration of Gravity","url":"/2021/04/04/Free-fall-Method-for-Measuring-Acceleration-of-Gravity/","content":"<p>大学物理基础实验 A 实验报告《自由落体法测重力加速度》：</p>\n<span id=\"more\"></span>\n<p>移动端点击链接下载查看；</p>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/physics02.pdf\">Free-fall Method for Measuring Acceleration of Gravity</a></p>\n<p>PC端支持在线预览。</p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/physics02.pdf\" data-height=\"600px\"></div>\n","categories":["Physics"],"tags":["Physical Experiment"]},{"title":"Graph Theoretic Computer Algorithm","url":"/2021/10/26/Graph-Theoretic-Computer-Algorithm/","content":"<p>图论算法在计算机科学中扮演着很重要的角色，它提供了对很多问题都有效的一种简单而系统的建模方式。本文简要介绍Dijkstra、Kruskal、Prim、Huffman、交错树、匈牙利、Kuhn-Munkreas、Fleury、逐步插入回路、Edmonds-Johnson、最近邻、最小生成树、最小权匹配、可增载轨道、Ford-Fulkerson最大流、容量有上下界网路的最大流及Warshall算法的操作步骤。</p>\n<span id=\"more\"></span>\n<h1 id=\"dijkstra算法最短路径问题\">Dijkstra算法——最短路径问题</h1>\n<ul>\n<li>输入：加权图<span class=\"math inline\">\\(G=(V(G),E(G)),\\omega:E(G)\\to R^+\\)</span>，顶点<span class=\"math inline\">\\(u_0\\in V(G)\\)</span>。</li>\n<li>输出：<span class=\"math inline\">\\(u_0\\)</span>到其余所有顶点的距离和最短路径。</li>\n</ul>\n<ol type=\"1\">\n<li>任给<span class=\"math inline\">\\(u,v\\in V(G)\\)</span>，若<span class=\"math inline\">\\(u,v\\notin E(G)\\)</span>，令<span class=\"math inline\">\\(\\omega(uv)=\\infty\\)</span>；</li>\n<li>令<span class=\"math inline\">\\(d(u_0)=0,l(u_0)=\\$\\)</span>；任给<span class=\"math inline\">\\(u\\in V(G)\\)</span>，<span class=\"math inline\">\\(u\\in V(G)\\)</span>，<span class=\"math inline\">\\(u\\notin u_0\\)</span>，<span class=\"math inline\">\\(d(u)=\\infty\\)</span>，<span class=\"math inline\">\\(l(u)=*\\)</span>；<span class=\"math inline\">\\(S_0={u_0}\\)</span>；<span class=\"math inline\">\\(i=0\\)</span>；</li>\n<li>对任给<span class=\"math inline\">\\(u\\in V(G)-S_i\\)</span>，若<span class=\"math inline\">\\(d(u_i)+\\omega(u_iu)\\lt d(u)\\)</span>，则令<span class=\"math inline\">\\(d(u)\\leftarrow d(u_i)+\\omega(u_iu)\\)</span>，且令<span class=\"math inline\">\\(l(u)=u_i\\)</span>；</li>\n<li>选出<span class=\"math inline\">\\(u_{i+1}\\in V(G)-S_i\\)</span>，使得<span class=\"math inline\">\\(d(u_{i+1})=\\min\\limits_{u\\in V(G)-S_i}d(u)\\)</span>，令<span class=\"math inline\">\\(S_{i+1}=S_i\\cup \\{u_{i+1}\\}\\)</span>；</li>\n<li>若<span class=\"math inline\">\\(i=\\nu(G)-1\\)</span>，算法停止；否则，令<span class=\"math inline\">\\(i\\leftarrow i+1\\)</span>，转步骤3。</li>\n</ol>\n<h1 id=\"kruskal算法最小生成树问题\">Kruskal算法——最小生成树问题</h1>\n<ul>\n<li>输入：加权图<span class=\"math inline\">\\(G=(V(G),E(G),\\omega)\\)</span>，<span class=\"math inline\">\\(\\nu=|V(G)|\\)</span>。</li>\n<li>输出：<span class=\"math inline\">\\(G\\)</span>的一颗生成树的边子集<span class=\"math inline\">\\(\\{e_1,e_2,\\cdots,e_{\\nu-1}\\}\\)</span>。</li>\n</ul>\n<ol type=\"1\">\n<li>从<span class=\"math inline\">\\(E(G)\\)</span>中选权最小的边<span class=\"math inline\">\\(e_1\\)</span>；</li>\n<li>若已经选定边<span class=\"math inline\">\\(e_1,e_2,\\cdots,e_i\\)</span>，则从<span class=\"math inline\">\\(E(G)-\\{e_1,e_2,\\cdots,e_i\\}\\)</span>中选出边<span class=\"math inline\">\\(e_{i+1}\\)</span>使得 (i)边导出子图<span class=\"math inline\">\\(G[\\{e_1,e_2,\\cdots,e_i,e_{i+1}\\}]\\)</span>不含圈； (ii)在满足(i)的条件下，<span class=\"math inline\">\\(\\omega(e_{i+1})\\)</span>的权最小，即<span class=\"math inline\">\\(\\omega(e_{i+1})=\\min\\limits_{e\\in E(G)-\\{e_1,e_2,\\cdots,e_i\\}}\\omega(e)\\)</span>。</li>\n<li>反复执行第2步，直到选出<span class=\"math inline\">\\(e_{\\nu-1}\\)</span>为止。</li>\n</ol>\n<h1 id=\"prim算法最小生成树问题\">Prim算法——最小生成树问题</h1>\n<ul>\n<li>输入：边权图<span class=\"math inline\">\\(G=(V(G),E(G),\\omega)\\)</span>，<span class=\"math inline\">\\(\\nu=|V(G)|\\)</span>。</li>\n<li>输出：<span class=\"math inline\">\\(G\\)</span>的一颗生成树的边子集<span class=\"math inline\">\\(E\\)</span>。</li>\n</ul>\n<ol type=\"1\">\n<li>从<span class=\"math inline\">\\(V(G)\\)</span>中任意选取一个顶点<span class=\"math inline\">\\(s\\)</span>，令<span class=\"math inline\">\\(V&#39;=\\{s\\}\\)</span>，<span class=\"math inline\">\\(E&#39;=\\emptyset\\)</span>；</li>\n<li>在<span class=\"math inline\">\\((V&#39;,\\overline{V&#39;})\\)</span>中选择一条权最小的边<span class=\"math inline\">\\(uv\\)</span>，其中<span class=\"math inline\">\\(u\\in V&#39;\\)</span>，<span class=\"math inline\">\\(v\\in \\overline{V&#39;}\\)</span>令<span class=\"math inline\">\\(V&#39;=V&#39;\\cup\\{u\\}\\)</span>，<span class=\"math inline\">\\(E&#39;=E&#39;\\cup\\{uv\\}\\)</span>；</li>\n<li>反复执行第2步，直到<span class=\"math inline\">\\(|V&#39;|=\\nu\\)</span>或<span class=\"math inline\">\\(|E&#39;|=\\nu-1\\)</span>为止。</li>\n</ol>\n<h1 id=\"huffman算法最优二叉树问题\">Huffman算法——最优二叉树问题</h1>\n<ul>\n<li>输入：给定实数<span class=\"math inline\">\\(w_1\\leqslant w_2\\leqslant \\cdots \\leqslant w_t\\)</span>。</li>\n<li>输出：带有权值<span class=\"math inline\">\\(w_1\\leqslant w_2\\leqslant \\cdots \\leqslant w_t\\)</span>的最优二叉树。</li>\n</ul>\n<ol type=\"1\">\n<li>连接以<span class=\"math inline\">\\(w_1,w_2\\)</span>为权的两片树叶，得到带权为<span class=\"math inline\">\\(w_1+w_2\\)</span>的分支点；</li>\n<li>在<span class=\"math inline\">\\(w_1+w_2,w_3,\\cdots.w_t\\)</span>中再取两个最小的权，连接它们对应的顶点，又得到新的分支点及所带的权。</li>\n<li>重复第2步，直到形成一棵树为止。</li>\n</ol>\n<h1 id=\"交错树算法最大匹配问题\">交错树算法——最大匹配问题</h1>\n<ul>\n<li>输入：二分图<span class=\"math inline\">\\(G(X,E,Y)\\)</span>，<span class=\"math inline\">\\(G\\)</span>的匹配<span class=\"math inline\">\\(M\\)</span>，<span class=\"math inline\">\\(G\\)</span>中没有被<span class=\"math inline\">\\(M\\)</span>许配的顶点<span class=\"math inline\">\\(u\\)</span>，不妨设<span class=\"math inline\">\\(u\\in X\\)</span>。</li>\n<li>输出：<span class=\"math inline\">\\(G\\)</span>中关于<span class=\"math inline\">\\(M\\)</span>的<span class=\"math inline\">\\(u-\\)</span>交错树<span class=\"math inline\">\\(T_u=(U,E&#39;,V&#39;)\\)</span>。</li>\n</ul>\n<ol type=\"1\">\n<li><p><span class=\"math inline\">\\(U=\\{u\\},E&#39;=\\emptyset,V=\\emptyset\\)</span>；令<span class=\"math inline\">\\(l_{pre}(u)=*\\)</span>；对<span class=\"math inline\">\\(G\\)</span>中所有的顶点<span class=\"math inline\">\\(v\\neq u\\)</span>，令<span class=\"math inline\">\\(l_{pre}(v)=NULL\\)</span>；对<span class=\"math inline\">\\(G\\)</span>中所有的顶点<span class=\"math inline\">\\(v\\)</span>（包括<span class=\"math inline\">\\(v\\)</span>），令<span class=\"math inline\">\\(l_{visited}(v)=0\\)</span>。</p></li>\n<li><p>若上一步中没有新的顶点加入<span class=\"math inline\">\\(U\\)</span>，算法停止；否则转第3步。</p></li>\n<li><p>若存在 <span class=\"math display\">\\[\nx\\in X,l_{pre}(x)\\neq NULL,l_{xisited}(x)=0,\n\\]</span> 则对<span class=\"math inline\">\\(Y\\)</span>中所有满足<span class=\"math inline\">\\(xy\\in E-M\\)</span>且<span class=\"math inline\">\\(l_{pre}(y)=NULL\\)</span>的顶点<span class=\"math inline\">\\(y\\)</span>，令<span class=\"math display\">\\[l_{pre}(y)=x;E&#39;\\leftarrow E&#39;\\cup\\{xy\\};U\\leftarrow U\\cup\\{x\\}\\]</span>；最后令<span class=\"math inline\">\\(l_{visited}(x)=1\\)</span>。</p></li>\n<li><p>若在第3步，在<span class=\"math inline\">\\(V\\)</span>中加入一个新的顶点<span class=\"math inline\">\\(y\\)</span>（同时也将<span class=\"math inline\">\\(l_{pre}(y)\\)</span>从<span class=\"math inline\">\\(NULL\\)</span>修改为<span class=\"math inline\">\\(x\\)</span>），且<span class=\"math inline\">\\(y\\)</span>没有被<span class=\"math inline\">\\(M\\)</span>许配，则已经找到可增广轨道，算法停止；若在第3步没有新的顶点加入<span class=\"math inline\">\\(V\\)</span>，算法停止；否则转到第5步。</p></li>\n<li><p>若存在 <span class=\"math display\">\\[\ny\\in Y,l_{pre}(y)\\neq NULL,l_{xisited}(y)=0,\n\\]</span> 则对<span class=\"math inline\">\\(Y\\)</span>中所有满足<span class=\"math inline\">\\(xy\\in M\\)</span>且<span class=\"math inline\">\\(l_{pre}(x)=NULL\\)</span>的顶点<span class=\"math inline\">\\(x\\)</span>，令<span class=\"math display\">\\[l_{pre}(x)=y;E&#39;\\leftarrow E&#39;\\cup\\{xy\\};U\\leftarrow U\\cup\\{x\\}\\]</span>；最后令<span class=\"math inline\">\\(l_{visited}(y)=1\\)</span>。转第2步。</p></li>\n</ol>\n<h1 id=\"匈牙利算法最大匹配问题\">匈牙利算法——最大匹配问题</h1>\n<ul>\n<li>输入：二分图<span class=\"math inline\">\\(G=(X,E,Y)\\)</span>.</li>\n<li>输出：<span class=\"math inline\">\\(G\\)</span>的最大匹配<span class=\"math inline\">\\(M\\)</span>。</li>\n</ul>\n<ol type=\"1\">\n<li>取<span class=\"math inline\">\\(G\\)</span>的一个初始匹配<span class=\"math inline\">\\(M\\)</span>，比如说<span class=\"math inline\">\\(M=\\emptyset\\)</span>。<span class=\"math inline\">\\(G&#39; \\leftarrow G\\)</span>。</li>\n<li>若<span class=\"math inline\">\\(G\\)</span>为空，或者<span class=\"math inline\">\\(G&#39;\\)</span>中的顶点都被<span class=\"math inline\">\\(M\\)</span>许配，算法停止；否则转第3步。</li>\n<li>取<span class=\"math inline\">\\(G\\)</span>中没有被<span class=\"math inline\">\\(M\\)</span>许配的顶点<span class=\"math inline\">\\(u\\)</span>，搜索<span class=\"math inline\">\\(u-\\)</span>交错树<span class=\"math inline\">\\(T_u\\)</span>，若找到可增广轨道，设为<span class=\"math inline\">\\(P\\)</span>，令<span class=\"math inline\">\\(M\\leftarrow M\\oplus E(P)\\)</span>，转第2步；否则，令<span class=\"math inline\">\\(G&#39;\\leftarrow G;-V(T)\\)</span>，转第2步。</li>\n</ol>\n<h1 id=\"kuhn-munkreas算法最佳匹配问题\">Kuhn-Munkreas算法——最佳匹配问题</h1>\n<ul>\n<li>输入：二分图<span class=\"math inline\">\\(G=(X,\\Delta,Y),|X|=|Y|\\)</span>，边权函数<span class=\"math inline\">\\(\\omega:\\Delta\\to R\\)</span>。</li>\n<li>输出：<span class=\"math inline\">\\(G\\)</span>的最佳匹配<span class=\"math inline\">\\(M\\)</span>。</li>\n</ul>\n<ol type=\"1\">\n<li><p>选取<span class=\"math inline\">\\(G\\)</span>的一个可行顶标<span class=\"math inline\">\\(l\\)</span>，构造相等子图<span class=\"math inline\">\\(G_l\\)</span>。</p></li>\n<li><p>用匈牙利算法求<span class=\"math inline\">\\(G_l\\)</span>的最大匹配，设为<span class=\"math inline\">\\(M\\)</span>。若<span class=\"math inline\">\\(M\\)</span>是<span class=\"math inline\">\\(G_l\\)</span>的完备匹配，则<span class=\"math inline\">\\(M\\)</span>是<span class=\"math inline\">\\(G\\)</span>的最佳匹配，算法停止；否则，转第3步。</p></li>\n<li><p>设<span class=\"math inline\">\\(u\\)</span>是<span class=\"math inline\">\\(G_l\\)</span>中未被<span class=\"math inline\">\\(M\\)</span>许配的顶点，不妨设<span class=\"math inline\">\\(u\\in X\\)</span>。令 <span class=\"math display\">\\[\nZ=\\{v|v\\in V(G_l),且u,v之间存在交错轨道\\},S=X\\cap Z,T=Y \\cap Z.\n\\]</span> 计算 <span class=\"math display\">\\[\n\\alpha_l=\\min\\limits_{x_i\\in S,y_i\\notin T}\\{l(x_i)+l(y_j)-\\omega((x_i,y_j))\\}.\n\\]</span> 按如下公式修改可行顶标： <span class=\"math display\">\\[\n\\hat{l}(v)=l(v)-\\alpha_l,v\\in S;l(v)+\\alpha_l,v\\in T;l(v),其它.\n\\]</span> 令<span class=\"math inline\">\\(l\\leftarrow \\hat{l}\\)</span>，转第1步。</p></li>\n</ol>\n<h1 id=\"fleury算法euler回路问题\">Fleury算法——Euler回路问题</h1>\n<ul>\n<li>输入：图<span class=\"math inline\">\\(G=(V(G),E(G))\\)</span>。</li>\n<li>输出：图<span class=\"math inline\">\\(G\\)</span>的一条行迹。</li>\n</ul>\n<ol type=\"1\">\n<li><p>任取<span class=\"math inline\">\\(v_0\\in V(G)\\)</span>，令<span class=\"math inline\">\\(P_0=v_0\\)</span>；</p></li>\n<li><p>假设沿<span class=\"math inline\">\\(P_i=v_0e_1v_1e_2\\cdots e_iv_i\\)</span>走到顶点<span class=\"math inline\">\\(v_i\\)</span>，按下面的方法从<span class=\"math inline\">\\(E(G)-\\{e_1,e_2,\\cdots,e_i\\}\\)</span>中选<span class=\"math inline\">\\(e_{i+1}\\)</span>：</p>\n<ol type=\"1\">\n<li><p><span class=\"math inline\">\\(e_{i+1}\\)</span>与<span class=\"math inline\">\\(v_i\\)</span>关联；</p></li>\n<li><p>除非无边可选，否则<span class=\"math inline\">\\(e_{i+1}\\)</span>不选<span class=\"math inline\">\\(G_i-\\{e_1,e_2,\\cdots,e_i\\}\\)</span>的桥。</p></li>\n</ol>\n<p>若选不到这样的<span class=\"math inline\">\\(e_i\\)</span>，则算法停止。</p></li>\n<li><p>设<span class=\"math inline\">\\(v_{i+1}\\)</span>是<span class=\"math inline\">\\(e_{i+1}\\)</span>关联的另一个顶点，令<span class=\"math display\">\\[P_{i+1}=v_0e_1v_1e_2\\cdots e_iv_ie_{i+1}v_{i+1},i\\leftarrow i+1\\]</span>​，转2.</p></li>\n</ol>\n<h1 id=\"逐步插入回路算法euler回路问题\">逐步插入回路算法——Euler回路问题</h1>\n<ul>\n<li>输入：Euler图<span class=\"math inline\">\\(G=(V(G),E(G))\\)</span>。</li>\n<li>输出：图<span class=\"math inline\">\\(G\\)</span>的一条Euler回路。</li>\n</ul>\n<ol type=\"1\">\n<li><p><span class=\"math display\">\\[\ni\\leftarrow 0,v^*=v_1,v=v_1,P_0=v_1,G_0=G;\n\\]</span></p></li>\n<li><p>在<span class=\"math inline\">\\(G_i\\)</span>中取与<span class=\"math inline\">\\(v\\)</span>关联的任意一条边<span class=\"math inline\">\\(e=vv&#39;\\)</span>，将<span class=\"math inline\">\\(e\\)</span>及<span class=\"math inline\">\\(v&#39;\\)</span>加入<span class=\"math inline\">\\(P_i\\)</span>中得到<span class=\"math inline\">\\(P_{i+1}=P_iev&#39;\\)</span>；</p></li>\n<li><p>若<span class=\"math inline\">\\(v&#39;=v^*\\)</span>，转4，否则<span class=\"math inline\">\\(i\\leftarrow i+1,v\\leftarrow v&#39;\\)</span>，转2；</p></li>\n<li><p>若<span class=\"math inline\">\\(E(P_{i+1})=E(G)\\)</span>，停止；否则，令<span class=\"math inline\">\\(G_{i+1}=G-E(P_{i+1})\\)</span>，在<span class=\"math inline\">\\(G_{i+1}\\)</span>中任取一条与<span class=\"math inline\">\\(P_{o+1}\\)</span>中某顶点<span class=\"math inline\">\\(v_k\\)</span>关联的边<span class=\"math inline\">\\(e\\)</span>，先将<span class=\"math inline\">\\(P_{i+1}\\)</span>改写成起点（终点）为<span class=\"math inline\">\\(v_k\\)</span>的简单回路，再置<span class=\"math inline\">\\(v^*=v_k,v=v_k,i\\leftarrow i+1\\)</span>，转2。</p></li>\n</ol>\n<h1 id=\"edmonds-johnson算法中国邮递员问题\">Edmonds-Johnson算法——中国邮递员问题</h1>\n<ul>\n<li>输入：加权图<span class=\"math inline\">\\(G=(V(G),E(G),W(G))\\)</span>。</li>\n<li>输出：图<span class=\"math inline\">\\(G\\)</span>的一条最优投递线路。</li>\n</ul>\n<ol type=\"1\">\n<li>若<span class=\"math inline\">\\(G\\)</span>中没有奇度顶点，令<span class=\"math inline\">\\(G^*=G\\)</span>，转2，否则求出<span class=\"math inline\">\\(G\\)</span>中度数为奇数的顶点集合<span class=\"math display\">\\[V_O=\\{v|v\\in V(G),deg(v)\\equiv 1(\\mod2) \\}\\]</span>，转3。</li>\n<li>求<span class=\"math inline\">\\(G^*\\)</span>中的Euler回路，停止。</li>\n<li>对<span class=\"math inline\">\\(V_O\\)</span>中的每对顶点<span class=\"math inline\">\\(u\\)</span>和<span class=\"math inline\">\\(v\\)</span>，用Dijkstra算法求出其在<span class=\"math inline\">\\(G\\)</span>中的最短距离<span class=\"math inline\">\\(dist_G(u,v)\\)</span>以及最短路径；</li>\n<li>以<span class=\"math inline\">\\(V_O\\)</span>为顶点集合构造带权完全图<span class=\"math inline\">\\(K_{|V_O|}\\)</span>，每条边<span class=\"math inline\">\\(uv\\)</span>的权为<span class=\"math inline\">\\(dist_G(u,v)\\)</span>；</li>\n<li>求带权完全图<span class=\"math inline\">\\(K_{|V_O|}\\)</span>的总权最小的完备匹配<span class=\"math inline\">\\(M\\)</span>；</li>\n<li>针对第5步求得的最小完备匹配中的每条边，给出其两个端点，将该两个端点在<span class=\"math inline\">\\(G\\)</span>中的最短路径上每一条边重复一遍，得到Euler图<span class=\"math inline\">\\(G^*\\)</span>，转2。</li>\n</ol>\n<h1 id=\"最近邻法旅行商问题\">最近邻法——旅行商问题</h1>\n<ul>\n<li>输入：加权图<span class=\"math inline\">\\(G=(V(G),E(G),W(G))\\)</span>，顶点<span class=\"math inline\">\\(v_1\\)</span>。</li>\n<li>输出：图<span class=\"math inline\">\\(G\\)</span>的一条Hamilton圈。</li>\n</ul>\n<ol type=\"1\">\n<li>从访问<span class=\"math inline\">\\(v_1\\)</span>开始，形成初始轨道<span class=\"math inline\">\\(P_1=v_1\\)</span>；</li>\n<li>若已经访问了第<span class=\"math inline\">\\(k(k\\leqslant \\nu-1)\\)</span>个顶点，形成轨道<span class=\"math inline\">\\(P_k=v_1v_2\\cdots v_k\\)</span>，从<span class=\"math inline\">\\(V-\\{v_1,v_2,\\cdots,v_k\\}\\)</span>中选取与<span class=\"math inline\">\\(v_k\\)</span>最近的顶点作为下一步访问的顶点<span class=\"math inline\">\\(v_{k+1}\\)</span>；</li>\n<li>当访问完<span class=\"math inline\">\\(G\\)</span>中所有顶点后，形成轨道<span class=\"math inline\">\\(P_\\nu=v_1v_2\\cdots v_\\nu\\)</span>，再回到起点<span class=\"math inline\">\\(v_1\\)</span>得到图<span class=\"math inline\">\\(H=v_1v_2\\cdots v_\\nu v_1\\)</span>，此即为<span class=\"math inline\">\\(G\\)</span>中的一条Hamilton圈，把它作为旅行商问题的近似解。</li>\n</ol>\n<h1 id=\"最小生成树法旅行商问题\">最小生成树法——旅行商问题</h1>\n<ul>\n<li>输入：加权图<span class=\"math inline\">\\(G=(V(G),E(G),W(G))\\)</span>。</li>\n<li>输出：图<span class=\"math inline\">\\(G\\)</span>的一条Hamilton圈。</li>\n</ul>\n<ol type=\"1\">\n<li>求<span class=\"math inline\">\\(G\\)</span>的一棵最小生成树<span class=\"math inline\">\\(T\\)</span>；</li>\n<li>将<span class=\"math inline\">\\(T\\)</span>中各边都添加一条平行边，平行边的权与其对应边的权相同。设所得图为<span class=\"math inline\">\\(G^*\\)</span>，则<span class=\"math inline\">\\(G^*\\)</span>为Euler图；</li>\n<li>从某顶点<span class=\"math inline\">\\(v\\)</span>出发，求<span class=\"math inline\">\\(G\\)</span>中一条Euler回路<span class=\"math inline\">\\(C_v\\)</span>；</li>\n<li>在<span class=\"math inline\">\\(G\\)</span>中按下面的方法求从顶点<span class=\"math inline\">\\(v\\)</span>出发的Hamilton圈。从点<span class=\"math inline\">\\(v\\)</span>出发沿<span class=\"math inline\">\\(C_v\\)</span>“抄近路”访问<span class=\"math inline\">\\(G\\)</span>的各顶点，即：假定当前访问过的顶点为<span class=\"math inline\">\\(x\\)</span>，<span class=\"math inline\">\\(C_v\\)</span>上<span class=\"math inline\">\\(x\\)</span>的后续两个顶点分别为<span class=\"math inline\">\\(v\\)</span>与<span class=\"math inline\">\\(w\\)</span>，若<span class=\"math inline\">\\(y\\)</span>在此之前已经被访问，则直接从<span class=\"math inline\">\\(x\\)</span>经过边<span class=\"math inline\">\\(xw\\)</span>访问<span class=\"math inline\">\\(w\\)</span>，直到访问完所有顶点为止。最后走出一条<span class=\"math inline\">\\(G\\)</span>的一条Hamilton圈<span class=\"math inline\">\\(H_\\nu\\)</span>，就是<span class=\"math inline\">\\(G\\)</span>的最优解的近似解。</li>\n</ol>\n<h1 id=\"最小权匹配法旅行商问题\">最小权匹配法——旅行商问题</h1>\n<ul>\n<li>输入：加权图<span class=\"math inline\">\\(G=(V(G),E(G),W(G))\\)</span>，顶点<span class=\"math inline\">\\(v_1\\)</span>。</li>\n<li>输出：图<span class=\"math inline\">\\(G\\)</span>的一条Hamilton圈。</li>\n</ul>\n<ol type=\"1\">\n<li>求<span class=\"math inline\">\\(G\\)</span>的一棵最小生成树<span class=\"math inline\">\\(T\\)</span>；</li>\n<li>设<span class=\"math inline\">\\(T\\)</span>中度为奇数的顶点集合为<span class=\"math inline\">\\(V_O=\\{v_1,v_2,\\cdots,v_{2k}\\}\\)</span>，求<span class=\"math inline\">\\(V_O\\)</span>的导出子图<span class=\"math inline\">\\(G[V_O]=K_{2k}\\)</span>中总权最小的完备匹配<span class=\"math inline\">\\(M\\)</span>，将<span class=\"math inline\">\\(M\\)</span>中的<span class=\"math inline\">\\(k\\)</span>条边加到<span class=\"math inline\">\\(T\\)</span>上，得到Euler图<span class=\"math inline\">\\(G^*\\)</span>;</li>\n<li>在<span class=\"math inline\">\\(G^*\\)</span>中求从某顶点<span class=\"math inline\">\\(v\\)</span>出发的一条Euler回路<span class=\"math inline\">\\(C_v\\)</span>；</li>\n<li>在<span class=\"math inline\">\\(G\\)</span>中，从<span class=\"math inline\">\\(v\\)</span>出发，沿<span class=\"math inline\">\\(C_v\\)</span>中的边按“抄近路法”走出Hamilton圈<span class=\"math inline\">\\(H_\\nu\\)</span>。</li>\n</ol>\n<h1 id=\"可增载轨道算法最大流问题\">可增载轨道算法——最大流问题</h1>\n<ul>\n<li>输入：网络<span class=\"math inline\">\\(N=(D,s,t,c)\\)</span>，流函数<span class=\"math inline\">\\(f\\)</span>。</li>\n<li>输出：一条可增载轨道，或指出当前流函数是最大流。</li>\n</ul>\n<ol type=\"1\">\n<li><span class=\"math inline\">\\(S=\\{s\\}\\)</span>，令<span class=\"math inline\">\\(prev(s)=*\\)</span>。</li>\n<li>若<span class=\"math inline\">\\(t\\in S\\)</span>，则已经找到可增载轨道，通过<span class=\"math inline\">\\(prev(t)\\)</span>回溯输出可增载轨道，算法停止；否则，转第3步。</li>\n<li>若存在<span class=\"math inline\">\\(u\\in S\\)</span>，<span class=\"math inline\">\\(v\\in\\overline S\\)</span>，使得<span class=\"math inline\">\\((u,v)\\in E(D)\\)</span>且边<span class=\"math inline\">\\((u,v)\\)</span>未满载，即<span class=\"math inline\">\\(f((u,v))&lt;c((u,v))\\)</span>（<span class=\"math inline\">\\((u,v)\\)</span>是正向边），则令<span class=\"math inline\">\\(S\\leftarrow S\\cup\\{v\\},prev(v)=u\\)</span>，转第2步；否则，转第4步。</li>\n<li>若存在<span class=\"math inline\">\\(u\\in S，v\\in\\overline S\\)</span>，使得<span class=\"math inline\">\\((u,v)\\in E(D)\\)</span>且边<span class=\"math inline\">\\((u,v)\\)</span>正载，即<span class=\"math inline\">\\(f((u,v))》c((u,v))\\)</span>（<span class=\"math inline\">\\((u,v)\\)</span>是反向边），则令<span class=\"math inline\">\\(S\\leftarrow S\\cup\\{v\\},prev(v)=u\\)</span>，转第2步；否则，输出无可增载轨道，算法停止。</li>\n</ol>\n<h1 id=\"ford-fulkerson最大流算法最大流问题\">Ford-Fulkerson最大流算法——最大流问题</h1>\n<ul>\n<li>输入：网络<span class=\"math inline\">\\(N=(D,s,t,c)\\)</span>。</li>\n<li>输出：最大流函数<span class=\"math inline\">\\(f\\)</span>。</li>\n</ul>\n<ol type=\"1\">\n<li><p>取初始流函数<span class=\"math inline\">\\(f\\)</span>。</p></li>\n<li><p>调用可增载轨道算法。若找到可增载轨道<span class=\"math inline\">\\(P(s,t)\\)</span>，则构造新的流函数<span class=\"math inline\">\\(\\overline f\\)</span>如下： <span class=\"math display\">\\[\n\\overline f(e)=f(e)+l(P),e是正向边;f(e)-l(P),e是反向边;f(e)，其它.\n\\]</span> 令<span class=\"math inline\">\\(f\\leftarrow\\overline f\\)</span>，转第2步。否则，没有找到可增载轨道，输出<span class=\"math inline\">\\(f\\)</span>是最大流。停止。</p></li>\n</ol>\n<h1 id=\"容量有上下界网路的最大流算法最大流问题\">容量有上下界网路的最大流算法——最大流问题</h1>\n<ul>\n<li>输入：容量有上下界网络<span class=\"math inline\">\\(N=(D,s,t,b,c)\\)</span>。</li>\n<li>输出：最大流函数<span class=\"math inline\">\\(f\\)</span>，或断定<span class=\"math inline\">\\(N\\)</span>没有可行流。</li>\n</ul>\n<ol type=\"1\">\n<li>构造<span class=\"math inline\">\\(N\\)</span>的伴随网络<span class=\"math inline\">\\(N&#39;=(D&#39;,s&#39;,t&#39;,c&#39;)\\)</span>。</li>\n<li>用2F算法求出<span class=\"math inline\">\\(N&#39;\\)</span>的最大流函数<span class=\"math inline\">\\(f&#39;\\)</span>。</li>\n<li>若<span class=\"math inline\">\\(f&#39;\\)</span>满足，任给<span class=\"math inline\">\\(v\\in V(D)\\)</span>，<span class=\"math inline\">\\(f&#39;\\)</span>使得边<span class=\"math inline\">\\((s&#39;,v)\\)</span>满载，即<span class=\"math inline\">\\(f&#39;((s&#39;,v))=c&#39;((s&#39;,v))\\)</span>，则转第4步；否则，输出结论“<span class=\"math inline\">\\(N\\)</span>没有可行流”，算法停止。</li>\n<li>根据<span class=\"math inline\">\\(f&#39;\\)</span>，构造<span class=\"math inline\">\\(N\\)</span>的一个可行流<span class=\"math inline\">\\(f\\)</span>：任给<span class=\"math inline\">\\(e\\in E(D)\\)</span>，<span class=\"math inline\">\\(f(e)=f&#39;(e)+b(e)\\)</span>；</li>\n<li>以<span class=\"math inline\">\\(f\\)</span>作为初始流函数，用2F算法求出<span class=\"math inline\">\\(N\\)</span>的最大流，算法停止。</li>\n</ol>\n<h1 id=\"warshall算法邻接矩阵问题\">Warshall算法——邻接矩阵问题</h1>\n<ul>\n<li>输入：有向图<span class=\"math inline\">\\(D\\)</span>的邻接矩阵<span class=\"math inline\">\\(A(D)=(a_{ij})_{\\nu\\times\\nu}\\)</span>。</li>\n<li>输出：可达性矩阵<span class=\"math inline\">\\(R(D)=(r_{ij})_{\\nu\\times\\nu}\\)</span>。若<span class=\"math inline\">\\(v_i\\)</span>在<span class=\"math inline\">\\(G\\)</span>中可达<span class=\"math inline\">\\(v_j\\)</span>，则<span class=\"math inline\">\\(r_{ij}=1\\)</span>；否则<span class=\"math inline\">\\(r_{ij}=0\\)</span>。</li>\n</ul>\n<ol type=\"1\">\n<li><p>对所有<span class=\"math inline\">\\(1\\leqslant i,j\\leqslant\\nu\\)</span>，若<span class=\"math inline\">\\(a_{ij}&gt;0\\)</span>，令<span class=\"math inline\">\\(r_{ij}^0=1\\)</span>；否则<span class=\"math inline\">\\(a_{ij}=0\\)</span>，令<span class=\"math inline\">\\(r_{ij}^0=0\\)</span>；令<span class=\"math inline\">\\(l=0\\)</span>；</p></li>\n<li><p>若<span class=\"math inline\">\\(l=\\nu\\)</span>，输出 <span class=\"math display\">\\[\nR(D)=(r_{ij})_{\\nu\\times\\nu}=(r_{ij}^\\nu)_{\\nu\\times\\nu,}\n\\]</span> 算法停止；否则转第3步。</p></li>\n<li><p>对所有的<span class=\"math inline\">\\(1\\leqslant i\\leqslant\\nu\\)</span>，若<span class=\"math inline\">\\(r_{i(l+1)}^l=1\\)</span>，则对所有的<span class=\"math inline\">\\(1\\leqslant j\\leqslant\\nu\\)</span>，令<span class=\"math inline\">\\(r_{ij}^{l+1}=r_{ij}^l\\vee r_{(l+1)j}^l\\)</span>；否则令<span class=\"math inline\">\\(r_{ij}^{l+1}=r_{ij}^l\\)</span>。转第4步。</p></li>\n<li><p>令<span class=\"math inline\">\\(l\\leftarrow l+1\\)</span>，转第2步。</p></li>\n</ol>\n","categories":["Mathematics"],"tags":["Graph Theory"]},{"title":"Graph Theory Theorem","url":"/2022/01/03/Graph-Theory-Theorem/","content":"<p>图论是应用数学的一个分支，它是反映一些元素之间关系的数学模型。图论的概念于成果以及它的应用非常广泛，既有来自生产实践的许多应用问题，也有许多来自其他学科的理论问题。这里介绍图论的基本定理。</p>\n<span id=\"more\"></span>\n<h1 id=\"图的基本概念\">图的基本概念</h1>\n<h2 id=\"euler定理\">Euler定理</h2>\n<p>任给无向图<span class=\"math inline\">\\(G\\)</span>， <span class=\"math display\">\\[\n\\sum\\limits_{v\\in V(G)}\\deg(v)=2\\varepsilon(G).\n\\]</span></p>\n<h2 id=\"二分图的充要条件\">二分图的充要条件</h2>\n<p>图<span class=\"math inline\">\\(G\\)</span>是二分图，当且仅当<span class=\"math inline\">\\(G\\)</span>中无奇圈。</p>\n<h2 id=\"有向图的euler定理\">有向图的Euler定理</h2>\n<p><span class=\"math display\">\\[\n\\sum\\limits_{v\\in V(D)}\\deg^+(v)=\\sum\\limits_{v\\in V(G)}\\deg^-(v)=\\varepsilon(G).\n\\]</span></p>\n<h1 id=\"树\">树</h1>\n<h2 id=\"树的充要条件\">树的充要条件</h2>\n<p>设<span class=\"math inline\">\\(G=(V(G),E(G))\\)</span>是简单无向图，则一下命题等价：</p>\n<ol type=\"1\">\n<li><span class=\"math inline\">\\(G\\)</span>是树。</li>\n<li><span class=\"math inline\">\\(G\\)</span>的任意两个顶点之间有且仅有一条轨道。</li>\n<li><span class=\"math inline\">\\(G\\)</span>不含圈，且<span class=\"math inline\">\\(\\varepsilon(G)=\\nu(G)-1\\)</span>。</li>\n<li><span class=\"math inline\">\\(G\\)</span>是连通图，且<span class=\"math inline\">\\(\\varepsilon(G)=\\nu(G)-1\\)</span>。</li>\n<li><span class=\"math inline\">\\(G\\)</span>是连通图，且删去任意一条边都不连通。</li>\n<li><span class=\"math inline\">\\(G\\)</span>不含圈，且添加一条边后恰好含一个圈。</li>\n</ol>\n<h2 id=\"树叶的个数\">树叶的个数</h2>\n<p>任一非平凡树<span class=\"math inline\">\\(T\\)</span>至少有两片树叶。</p>\n<h2 id=\"树与连通图\">树与连通图</h2>\n<p>每个连通图都有生成树。</p>\n<h2 id=\"cayley定理\">Cayley定理</h2>\n<p>设<span class=\"math inline\">\\(G\\)</span>是连通图，<span class=\"math inline\">\\(e=uv\\in E(G)\\)</span>且不是环，则 <span class=\"math display\">\\[\n\\tau(G)=\\tau(G-e)+\\tau(G\\cdot e).\n\\]</span></p>\n<h2 id=\"完全图的生成树\">完全图的生成树</h2>\n<p><span class=\"math display\">\\[\n\\tau(K_n)=n^{n-2}.\n\\]</span></p>\n<h2 id=\"二叉树的性质\">二叉树的性质</h2>\n<p>二叉树有以下性质：</p>\n<ol type=\"1\">\n<li>第<span class=\"math inline\">\\(i\\)</span>层的顶点数最多是<span class=\"math inline\">\\(2^i\\)</span>；</li>\n<li>深度为<span class=\"math inline\">\\(h\\)</span>的二叉树最多有<span class=\"math inline\">\\(2^{h+1}-1\\)</span>个顶点；</li>\n<li>设二叉树出度为<span class=\"math inline\">\\(2\\)</span>的顶点数为<span class=\"math inline\">\\(n_2\\)</span>，树叶数为<span class=\"math inline\">\\(n_0\\)</span>，则有<span class=\"math inline\">\\(n_0=n_2+1\\)</span>；</li>\n<li>包含<span class=\"math inline\">\\(n\\)</span>个顶点的二叉树的高度至少为<span class=\"math inline\">\\(\\log(n+1)-1\\)</span>。</li>\n</ol>\n<h1 id=\"图的连通性\">图的连通性</h1>\n<h2 id=\"menger定理顶点版本\">Menger定理顶点版本</h2>\n<p>给定简单图<span class=\"math inline\">\\(G\\)</span>中两个不相邻的顶点<span class=\"math inline\">\\(u,v\\)</span>，<span class=\"math inline\">\\(G\\)</span>中两两无公共内顶的<span class=\"math inline\">\\(uv\\)</span>-轨道的最大数量等于最小<span class=\"math inline\">\\(uv\\)</span>-割集中的顶点数，即： <span class=\"math display\">\\[\np(u,v)=c(u,v).\n\\]</span></p>\n<h2 id=\"whitney定理\">Whitney定理</h2>\n<p>任给简单图<span class=\"math inline\">\\(G\\)</span>，都有： <span class=\"math display\">\\[\n\\kappa(G)=\\min\\{p(u,v)|u,v\\in V(G),u\\neq v\\}.\n\\]</span></p>\n<h2 id=\"扇形引理\">扇形引理</h2>\n<p>假设简单图<span class=\"math inline\">\\(G\\)</span>是<span class=\"math inline\">\\(k\\)</span>-连通图，在<span class=\"math inline\">\\(G\\)</span>中增加一个新的顶点<span class=\"math inline\">\\(y\\)</span>，并且在<span class=\"math inline\">\\(G\\)</span>中任意选取至少<span class=\"math inline\">\\(k\\)</span>个顶点，将<span class=\"math inline\">\\(y\\)</span>与这些选取的顶点各连一条边，得到的图记为<span class=\"math inline\">\\(H\\)</span>，则<span class=\"math inline\">\\(H\\)</span>也是<span class=\"math inline\">\\(k\\)</span>-连通图。</p>\n<h2 id=\"dirac定理\">Dirac定理</h2>\n<p>设<span class=\"math inline\">\\(S\\)</span>是<span class=\"math inline\">\\(k\\)</span>-连通图<span class=\"math inline\">\\(G\\)</span>中的<span class=\"math inline\">\\(k\\)</span>元顶点子集，<span class=\"math inline\">\\(k\\geqslant 2\\)</span>，则<span class=\"math inline\">\\(G\\)</span>中存在一个圈<span class=\"math inline\">\\(C\\)</span>，使得<span class=\"math inline\">\\(S\\)</span>中所有顶点都在<span class=\"math inline\">\\(C\\)</span>上。</p>\n<h2 id=\"menger定理边版本\">Menger定理边版本</h2>\n<p>给定简单图<span class=\"math inline\">\\(G\\)</span>中两个不相邻的顶点<span class=\"math inline\">\\(u,v\\)</span>，<span class=\"math inline\">\\(G\\)</span>中两两无公共边的<span class=\"math inline\">\\(uv\\)</span>-轨道的最大数量等于最小<span class=\"math inline\">\\(uv\\)</span>-边割集中的顶点数，即： <span class=\"math display\">\\[\np&#39;(u,v)=c&#39;(u,v).\n\\]</span></p>\n<h2 id=\"两种连通度的关系\">两种连通度的关系</h2>\n<p>假定<span class=\"math inline\">\\(G\\)</span>是简单连通图，则有： <span class=\"math display\">\\[\n\\kappa(G)\\leqslant\\kappa&#39;(G)\\leqslant\\delta(G).\n\\]</span></p>\n<h2 id=\"割顶的性质\">割顶的性质</h2>\n<p>设<span class=\"math inline\">\\(G\\)</span>是连通图，<span class=\"math inline\">\\(v\\in V(G)\\)</span>，则下述命题等价：</p>\n<ol type=\"1\">\n<li><p><span class=\"math inline\">\\(v\\)</span>是<span class=\"math inline\">\\(G\\)</span>的割顶；</p></li>\n<li><p>存在与<span class=\"math inline\">\\(v\\)</span>不同的两个顶点<span class=\"math inline\">\\(u,w\\in V(G)-\\{v\\}\\)</span>，使得<span class=\"math inline\">\\(v\\)</span>在每一条从<span class=\"math inline\">\\(u\\)</span>到<span class=\"math inline\">\\(w\\)</span>的轨道上；</p></li>\n<li><p>存在<span class=\"math inline\">\\(V(G)-\\{v\\}\\)</span>的一个划分 <span class=\"math display\">\\[\nV(G)-\\{v\\}=U\\cup W,U\\cap W=\\emptyset,u\\neq\\emptyset,W\\neq\\emptyset,\n\\]</span> 使得任给<span class=\"math inline\">\\(u\\in U,w\\in W\\)</span>，<span class=\"math inline\">\\(v\\)</span>在每一条从<span class=\"math inline\">\\(u\\)</span>到<span class=\"math inline\">\\(w\\)</span>的轨道上。</p></li>\n</ol>\n<h2 id=\"桥的性质\">桥的性质</h2>\n<p>设<span class=\"math inline\">\\(G\\)</span>是连通图，<span class=\"math inline\">\\(e\\in E(G)\\)</span>，则下述命题等价：</p>\n<ol type=\"1\">\n<li><p><span class=\"math inline\">\\(e\\)</span>是<span class=\"math inline\">\\(G\\)</span>的桥；</p></li>\n<li><p><span class=\"math inline\">\\(e\\)</span>不在<span class=\"math inline\">\\(G\\)</span>的任一圈上；</p></li>\n<li><p>存在<span class=\"math inline\">\\(u,w\\in V(G)\\)</span>，使得<span class=\"math inline\">\\(e\\)</span>在每一条从<span class=\"math inline\">\\(u\\)</span>到<span class=\"math inline\">\\(w\\)</span>的轨道上；</p></li>\n<li><p>存在<span class=\"math inline\">\\(V(G)\\)</span>的一个划分 <span class=\"math display\">\\[\nV(G)=U\\cup W,U\\cap W=\\emptyset,u\\neq\\emptyset,W\\neq\\emptyset,\n\\]</span> 使得任给<span class=\"math inline\">\\(u\\in U,w\\in W\\)</span>，<span class=\"math inline\">\\(e\\)</span>在每一条从<span class=\"math inline\">\\(u\\)</span>到<span class=\"math inline\">\\(w\\)</span>的轨道上。</p></li>\n</ol>\n<h2 id=\"块的性质\">块的性质</h2>\n<p>设<span class=\"math inline\">\\(G\\)</span>是连通图，<span class=\"math inline\">\\(\\nu(G)\\geqslant3\\)</span>，则下述命题等价：</p>\n<ol type=\"1\">\n<li><span class=\"math inline\">\\(G\\)</span>是块。</li>\n<li>任给<span class=\"math inline\">\\(u,v\\in V(G)，u\\neq v\\)</span>，<span class=\"math inline\">\\(u\\)</span>与<span class=\"math inline\">\\(v\\)</span>在<span class=\"math inline\">\\(G\\)</span>的同一个圈上。</li>\n<li>任给<span class=\"math inline\">\\(u\\in V(G)\\)</span>，<span class=\"math inline\">\\(e\\in E(G)\\)</span>，<span class=\"math inline\">\\(u\\)</span>与<span class=\"math inline\">\\(e\\)</span>在<span class=\"math inline\">\\(G\\)</span>的同一个圈上。</li>\n<li>任给<span class=\"math inline\">\\(e_1,e_2\\in E(G)，e_1\\neq e_2\\)</span>，<span class=\"math inline\">\\(e_1\\)</span>与<span class=\"math inline\">\\(e_2\\)</span>在<span class=\"math inline\">\\(G\\)</span>的同一个圈上。</li>\n<li>任给<span class=\"math inline\">\\(u,v\\in V(G)，u\\neq v,e\\in E(G)\\)</span>，存在连接<span class=\"math inline\">\\(u\\)</span>与<span class=\"math inline\">\\(v\\)</span>的轨道<span class=\"math inline\">\\(P(u,v)\\)</span>，使得<span class=\"math inline\">\\(e\\)</span>在<span class=\"math inline\">\\(P(u,v)\\)</span>上，即<span class=\"math inline\">\\(e\\in E(P(u,v))\\)</span>。</li>\n<li>任给三个不同的顶点<span class=\"math inline\">\\(u,v,w\\in V(G)\\)</span>，存在连接<span class=\"math inline\">\\(u\\)</span>与<span class=\"math inline\">\\(v\\)</span>的轨道<span class=\"math inline\">\\(P(u,v)\\)</span>，使得<span class=\"math inline\">\\(w\\)</span>在轨道<span class=\"math inline\">\\(P(u,v)\\)</span>上。</li>\n<li>任给三个不同的顶点<span class=\"math inline\">\\(u,v,w\\in V(G)\\)</span>，存在连接<span class=\"math inline\">\\(u\\)</span>与<span class=\"math inline\">\\(v\\)</span>的轨道<span class=\"math inline\">\\(P(u,v)\\)</span>，使得<span class=\"math inline\">\\(w\\)</span>不在轨道<span class=\"math inline\">\\(P(u,v)\\)</span>上。</li>\n</ol>\n<h1 id=\"平面图\">平面图</h1>\n<h2 id=\"可嵌入平面与可嵌入球面\">可嵌入平面与可嵌入球面</h2>\n<p>图<span class=\"math inline\">\\(G\\)</span>可嵌入平面，当且仅当<span class=\"math inline\">\\(G\\)</span>可嵌入球面。</p>\n<h2 id=\"平面嵌入的外部面\">平面嵌入的外部面</h2>\n<p>设<span class=\"math inline\">\\(v\\)</span>是平面图<span class=\"math inline\">\\(G\\)</span>的顶点，则存在<span class=\"math inline\">\\(G\\)</span>的一个平面嵌入，使得<span class=\"math inline\">\\(v\\)</span>在这个嵌入的外部面上。</p>\n<h2 id=\"面的度数与边数的关系\">面的度数与边数的关系</h2>\n<p>任给平面图<span class=\"math inline\">\\(G\\)</span>， <span class=\"math display\">\\[\n\\sum\\limits_{f\\in F(G)}\\deg(f)=2|E(G)|.\n\\]</span></p>\n<h2 id=\"euler公式\">Euler公式</h2>\n<p>设<span class=\"math inline\">\\(G\\)</span>是联通平图，有<span class=\"math inline\">\\(\\nu\\)</span>个顶点，<span class=\"math inline\">\\(\\varepsilon\\)</span>条边，<span class=\"math inline\">\\(\\phi\\)</span>个面，则 <span class=\"math display\">\\[\n\\nu-\\varepsilon+\\phi=2.\n\\]</span></p>\n<h2 id=\"平面图边数上界\">平面图边数上界</h2>\n<p>若<span class=\"math inline\">\\(G\\)</span>是<span class=\"math inline\">\\(\\nu\\geqslant3\\)</span>的连通平面图，则<span class=\"math inline\">\\(\\varepsilon\\leqslant3\\nu-6\\)</span></p>\n<h2 id=\"连通简单平面图顶点最小度的上界\">连通简单平面图顶点最小度的上界</h2>\n<p>若<span class=\"math inline\">\\(G\\)</span>是连通简单平面图，则<span class=\"math inline\">\\(\\delta\\leqslant5\\)</span>。</p>\n<h2 id=\"极大平面图的充要条件\">极大平面图的充要条件</h2>\n<p><span class=\"math inline\">\\(\\nu\\geqslant3\\)</span>的平面图<span class=\"math inline\">\\(G\\)</span>是极大平面图，当且仅当<span class=\"math inline\">\\(G\\)</span>的平面嵌入的每个面都是三角形。</p>\n<h2 id=\"极大平面图顶点最小度的下界\">极大平面图顶点最小度的下界</h2>\n<p>若<span class=\"math inline\">\\(G\\)</span>是<span class=\"math inline\">\\(\\nu\\geqslant3\\)</span>的平面图，则<span class=\"math inline\">\\(\\delta \\geqslant 3\\)</span>。</p>\n<h2 id=\"kuratowsky定理\">Kuratowsky定理</h2>\n<p>图<span class=\"math inline\">\\(G\\)</span>是平面图，当且仅当<span class=\"math inline\">\\(G\\)</span>中不含与<span class=\"math inline\">\\(K_5\\)</span>或<span class=\"math inline\">\\(K_{3,3}\\)</span>同胚的子图。</p>\n<h2 id=\"简单图厚度估计\">简单图厚度估计</h2>\n<p>对<span class=\"math inline\">\\(\\nu\\geqslant3\\)</span>阶简单图<span class=\"math inline\">\\(G\\)</span>的厚度<span class=\"math inline\">\\(\\theta(G)\\)</span>，有以下估计式：</p>\n<ol type=\"1\">\n<li><p><span class=\"math display\">\\[\n\\theta(G)\\geqslant\\lceil\\frac\\varepsilon{3\\nu-6}\\rceil.\n\\]</span></p></li>\n<li><p>若连通图<span class=\"math inline\">\\(G\\)</span>中没有<span class=\"math inline\">\\(3\\)</span>阶圈，则 <span class=\"math display\">\\[\n\\theta(G)\\geqslant\\lceil\\frac\\varepsilon{2\\nu-4}\\rceil.\n\\]</span></p></li>\n<li><p><span class=\"math display\">\\[\n\\theta(K_\\nu)\\geqslant\\lceil\\frac{\\nu+7}6\\rceil.\n\\]</span></p></li>\n</ol>\n<h1 id=\"匹配理论\">匹配理论</h1>\n<h2 id=\"最大匹配与可增广轨道\">最大匹配与可增广轨道</h2>\n<p><span class=\"math inline\">\\(M\\)</span>是<span class=\"math inline\">\\(G\\)</span>的最大匹配，当且仅当<span class=\"math inline\">\\(G\\)</span>中没有关于<span class=\"math inline\">\\(M\\)</span>的可增广轨道。</p>\n<h2 id=\"hall定理\">Hall定理</h2>\n<p>设<span class=\"math inline\">\\(G\\)</span>是二分图，其顶点集合划分为<span class=\"math inline\">\\(V(G)=X\\cup Y,X\\cap Y=\\emptyset\\)</span>，则<span class=\"math inline\">\\(G\\)</span>中存在将<span class=\"math inline\">\\(X\\)</span>中顶点都许配的匹配，当且仅当任给<span class=\"math inline\">\\(S\\subset X\\)</span>，都有<span class=\"math inline\">\\(|N(S)|\\geqslant |S|\\)</span>，其中，<span class=\"math inline\">\\(N(S)\\)</span>是与<span class=\"math inline\">\\(S\\)</span>中顶点相邻的顶点构成的集合，简称为<span class=\"math inline\">\\(S\\)</span>的邻顶集合。</p>\n<h2 id=\"覆盖数与匹配数\">覆盖数与匹配数</h2>\n<p>假设<span class=\"math inline\">\\(C\\)</span>是图<span class=\"math inline\">\\(G\\)</span>的覆盖，<span class=\"math inline\">\\(M\\)</span>是图<span class=\"math inline\">\\(G\\)</span>的匹配，则<span class=\"math inline\">\\(|C|\\geqslant|M|\\)</span>。</p>\n<h2 id=\"最小覆盖与最大匹配\">最小覆盖与最大匹配</h2>\n<p>若图<span class=\"math inline\">\\(G\\)</span>存在覆盖<span class=\"math inline\">\\(C\\)</span>与匹配<span class=\"math inline\">\\(M\\)</span>，使得<span class=\"math inline\">\\(|C|=|M|\\)</span>，则<span class=\"math inline\">\\(C\\)</span>是最小覆盖，<span class=\"math inline\">\\(M\\)</span>是最大匹配。</p>\n<h2 id=\"könig-egerváry定理\">König-Egerváry定理</h2>\n<p>设<span class=\"math inline\">\\(G\\)</span>是二分图，则<span class=\"math inline\">\\(G\\)</span>的匹配数等于其覆盖数，即<span class=\"math inline\">\\(\\alpha(G)=\\beta(G)\\)</span>。</p>\n<h2 id=\"tutte定理\">Tutte定理</h2>\n<p><span class=\"math inline\">\\(G\\)</span>有完备匹配，当且仅当任给<span class=\"math inline\">\\(S\\subset V(G)\\)</span>，都有<span class=\"math inline\">\\(\\omicron(G-S)\\leqslant|S|\\)</span>。</p>\n<h2 id=\"peterson定理\">Peterson定理</h2>\n<p>无桥的三次正则图有完备匹配。</p>\n<h1 id=\"euler图与hamilton图\">Euler图与Hamilton图</h1>\n<h2 id=\"无向euler图的等价条件\">无向Euler图的等价条件</h2>\n<p>设<span class=\"math inline\">\\(G\\)</span>是连通图，则下面三个命题等价：</p>\n<ol type=\"1\">\n<li><span class=\"math inline\">\\(G\\)</span>是Euler图；</li>\n<li><span class=\"math inline\">\\(G\\)</span>的每个顶点的度数都是偶数；</li>\n<li><span class=\"math inline\">\\(G\\)</span>可以表示成无公共边的圈之并。</li>\n</ol>\n<h2 id=\"有向euler图的等价条件\">有向Euler图的等价条件</h2>\n<p>设<span class=\"math inline\">\\(D\\)</span>是有向图，则下面三个命题等价：</p>\n<ol type=\"1\">\n<li><span class=\"math inline\">\\(D\\)</span>是Euler图；</li>\n<li><span class=\"math inline\">\\(\\forall v\\in V(D),\\deg^+(v)=\\deg^-(v)\\)</span>；</li>\n<li><span class=\"math inline\">\\(D\\)</span>可以表示成无公共边的有向圈之并。</li>\n</ol>\n<h2 id=\"hamilton图的必要条件\">Hamilton图的必要条件</h2>\n<p>设<span class=\"math inline\">\\(G\\)</span>是Hamilton图，则对<span class=\"math inline\">\\(V(G)\\)</span>的每个非空真子集<span class=\"math inline\">\\(S\\)</span>，均有<span class=\"math inline\">\\(\\omega(G-S)\\leqslant|S|\\)</span>，其中<span class=\"math inline\">\\(\\omega(\\cdot)\\)</span>是连通片的个数。</p>\n<h2 id=\"dirac定理-1\">Dirac定理</h2>\n<p>设<span class=\"math inline\">\\(G\\)</span>是简单图，且<span class=\"math inline\">\\(\\nu(G)\\geqslant3,\\delta(G)\\geqslant\\frac{\\nu(G)}2\\)</span>，则<span class=\"math inline\">\\(G\\)</span>是Hamilton图。</p>\n<h2 id=\"闭包的确定性\">闭包的确定性</h2>\n<p><span class=\"math inline\">\\(c(G)\\)</span>是唯一确定的。</p>\n<h2 id=\"hamilton图与闭包\">Hamilton图与闭包</h2>\n<p>简单图<span class=\"math inline\">\\(G\\)</span>是Hamilton图，当且仅当它的闭包<span class=\"math inline\">\\(c(G)\\)</span>是Hamilton图。</p>\n<h2 id=\"ore定理\">Ore定理</h2>\n<p>设<span class=\"math inline\">\\(\\nu(G)\\geqslant3\\)</span>，对<span class=\"math inline\">\\(G\\)</span>的任意一对顶点<span class=\"math inline\">\\(u,v\\)</span>，若<span class=\"math inline\">\\(\\deg(u)+\\deg(v)\\geqslant\\nu(G)-1\\)</span>，则<span class=\"math inline\">\\(G\\)</span>有Hamilton轨道；若<span class=\"math inline\">\\(\\deg(u)+\\deg(v)\\geqslant\\nu(G)\\)</span>，则<span class=\"math inline\">\\(G\\)</span>有Hamilton圈。</p>\n<h1 id=\"图的着色\">图的着色</h1>\n<h2 id=\"顶色数的上界\">顶色数的上界</h2>\n<p>对任何图<span class=\"math inline\">\\(G\\)</span>，<span class=\"math inline\">\\(\\chi(G)\\leqslant\\Delta(G)+1\\)</span>。</p>\n<h2 id=\"brooks定理\">Brooks定理</h2>\n<p>设<span class=\"math inline\">\\(\\nu\\geqslant3\\)</span>阶连通图<span class=\"math inline\">\\(G\\)</span>不是完全图也不是奇圈，则 <span class=\"math inline\">\\(\\chi(G)\\leqslant\\Delta(G)\\)</span>。</p>\n<h2 id=\"二分图的边色数\">二分图的边色数</h2>\n<p>若<span class=\"math inline\">\\(G\\)</span>是二分图，则<span class=\"math inline\">\\(\\chi&#39;(G)=\\Delta(G)\\)</span>。</p>\n<h2 id=\"vizing定理\">Vizing定理</h2>\n<p>若<span class=\"math inline\">\\(G\\)</span>是简单图，则<span class=\"math inline\">\\(\\chi&#39;(G)=\\Delta(G)\\)</span>或<span class=\"math inline\">\\(\\Delta(G)+1\\)</span>。</p>\n<h2 id=\"二分图的匹配划分\">二分图的匹配划分</h2>\n<p>设<span class=\"math inline\">\\(G\\)</span>是二分图，<span class=\"math inline\">\\(\\varepsilon=|E(G)|,\\Delta\\leqslant p\\)</span>，则存在<span class=\"math inline\">\\(G\\)</span>的<span class=\"math inline\">\\(p\\)</span>个不相交的匹配<span class=\"math inline\">\\(M_1,M_2,\\cdots,M_p\\)</span>，使得 <span class=\"math display\">\\[\nE(G)=\\mathop\\cup\\limits_{i=1}^p M_i,\n\\]</span></p>\n<p>且对<span class=\"math inline\">\\(i\\leqslant i\\leqslant p\\)</span>， <span class=\"math display\">\\[\n\\lfloor\\frac\\varepsilon p\\rfloor\\leqslant|M_i|\\leqslant\\lceil\\frac\\varepsilon p\\rceil.\n\\]</span></p>\n<h2 id=\"连通平面图的对偶图的性质\">连通平面图的对偶图的性质</h2>\n<p>设<span class=\"math inline\">\\(G^*\\)</span>是连通平面图<span class=\"math inline\">\\(G\\)</span>的对偶图，<span class=\"math inline\">\\(n^*,m^*,\\phi^*\\)</span>和<span class=\"math inline\">\\(n,m,\\phi\\)</span>分别是<span class=\"math inline\">\\(G^*\\)</span>和<span class=\"math inline\">\\(G\\)</span>的顶点数、边数和面数，则</p>\n<ol type=\"1\">\n<li><p><span class=\"math display\">\\[\nn^*=\\phi,m^*=m,\\phi^*=n\n\\]</span></p></li>\n<li><p>设<span class=\"math inline\">\\(G\\)</span>的顶点<span class=\"math inline\">\\(f^*\\)</span>与<span class=\"math inline\">\\(G&#39;\\)</span>的面<span class=\"math inline\">\\(f\\)</span>对应，则<span class=\"math inline\">\\(\\deg_{G^*}(F^*)=\\deg_G(f)\\)</span>。</p></li>\n</ol>\n<h2 id=\"六色定理\">六色定理</h2>\n<p>任何平面图都是可<span class=\"math inline\">\\(6\\)</span>-顶点着色的。</p>\n<h2 id=\"五色定理\">五色定理</h2>\n<p>任何平面图都是可<span class=\"math inline\">\\(5\\)</span>-顶点着色的。</p>\n<h1 id=\"有向图\">有向图</h1>\n<h2 id=\"强连通的充要条件\">强连通的充要条件</h2>\n<p><span class=\"math inline\">\\(D\\)</span>是强连通有向图当且仅当<span class=\"math inline\">\\(D\\)</span>中存在有向生成回路，即存在含有<span class=\"math inline\">\\(D\\)</span>中所有顶点的有向回路。</p>\n<h2 id=\"连通无向图的定向\">连通无向图的定向</h2>\n<p>连通无向图<span class=\"math inline\">\\(G\\)</span>可以定向成强连通有向图，当且仅当<span class=\"math inline\">\\(G\\)</span>中没有桥。</p>\n<h2 id=\"单连通的局部可达\">单连通的局部可达</h2>\n<p>若<span class=\"math inline\">\\(D\\)</span>单连通，则<span class=\"math inline\">\\(\\forall S\\subset V(D),S\\neq \\emptyset\\)</span>，都存在顶点<span class=\"math inline\">\\(v\\in S\\)</span>，<span class=\"math inline\">\\(v\\)</span>可达<span class=\"math inline\">\\(S\\)</span>中所有的顶点。</p>\n<h2 id=\"单连通的充要条件\">单连通的充要条件</h2>\n<p><span class=\"math inline\">\\(D\\)</span>是单连通有向图，当且仅当<span class=\"math inline\">\\(D\\)</span>中存在有向生成路径。</p>\n<h2 id=\"roy-gallai定理\">Roy-Gallai定理</h2>\n<p>有向图<span class=\"math inline\">\\(D\\)</span>中含有长度为<span class=\"math inline\">\\(\\chi(G)-1\\)</span>的有向轨道，其中<span class=\"math inline\">\\(G\\)</span>是<span class=\"math inline\">\\(D\\)</span>的底图。</p>\n<h2 id=\"王的得分\">王的得分</h2>\n<p>竞赛图中得分最多的顶点是王。</p>\n<h2 id=\"王唯一的充要条件\">王唯一的充要条件</h2>\n<p>竞赛图<span class=\"math inline\">\\(D\\)</span>中<span class=\"math inline\">\\(v\\)</span>是唯一的王，当且仅当<span class=\"math inline\">\\(v\\)</span>的得分是<span class=\"math inline\">\\(\\nu-1\\)</span>，其中<span class=\"math inline\">\\(\\nu=|V(D)|\\)</span>。</p>\n<h2 id=\"强连通竞赛图的有向圈\">强连通竞赛图的有向圈</h2>\n<p>假定<span class=\"math inline\">\\(\\nu\\geqslant3\\)</span>阶竞赛图是强连通的，则任给<span class=\"math inline\">\\(3\\leqslant k\\leqslant\\nu\\)</span>，<span class=\"math inline\">\\(D\\)</span>中每个顶点都在某个<span class=\"math inline\">\\(k\\)</span>阶有向圈中。</p>\n<h2 id=\"严格有向图最长轨道的下界\">严格有向图最长轨道的下界</h2>\n<p>设<span class=\"math inline\">\\(P(u_0,v_0)\\)</span>是严格有向图<span class=\"math inline\">\\(D\\)</span>中的最长有向轨道，则其长度 <span class=\"math display\">\\[\n|E(P(u_0,v_0))|\\geqslant\\max\\{\\delta^-,\\delta^+\\}.\n\\]</span> 其中，<span class=\"math inline\">\\(\\delta^-,\\delta^+\\)</span>分别为<span class=\"math inline\">\\(D\\)</span>的最小入度与最小出度。</p>\n<h2 id=\"有向hamilton图的充分条件\">有向Hamilton图的充分条件</h2>\n<p>设<span class=\"math inline\">\\(D\\)</span>是<span class=\"math inline\">\\(\\nu\\)</span>阶严格有向图，若 <span class=\"math display\">\\[\n\\min\\{\\delta^-,\\delta^+\\}\\geqslant\\frac\\nu 2\\geqslant1,\n\\]</span> 则<span class=\"math inline\">\\(D\\)</span>是有向Hamilton图。</p>\n<h1 id=\"网络流理论\">网络流理论</h1>\n<h2 id=\"流量与截\">流量与截</h2>\n<p>设<span class=\"math inline\">\\(f\\)</span>是网络<span class=\"math inline\">\\(N=(D,s,t,c)\\)</span>的流函数，<span class=\"math inline\">\\((S,\\overline S)\\)</span>是其一个截，则有 <span class=\"math display\">\\[\n\\mathrm {Val}(f)=\\sum_{e\\in(S,\\overline S)}f(e)-\\sum_{e\\in(\\overline S,S)}f(e).\n\\]</span></p>\n<h2 id=\"最大流与最小截\">最大流与最小截</h2>\n<p>设<span class=\"math inline\">\\(f\\)</span>是网络<span class=\"math inline\">\\(N=(D,s,t,c)\\)</span>的流函数，<span class=\"math inline\">\\((S,\\overline S)\\)</span>是其一个截，若<span class=\"math inline\">\\(\\mathrm{Val}(f)=C(S,\\overline S)\\)</span>，则<span class=\"math inline\">\\(f\\)</span>是最大流，<span class=\"math inline\">\\((S,\\overline S)\\)</span>是最小截。</p>\n<h2 id=\"容量有上下界的网络的可行流\">容量有上下界的网络的可行流</h2>\n<p>给定网络<span class=\"math inline\">\\(N(D,s,t,b,c)\\)</span>，其伴随网络为<span class=\"math inline\">\\(N&#39;=(D&#39;,s&#39;,t&#39;,c&#39;)\\)</span>，则<span class=\"math inline\">\\(N\\)</span>中存在可行流，当且仅当<span class=\"math inline\">\\(N&#39;\\)</span>中最大流使得任给<span class=\"math inline\">\\(v\\in V(D)\\)</span>，边<span class=\"math inline\">\\((s&#39;v)\\)</span>都满载，即若<span class=\"math inline\">\\(N&#39;\\)</span>的最大流为<span class=\"math inline\">\\(f’\\)</span>有<span class=\"math inline\">\\(f&#39;((s&#39;,v))=c&#39;((s&#39;,v))\\)</span>。</p>\n<h2 id=\"有供需需求的网络的可行流\">有供需需求的网络的可行流</h2>\n<p>给定有供需约束的网络<span class=\"math inline\">\\(N+(D,X,Y,\\sigma,\\rho,c)\\)</span>。<span class=\"math inline\">\\(N\\)</span>有可行流的充要条件是：任给<span class=\"math inline\">\\(S\\subset V(D)\\)</span>，都满足 <span class=\"math display\">\\[\nC((S,\\overline S))\\geqslant \\rho(Y\\cap\\overline S)-\\sigma(X\\cap \\overline S).\n\\]</span></p>\n<h1 id=\"图矩阵与图空间\">图矩阵与图空间</h1>\n<h2 id=\"线性子空间的判定\">线性子空间的判定</h2>\n<p>设<span class=\"math inline\">\\(V\\)</span>是数域<span class=\"math inline\">\\(F\\)</span>上的线性空间，<span class=\"math inline\">\\(V&#39;\\subset V\\)</span>且<span class=\"math inline\">\\(V&#39;\\neq\\emptyset\\)</span>。若<span class=\"math inline\">\\(V&#39;\\)</span>中任意两个向量的线性组合仍属于<span class=\"math inline\">\\(V’\\)</span>则<span class=\"math inline\">\\(V&#39;\\)</span>是<span class=\"math inline\">\\(V\\)</span>的线性子空间。</p>\n<h2 id=\"圈空间与边空间\">圈空间与边空间</h2>\n<p><span class=\"math inline\">\\(\\mathcal C(G)\\)</span>是<span class=\"math inline\">\\(\\mathcal E(G)\\)</span>的线性子空间。</p>\n<h2 id=\"圈空间与基本圈组\">圈空间与基本圈组</h2>\n<p>给定连通图<span class=\"math inline\">\\(G\\)</span>的一棵生成树，其对应的基本圈组 <span class=\"math display\">\\[\nC_1,C_2,\\cdots,C_{\\varepsilon-\\nu+1}\n\\]</span> 为<span class=\"math inline\">\\(\\mathcal C(G)\\)</span>的一组基，<span class=\"math inline\">\\(\\mathcal C(G)\\)</span>的维数为<span class=\"math inline\">\\(\\varepsilon-\\nu+1\\)</span>。</p>\n<h2 id=\"断集空间与边空间\">断集空间与边空间</h2>\n<p><span class=\"math inline\">\\(\\mathcal S(G)\\)</span>是<span class=\"math inline\">\\(\\mathcal E(G)\\)</span>的线性子空间。</p>\n<h2 id=\"圈向量和断集向量的正交性\">圈向量和断集向量的正交性</h2>\n<p>任给连通图<span class=\"math inline\">\\(G\\)</span>的圈向量<span class=\"math inline\">\\(C\\in\\mathcal C(G)\\)</span>和断集向量<span class=\"math inline\">\\(S\\in\\mathcal S(G)\\)</span>，<span class=\"math inline\">\\(C\\)</span>与<span class=\"math inline\">\\(S\\)</span>的内积<span class=\"math inline\">\\((C,S)=0\\)</span>。其中的运算是在<span class=\"math inline\">\\(F_2\\)</span>中进行的。</p>\n<h2 id=\"基本圈矩阵与基本割集矩阵\">基本圈矩阵与基本割集矩阵</h2>\n<p>给定连通图<span class=\"math inline\">\\(G\\)</span>的生成树<span class=\"math inline\">\\(T\\)</span>，<span class=\"math inline\">\\(G\\)</span>关于<span class=\"math inline\">\\(T\\)</span>的基本圈矩阵与基本割集矩阵分别为 <span class=\"math display\">\\[\nC_f(G)=(I_{\\varepsilon-\\nu+1}:C_{12}),Sf(G)=(S_{11}:I_{\\nu-1}).\n\\]</span> 其中，<span class=\"math inline\">\\(C_{12}\\)</span>的列对应树<span class=\"math inline\">\\(T\\)</span>的边，<span class=\"math inline\">\\(S_{11}\\)</span>的列对应余树的边，则有 <span class=\"math display\">\\[\nS_{11}=C_{12}^T.\n\\]</span></p>\n<h2 id=\"邻接矩阵与路径数\">邻接矩阵与路径数</h2>\n<p>设<span class=\"math inline\">\\(G=(V,E)\\)</span>是无向图，<span class=\"math inline\">\\(V=\\{v_1,v_2,\\cdots,v_\\nu\\}\\)</span>，其邻接矩阵为<span class=\"math inline\">\\(A(G)=(a_{ij})_{\\nu\\times\\nu}\\)</span>。记<span class=\"math inline\">\\(A^n(G)=(a^n_{ij})_{\\nu\\times\\nu}\\)</span>，则<span class=\"math inline\">\\(a^n_{ij}\\)</span>为图<span class=\"math inline\">\\(G\\)</span>中从<span class=\"math inline\">\\(v_i\\)</span>到<span class=\"math inline\">\\(v_j\\)</span>长为<span class=\"math inline\">\\(n\\)</span>的路径数。</p>\n<h2 id=\"关联矩阵与基本关联矩阵的秩\">关联矩阵与基本关联矩阵的秩</h2>\n<p>设<span class=\"math inline\">\\(G\\)</span>是连通图，则有 <span class=\"math display\">\\[\n\\mathrm{rank}(B(G))=\\mathrm{rank}(B_f(G))=\\nu-1.\n\\]</span></p>\n<h2 id=\"生成树与无向图的基本关联矩阵\">生成树与无向图的基本关联矩阵</h2>\n<p>设<span class=\"math inline\">\\(G\\)</span>是连通图， <span class=\"math display\">\\[\ne_{i_1}，e_{i_2},\\cdots,e_{i_{\\nu(G)-1}}\\in E(G),\n\\]</span> 则 <span class=\"math display\">\\[\nG[\\{e_{i_1}，e_{i_2},\\cdots,e_{i_{\\nu(G)-1}}\\}]\n\\]</span> 是<span class=\"math inline\">\\(G\\)</span>的生成树，等价于<span class=\"math inline\">\\(B_f(G)\\)</span>中由第<span class=\"math inline\">\\(i_1,i_2,\\cdots,i_{\\nu(G)-1}\\)</span>列构成的子矩阵为满秩矩阵。</p>\n<h2 id=\"有向图的关联矩阵的行列式的子式\">有向图的关联矩阵的行列式的子式</h2>\n<p>设<span class=\"math inline\">\\(B(D)\\)</span>是有向图<span class=\"math inline\">\\(D\\)</span>的关联矩阵，<span class=\"math inline\">\\(B&#39;\\)</span>是<span class=\"math inline\">\\(B(D)\\)</span>的任意一个子方阵，则有 <span class=\"math display\">\\[\n\\det(B&#39;)=0或\\pm1.\n\\]</span></p>\n<h2 id=\"binet-cauchy定理\">Binet-Cauchy定理</h2>\n<p>设<span class=\"math inline\">\\(A,B\\)</span>分别为一个<span class=\"math inline\">\\(m\\times n\\)</span>阶与<span class=\"math inline\">\\(n\\times m\\)</span>阶矩阵，其中<span class=\"math inline\">\\(m\\leqslant n\\)</span>，则<span class=\"math inline\">\\(A\\)</span>与<span class=\"math inline\">\\(B\\)</span>的积的行列式值满足下列公式： <span class=\"math display\">\\[\n\\det(A\\times B)=\\sum_{1\\leqslant k_1&lt;k_2&lt;\\cdots&lt;k_m\\leqslant n}\\det(A(12\\cdots m;k_1,k_2,\\cdots k_m))\\times \\det(B(k_1,k_2,\\cdots k_m;12\\cdots m)).\n\\]</span></p>\n<h2 id=\"生成树与有向图的基本关联矩阵\">生成树与有向图的基本关联矩阵</h2>\n<p>设<span class=\"math inline\">\\(D\\)</span>是弱连通有向图，<span class=\"math inline\">\\(G\\)</span>是<span class=\"math inline\">\\(D\\)</span>的底图， <span class=\"math display\">\\[\ne_{i_1}，e_{i_2},\\cdots,e_{i_{\\nu(G)-1}}\\in E(D),\n\\]</span> 在略去边 <span class=\"math display\">\\[\ne_{i_1}，e_{i_2},\\cdots,e_{i_{\\nu(G)-1}}\n\\]</span> d 方向后，在底图中则 <span class=\"math display\">\\[\nG[\\{e_{i_1}，e_{i_2},\\cdots,e_{i_{\\nu(G)-1}}\\}]\n\\]</span> 是<span class=\"math inline\">\\(G\\)</span>的生成树，等价于<span class=\"math inline\">\\(B_f(D)\\)</span>中由第<span class=\"math inline\">\\(i_1,i_2,\\cdots,i_{\\nu(G)-1}\\)</span>列构成的子矩阵为满秩矩阵。</p>\n<h2 id=\"生成树个数与基本关联矩阵\">生成树个数与基本关联矩阵</h2>\n<p>设<span class=\"math inline\">\\(G\\)</span>是无环连通无向图，将<span class=\"math inline\">\\(G\\)</span>的每条边任意定向，得到一个有向图<span class=\"math inline\">\\(D\\)</span>。则<span class=\"math inline\">\\(G\\)</span>的生成树个数为 <span class=\"math display\">\\[\n\\tau(G)=\\det(B_f(D)\\times B_f^T(D)).\n\\]</span></p>\n","categories":["Mathematics"],"tags":["Graph Theory"]},{"title":"Graph","url":"/2021/12/29/Graph/","content":"<p>图ADT的逻辑结构、存储结构及基本操作：</p>\n<span id=\"more\"></span>\n<h1 id=\"逻辑结构\">逻辑结构</h1>\n<h2 id=\"图\">图</h2>\n<p>ADT Graph{</p>\n<p>数据对象V：<span class=\"math inline\">\\(V\\)</span>是具有相同特性的数据元素的集合，称为顶点集。</p>\n<p>数据关系R： <span class=\"math display\">\\[\nR=\\{VR\\}\n\\]</span></p>\n<p><span class=\"math display\">\\[\nVR=\\{&lt;v,w&gt;|v,w\\in V且P(v,w),&lt;v,w&gt;表示从v到w的弧，谓词P(v,w)定义了弧&lt;v,w&gt;的意义或信息\\}\n\\]</span></p>\n<p>基本操作P：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">CreatGraph(&amp;G,V,VR);</span><br><span class=\"line\">DestroyGraph(&amp;G);</span><br><span class=\"line\">LocateVex(G,u);</span><br><span class=\"line\">GetVex(G,v);</span><br><span class=\"line\">PutVex(&amp;G,v,value);</span><br><span class=\"line\">FirstAdjVex(G,v,&amp;w);</span><br><span class=\"line\">NextAdjVex(G,v,&amp;w);</span><br><span class=\"line\">InsertVex(&amp;G,v);</span><br><span class=\"line\">DeleteVex(&amp;G,v);</span><br><span class=\"line\">InsertArc(&amp;G,v,w);</span><br><span class=\"line\">DeleteArc(&amp;G,v,w);</span><br><span class=\"line\">DFSTraverse(G,Visit());</span><br><span class=\"line\">BFSTraverse(G,Visit());</span><br></pre></td></tr></table></figure>\n<p>}ADT Graph</p>\n<h1 id=\"存储结构\">存储结构</h1>\n<h2 id=\"图的数组邻接矩阵存储表示\">图的数组（邻接矩阵）存储表示</h2>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> INFINITY INT_MAX</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MAX_VERTEX_NUM 20</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">ArcCell</span>&#123;</span></span><br><span class=\"line\">    VRType adj;</span><br><span class=\"line\">    InfoType *info;</span><br><span class=\"line\">&#125;ArcCell,AdjMatrix[MAX_VERTEX_NUM][MAX_VERtEX_NUM];</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">    VertexType vexs[MAX_VERTEX_NUM];</span><br><span class=\"line\">    AdjMatrix arcs;</span><br><span class=\"line\">    <span class=\"type\">int</span> vexnum,arcnum;</span><br><span class=\"line\">    GraphKind kind;</span><br><span class=\"line\">&#125;MGraph;</span><br></pre></td></tr></table></figure>\n<h2 id=\"图的邻接表存储表示\">图的邻接表存储表示</h2>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MAX_VERTEX_NUM 20</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">ArcNode</span>&#123;</span></span><br><span class=\"line\">    <span class=\"type\">int</span> adjvex;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">ArcNode</span>* <span class=\"title\">next</span>;</span></span><br><span class=\"line\">    InfoType* info;</span><br><span class=\"line\">&#125;ArcNode;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">VNode</span>&#123;</span></span><br><span class=\"line\">    VertexType data;</span><br><span class=\"line\">    ArcNode* firstarc;</span><br><span class=\"line\">&#125;VNode,AdjList[MAX_VERTEX_NUM];</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">    AdjList vertices;</span><br><span class=\"line\">    <span class=\"type\">int</span> vexnum,arcnum;</span><br><span class=\"line\">    <span class=\"type\">int</span> kind;</span><br><span class=\"line\">&#125;ALGraph;</span><br></pre></td></tr></table></figure>\n<h2 id=\"有向图的十字链表存储表示\">有向图的十字链表存储表示</h2>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MAX_VERTEX_NUM 20</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">ArBox</span>&#123;</span></span><br><span class=\"line\">    <span class=\"type\">int</span> tailvex,headvex;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">ArcBox</span> *<span class=\"title\">hlink</span>,*<span class=\"title\">tlink</span>;</span></span><br><span class=\"line\">    TnfoType* info;</span><br><span class=\"line\">&#125;ArcBox;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">VexNode</span>&#123;</span></span><br><span class=\"line\">    VertexType data;</span><br><span class=\"line\">    ArcBox *firstin,*firstout;</span><br><span class=\"line\">&#125;VexNode;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">    VexNode xlist[MAX_VERTEX_NUM];</span><br><span class=\"line\">    <span class=\"type\">int</span> vexnum,arcnum;</span><br><span class=\"line\">&#125;OLGraph;</span><br></pre></td></tr></table></figure>\n<h1 id=\"基本操作\">基本操作</h1>\n<h2 id=\"图的数组邻接矩阵存储表示-1\">图的数组（邻接矩阵）存储表示</h2>\n<h3 id=\"顶点定位\">顶点定位</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">LocateVex</span><span class=\"params\">(MGraph &amp;G,VexType &amp;vp)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(k=<span class=\"number\">0</span>;k&lt;G.vexnum;++k)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(G.vexs[k]==vp)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> k;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"构造\">构造</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">CreateUDN</span><span class=\"params\">(MGraph &amp;G)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(&amp;G.vexnum,&amp;G.arcnum,&amp;IncInfo);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;G.vexnum;++i)</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(&amp;G.vex[i]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;G.vexnum;++i)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(j=<span class=\"number\">0</span>;i&lt;G.vexnum;++j)</span><br><span class=\"line\">            G.arcs[i][j]=&#123;INFINITY,<span class=\"literal\">NULL</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;G.arcnum;++i)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(&amp;u,&amp;v,&amp;w);</span><br><span class=\"line\">        i=LocateVex(G,v1);</span><br><span class=\"line\">        j=LocateVex(G,v2);</span><br><span class=\"line\">        G.arcs[i][j].w=w;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(IncInfo)</span><br><span class=\"line\">            Input(*G.adj[i][j].Info);</span><br><span class=\"line\">        G.arcs[j][i]=G.arcs[i][j];</span><br><span class=\"line\">    &#125;<span class=\"comment\">//for</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;<span class=\"comment\">//CreateUDN</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"增加顶点\">增加顶点</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">AddVertex</span><span class=\"params\">(MGraph &amp;G,VexType vp)</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> k,j;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(G.vexnum&gt;=MAX_VERTEX_NUM||LocateVex(G,vp)==EOF)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">    k=G.vexnum;</span><br><span class=\"line\">    G.vertices[G.vexnum++]=vp;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(G.kind==DG||G.kind==UDG)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(j=<span class=\"number\">0</span>;j&lt;G.vexnum;++j)</span><br><span class=\"line\">            G.arcs[j][k].w=G.arcs[k][j].w=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">         <span class=\"keyword\">for</span>(j=<span class=\"number\">0</span>;j&lt;G.vexnum;++j)</span><br><span class=\"line\">            G.arcs[j][k].w=G.arcs[k][j].w=INFINITY;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> k;</span><br><span class=\"line\">&#125;<span class=\"comment\">//AddVertex</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"增加弧\">增加弧</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">AddArc</span><span class=\"params\">(MGraph &amp;G,ArcType arc)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(k=LocateVex(G,arc.vex1)==EOF||j=LocateVex(G.arc.vex2)==EOF)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ERROR;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(G.kind==DG||G.kind==DN)&#123;</span><br><span class=\"line\">        G.arcs[k][j].w=arc.w;</span><br><span class=\"line\">        G.arcs[k][j].info=arc.info;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        G.arcs[k][j].w=arc.w;</span><br><span class=\"line\">        G.arcs[k][j].info=arc.info;</span><br><span class=\"line\">        G.arcs[j][k].w=arc.w;</span><br><span class=\"line\">        G.arcs[j][k].info=arc.info;</span><br><span class=\"line\">    &#125;<span class=\"comment\">//else</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;<span class=\"comment\">//AddArc</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"图的邻接表存储表示-1\">图的邻接表存储表示</h2>\n<h3 id=\"构建\">构建</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">Create_Graph</span><span class=\"params\">(ALGraph &amp;G)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(&amp;G.kind);</span><br><span class=\"line\">    G.vexnum=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;<span class=\"comment\">//Create_Graph</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"顶点定位-1\">顶点定位</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">LocateVex</span><span class=\"params\">(ALGraph G,VexType vp)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(k=<span class=\"number\">0</span>;k&lt;G.vexnum;++k)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(G.vertices[k].data==vp)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> k;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">&#125;<span class=\"comment\">//LocateVex</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"增加顶点-1\">增加顶点</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">AddVertex</span><span class=\"params\">(ALGraph &amp;G,VertexType vp)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(G.vexnum&gt;=MAX_VERTEX_NUM||LocateVex(G,vp)!=EOF)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">    G.veritces[G.vexnum].data=vp;</span><br><span class=\"line\">    G.vertices[G.vexnum].firstarc=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ++G.vexnum;</span><br><span class=\"line\">&#125;<span class=\"comment\">//AddVertex</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"增加弧-1\">增加弧</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">AddArc</span><span class=\"params\">(ALGraph &amp;G,ArcType arc)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(k=LocateVex(G,arc.vex1)==EOF||j=LocateVex(G,arc.vex2)==EOF)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> EOF;</span><br><span class=\"line\">    p=(ArcNode*)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(ArcNode));</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!p)</span><br><span class=\"line\">        <span class=\"built_in\">exit</span>(OVERFLOW);</span><br><span class=\"line\">    p-&gt;adjvex=arc.vex1;</span><br><span class=\"line\">    p-&gt;info=arc.info;</span><br><span class=\"line\">    p-&gt;next=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    q=(ArcNode*)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(ArcNode));</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!q)</span><br><span class=\"line\">        <span class=\"built_in\">exit</span>(OVERFLOW);</span><br><span class=\"line\">    q-&gt;adjvex=arc.vex2;</span><br><span class=\"line\">    q-&gt;info=arc.info;</span><br><span class=\"line\">    q-&gt;next=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(G.kind==UDG||G.kind==UDN)&#123;</span><br><span class=\"line\">        q-&gt;nextarc=G.vertices[k].firstarc;</span><br><span class=\"line\">        G.vertices[k].firstarc=q;</span><br><span class=\"line\">        p-&gt;nextarc=G.vertices[j].firstarc;</span><br><span class=\"line\">        G.vertices[k].firstarc=p;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        q-&gt;nextarc=G.vertices[k].firstarc;</span><br><span class=\"line\">        G.vertices[k].firstarc=q;</span><br><span class=\"line\">    &#125;<span class=\"comment\">//else</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;<span class=\"comment\">//AddArc</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"深度优先搜索遍历\">深度优先搜索遍历</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">bool</span> visited[MAX];</span><br><span class=\"line\">Status(*VisitFunc)(<span class=\"type\">int</span> v);</span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">DFSTranverse</span><span class=\"params\">(Graph G,Status(*Visit)(<span class=\"type\">int</span> v))</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//时间复杂度O(n+e)</span></span><br><span class=\"line\">    VisitFunc=Visit;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(v=<span class=\"number\">0</span>;v&lt;G.vexnum;++v)</span><br><span class=\"line\">        visit[v]=<span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(v=<span class=\"number\">0</span>;v&lt;G.vexnum;++v)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!visited[v])</span><br><span class=\"line\">            DFS(G,v);</span><br><span class=\"line\">&#125;<span class=\"comment\">//DFSTraverse</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">DFS</span><span class=\"params\">(Graph G,<span class=\"type\">int</span> v)</span>&#123;</span><br><span class=\"line\">    visited[v]=<span class=\"literal\">true</span>;</span><br><span class=\"line\">    VisitFunc(v);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(w=FirstAdjVex(G,v);w!=EOF;NextAdjVex(G,v,w))</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!visited[w])</span><br><span class=\"line\">            DFS(G,w);</span><br><span class=\"line\">&#125;<span class=\"comment\">//DFS</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"广度优先搜索遍历\">广度优先搜索遍历</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">BFSTraverse</span><span class=\"params\">(Graph G,Status(*Visit)(<span class=\"type\">int</span> v))</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(v=<span class=\"number\">0</span>;v&lt;G.vexnum;++v)</span><br><span class=\"line\">        visited[v]=<span class=\"literal\">false</span>;</span><br><span class=\"line\">    InitQueue(Q);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(v=<span class=\"number\">0</span>;v&lt;G.vexnum;++v)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!visited[v])&#123;</span><br><span class=\"line\">            visited[v]=<span class=\"literal\">true</span>;</span><br><span class=\"line\">            Visit(v);</span><br><span class=\"line\">            EnQueue(Q,v);</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(!QueueEmpty(Q))&#123;</span><br><span class=\"line\">                DeQueue(Q,e);</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(w=FirstAdjVex(G,e);w!=EOF;NextAdjVex(G,e,w))</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(!visited[w])&#123;</span><br><span class=\"line\">                    visited[w]=<span class=\"literal\">true</span>;</span><br><span class=\"line\">                    Visit(w);</span><br><span class=\"line\">                    EnQueue(Q,w);</span><br><span class=\"line\">                &#125;<span class=\"comment\">//if</span></span><br><span class=\"line\">            &#125;<span class=\"comment\">//while</span></span><br><span class=\"line\">        &#125;<span class=\"comment\">//if</span></span><br><span class=\"line\">&#125;<span class=\"comment\">//BFSTraverse</span></span><br></pre></td></tr></table></figure>\n","categories":["Computer Science"],"tags":["Data Structure"]},{"title":"H3Z, Start of Dream","url":"/2022/03/16/H3Z-Start-of-Dream/","content":"<p>毛泽东思想与中国特色社会主义理论体系概论课程论文《哈三中，梦开始的地方》：</p>\n<span id=\"more\"></span>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/society02.pdf\">移动端点击链接下载查看</a></p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/society02.pdf\" data-height=\"600px\"></div>\n","categories":["Sociology"],"tags":["H3Z"]},{"title":"H3Z in 2020 CEE","url":"/2021/02/21/H3Z-in-2020-CEE/","content":"<p>哈三中是一个<strong>梦开始的地方</strong>。多少学子怀揣着<strong>梦想</strong>，在这里付出自己的<strong>年华</strong>，可他们的<strong>使命</strong>，竟变成了在xx年高考中取得”胜利“！</p>\n<span id=\"more\"></span>\n<h2 id=\"背景\">背景</h2>\n<p>我曾是哈三中17级南岗尖刀班，一个曾经让我感到荣耀，一个现在让我不愿回首的“状元班”的一名非常普通的学生。<strong>因为我没有考上清北，所以我说自己普通并不为过。</strong>我上高中的时候，还没有体会到“卷“文化，至少这个词是我上了大学才知道的。一次与一名20级的同学联系，她说她班（群力某清北班）上很多人知道我的名字，这让我十分诧异：</p>\n<p>怎么，哈三中这个强手如云的地方，连我这么普通的人，都已经不多了吗？连我有魄力做出的事，都不再有人敢做了吗？哈三中，还是那个<strong>梦开始的地方</strong>吗？</p>\n<h2 id=\"领导\">领导</h2>\n<p>当我得知被录取以后，母亲就开始经常告诉我南三尖刀班多么可怕，“所有人都是学完课本再去上学的”云云。中考之后的假期，我拒绝了外出旅游，而是自学完成了部分高中数学，物理、化学的内容。现在看看真是不那么值得，同学中零基础的也大有人在。这一年，是哈三中近年来高考成绩唯一一次说得过去的一年，虽说延长了晚自习时间（当然与接下来的改革小巫见大巫），开始了自掘坟墓的第一锹，但<strong>各种文体活动没有减少，我也有幸体会到了落日的余晖</strong>。这，还是有高考成绩做底气。</p>\n<p>哈三中的传说已经一去不复返了，它存在我读过市重点高中的母亲的记忆里。这是历史的必然，不能说是领导层的问题，他们，只不过是加速了传统强校的衰败，只不过是在黑龙江省素质教育仅有的成果播撒了应试的种子，只不过是让我的学弟学妹们体会了我的学长学姐们所嘲笑的第九监狱的生活。所以，这并不是他们的问题，</p>\n<p><strong>是谁的问题呢？</strong></p>\n<h2 id=\"校内竞赛培训\">校内竞赛培训</h2>\n<p>高中第一个学期，自然是迷茫的。17届学长竞赛大胜的影响下，我也开始学习竞赛。我对化学竞赛更感兴趣，但母亲认为只有数学竞赛在对于进入清北更有利，这样，不知深浅的我竟然选择两科都学。在兴趣的驱使下，我在校内的竞赛选拔中获得化学第3名，而数学却处于参加者中倒数的位置。（这对我后来的经历真是一种讽刺）我在课堂上很少听课，一般都是学竞赛内容。至于作业，那就是能抄答案则抄，这样我每天19：30前就能“完成”作业。至于考试，我便是月考复习1天，期中4天，期末7天。可以说，我从学习习惯和成绩来说够不上好学生。我入学时候是年级26名，这样混了一学期，高一上期末竟然升到了22名！</p>\n<p>哈三中的竞赛，一直问题多多。纵观全国，不搞竞赛还能出集训队的学校还有多少？这样竞赛出了成绩跟学校一点关系也没有，所以从17级开始有了校内竞赛辅导，对，<strong>没有竞赛教练却有竞赛辅导</strong>，不付出却想得到回报。那物理、化学两科只讲课内知识，数学好一点，有时候讲初赛（注：省初赛，过了会得到全国联赛参加资格）内容时，某老师照答案讲都瞎说一通，还承认一道答案为Catalan数的填空题不会。<strong>生物竞赛辅导真心不错，只可惜参加的人太少。</strong>（信息竞赛确实不了解，就不多说了）</p>\n<p><strong>由猎豹训练的鸟儿，便不会翱翔天际了。当然，也不会驰骋沙场。</strong></p>\n<h2 id=\"假期\">假期</h2>\n<p>高一寒假，放了足足48天。而且，作业量比其他学校少得多。除此以外，部分有情怀的老师还允许不完成作业，这便使我能够好好地安排自己的学习计划。那个假期，我每天5：30分起床，21：30分睡觉，这种作息在现在看来真是不可能完成的事情。</p>\n<p>不要问我高中每天作业写多久，因为我没有完成过一次作业。毕业时，空白练习册堆起来有一米高。我很幸运在较为宽松的环境下完成了自己的高中学业，这一点，是我非常感谢哈三中的。后来，我听说现在已经开始线上自习与线上检查作业，不免感到一阵悲哀。我不能想象我遇到这种情况会怎么处理，也不好假想，因为我在高中时候没有自己的手机。<strong>当“他律”取代了“自律”的时候，学生还能有什么动力去学习、去探索、去试错、去成长、去欢笑呢？</strong></p>\n<p><strong>放假了，学生们回到了温馨的家，哦不，是冰冷的自习室。</strong></p>\n<h2 id=\"纪律\">纪律</h2>\n<p>高一下学期，在我的记忆里很平静，什么都按部就班地发生。各种活动、教学常规地进行。解决了基本需求以后，人们普遍会去寻求精神上的满足。我也不例外，没有电子产品，就只能尝试去喜欢女孩子。当时我们的关系还有希望，可是我坚持着不尝试加深关系，一方面是知道会耽误学习，另一方面还有学校的零容忍管理方式，最后就不了了之了。由于此事分心，高一下期末滑落到29名。<strong>18年高考，哈三中没有17年那么辉煌，这跟15级周六到校自习应该没什么关系，对，没什么关系。</strong></p>\n<p>哈三中对男女同学交往的态度一直没有什么变化，毕竟已经到“零容忍“了，还怎么更严格？有领军博雅的时候，异性交往过密会在学校推荐时一票否决，虽说有没有被一票否决的并不清楚，但力度是绝对够的。而且，学校老师有权在校外查处异性交往过密行为的权力与义务。这种管理方法确实无可非议，也正是因为这个，我才没有彻底耽误掉自己的青春。<strong>欸，我们班里毕业时成了4对是怎么回事？</strong></p>\n<p><strong>爱会找到出路。</strong></p>\n<h2 id=\"教学安排\">教学安排</h2>\n<p>高一暑假，放了足足45天。我和许多同学一起前往南方参加竞赛培训。18年CMO跟我一起去培训的同校同学有1个集训队，2个非集训队金牌，2个银牌。我自然是做了炮灰。回校以后，已是高二，虽说高考成绩在下滑，但学校还可以等，至少等到17届的老师们再带学生高考。所以我没有感受到负担在加重，<strong>各种文体活动都在照常举行</strong>。当我从第一次联赛失利的阴影走出来以后，由于课内理科知识早已自学完，决定再战一年也是顺理成章的事。我投入在竞赛上的时间更多了，然后，高二上期末，年级11名。</p>\n<p>虽说学校组织的竞赛培训与玩笑无异，但<strong>老师们还是全力支持学生学习竞赛</strong>，包括但不限于减少作业负担，请假培训、对未参加的考试进行成绩认定等等。确实给学竞赛的学生们很大的便利，我也很感谢学校。可是，看官是否发现，我几乎不听课、不完成作业，为什么却比很多认真听课、认真完成作业的同学们成绩高？我绝不是聪明，要不然也不会投入那么多在竞赛还一无所获。或许，是安排的任务出了问题。过多的练习并不适合在学习新知识时进行。</p>\n<p><strong>少就是多。</strong></p>\n<h2 id=\"在校时间\">在校时间</h2>\n<p>高二寒假，放了足足48天。我当时并不觉得是别人题做多了导致学习效果不好，而是觉得自己学竞赛什么也不耽误，于是就投入更多时间在竞赛上。整个高二下学期，也是如此。19年高考之前，学校有些急了，<strong>将高三晚自习时间延长到了22：30，这和16级学长学姐不负众望，取得了比15级更糟糕的成绩应该也没什么关系，对，也没什么关系。</strong>索性还有自主招生和竞赛保送，从录取学校上还说得过去。上一届离校后，我们便升入了高三。高三暑假补课也是从19年开始的。两年的连续下滑，终于让学校忍不住了。至于放了多长时间的假、补课辛不辛苦，我是一点也不知道。我从7月开始下定决心要竞赛冲刺了，就不去上课，也没有参加期末考试。</p>\n<p>要是说为什么我越来越投入学习竞赛，不能说是热爱，而是像赶紧逃离。我看到了16级高三的样子，我并不想那样，因为我当时就预感到形势会越来越严峻。晚自习的延长预期也是我决定放下一切冲击竞赛的重要原因。毕竟，准备高考，也不需要学到那么晚。每当我想到深夜里灯火通明的教学楼，不免一阵心酸。<strong>省教育厅长喜升临走之前，做了件功德事，即推迟高中到校时间到7：30分，也算是对各校纷纷延长自习时间的限制，竟也是转瞬即逝的火光。</strong></p>\n<p><strong>远远的街灯亮了，是夜已足够深了。</strong></p>\n<h2 id=\"自习\">自习</h2>\n<p>最终我没有实现“逃脱高三”的理想，虽然我已为之度过了两年的“高三”了。回到了学校，我最后还是没有完全参加到22：30的晚自习，而是选择在21：30回家。受到了再次打击之后，再加上我已经错过了一轮复习的大部分，我便不想再努力。从小学开始，我们已经养成了上下学背书包的习惯，甚至没有想过带回家的书还会不会看。于是在整个高三上学期，<strong>我一周只在周六放学、周一上学时背书包，其余时间两手空空而去，空空而归。算是潇洒了一回。</strong></p>\n<p>对了，才没有什么所谓的晚自习呢！人都在不考试还干什么？<strong>甚至还有两个尖刀班统考，轮流找没意义的难题恶心自己和别人。</strong>我没有说做题没用，可是题目只能检验知识是否掌握，根本不能以之学会知识啊！，看官可能问了，晚自习用来考试，那什么时候做白天的作业呢？我也不知道，反正我回家不学习。要问正常几点能完成当日作业，我可以负责任的告诉你，也就是<strong>第二天上课前写一个小时吧</strong>（清晨<strong>1：00</strong>）。再说了，学校只负责布置与检查作业，又不是学校写作业。</p>\n<p><strong>今夜灯下千般苦，明朝就累死了。</strong></p>\n<h2 id=\"网课\">网课</h2>\n<p>20年突如其来的COVID-19倒是减缓了学校对学生的压榨，至少学生来不了学校，在线上也没什么办法。课程安排也变成了一天只上半天课。终于有了手机，可以痛快地玩了。毕竟网课刚刚开始，还没有立刻想到线上自习这种卑鄙方法。线上考试太容易作弊了，所以我也没太在意线上模拟考试成绩。等到回校模拟，42名。我自认为自己已经足够荒废了，没想到成绩还说得过去。我总算是有了些信心，抓紧了最后一个月进行了复习。当然，这时候，我也不想像学竞赛时那么用心了，高考前每天晚上还能睡8个半小时呢。</p>\n<p>学校在最后阶段的在校上课还不忘组织晚自习呢！我这回是一点也不担心了，直接拒绝参加，就像班里两个拒绝“自愿”晚课的就有我一个一样。<strong>等到学校反思为什么20年高考考得更差的时候就，纷纷认为是学生在家不受监督，不学习，于是就有了现在的假期全天线上自习。</strong>要是我收到下发的空白“自愿”加课申请，第一个站起来撕了它的就不会是别人，就像我曾经当众撕毁尖刀班联考卷子一样。也是啊，我这样的人，能被下三届的学生记住，也不是没有原因的哈！</p>\n<p><strong>互联网使人们彼此越来越近，却使人们离快乐与自由越来越远。</strong></p>\n<h2 id=\"期待\">期待</h2>\n<p>20年的高考成绩不必我多说，自然是比19年更差，不仅是分数更差，连录取的学校也更差了。有官方宣传30个清北，<strong>其实要注意，论17级是30个，而论20届就是29个了。</strong>（有一人已经计入19届的35人中）我从入选“超优班”到高考，一次也没去上过课，也没说把我排除；在发布“超优班”成绩时，我理所应当地被排除在外了。我上了大学，我在高中的故事已经结束了，可哈三中的故事还远远没有结束。既然学校那么在意高考成绩，<strong>那么我来关注一下今年线上提交作业、假期全天自习的勇敢而又悲惨的学弟学妹们会取得什么样的好成绩吧！</strong></p>\n<p><strong>读到这里，看官可能已经想在下方评论“你看你不跟着学校走，考砸了吧！”之类。</strong>诚然，胜者王侯败者寇，我承认学得不好。我也不想去解释把一个“=”当成“&lt;=”以致在联赛时丢了40分，我也不想去解释选做题不涂以致在高考时丢了10分。我写这些，不是在炫耀，它们也不值炫耀，毕竟，拿自己的伤口炫耀，就像是小脚老太太展示自己的三寸金莲，就像是哈三中在喜报上登高考成绩一样吧？<strong>没错，我是考砸了。那么，跟着学校走的，就都比我考得好？</strong></p>\n<h2 id=\"议论\">议论</h2>\n<p>高中时候，有老师说每年都有学生在高考完在网上大骂三中，说他们如何如何不对。我也没必要躲着，反正我也毕业了。我去年考完还有强基，强基完还要准备大学分班考试，才没时间骂呢！就是现在，我也是在复习开学期末考试的空闲写下这篇文章。</p>\n<p>新时代的社会，到处是一片赞颂声，或许已经不习惯议论声了吧。再说了，我没有否定学校的优点，因为<strong>哪怕是一点点优点，自己都会主动宣传啊！</strong>从没有谁对谁错，学生尽力、家长支持、学校负责，没有成果，只能找外部原因了呗！</p>\n<p><strong>或许在一个雨夜，望着灯火通明的教室里昏昏欲睡的孩子们、门口焦急敏感的家长们、办公室里处心积虑的老师们，守护碧瓦黄墙98年的石狮子们，也会为它们心中”梦开始的地方“流下痛心的热泪吧。</strong></p>\n","categories":["Sociology"],"tags":["H3Z"]},{"title":"H3Z in 2021 CEE","url":"/2021/10/21/H3Z-in-2021-CEE/","content":"<p>不知为何，今年这个问题下的回答比往年要少很多。</p>\n<span id=\"more\"></span>\n<p>估计是往年还有人说好，有人说差，还值得讨论一下。试问今年有谁说考得好？今年能有多少人考上清北？今年的喜报在哪里？我写这篇文章（<a href=\"https://gsxgoldenlegendary.github.io/2021/10/21/H3Z-in-2020-CEE/\">H3Z in 2020 CEE</a>）后，还有人劝我把它删了，真是笑话！只有赞美之辞就是应有的样子吗？</p>\n<p>曾几何时，我还为三中人这个称号十分骄傲，可是逐渐发现没有什么骄傲的资本了。如果实力已经不如从前，那也不要打肿脸充胖子。没有全省最好的成绩，也不用想方设法说是全省最好的学校。至少我有幸体会到素质教育的感觉，确实能学到很多呀！想学衡水的做法，结果真成了<strong>邯郸学步</strong>，失去了成功践行几十年的做法，实在令人惋惜。</p>\n<p>这中间到底出了什么问题？我想学校一定也反思过。可是反思的结果呢？先是加课、加自习、加考试这种表面的改变，再是减少素质教育活动，对学生更严格地管理这种已经触及办学理念的改变。实在像极了<strong>苏联改革</strong>，先改经济，再改政治，最后怎么样了，想必学过历史的校领导一定知道吧！</p>\n<p>在网络空间上写下此类文字的毕业生啊，都是希望学校能办得更好啊！出了问题就想办法解决呗，为什么要装模做样地<strong>“自愿加课”“自愿自习”</strong>来推卸责任呢？真想推卸责任，那教育局规定不早于7：30到校你为什么让大家7：20到校？不怕家长说考的差是因为早到校导致的？哦，应该不怕的，家长群要是有人说这些，群就该解散了嘿。</p>\n<p><del>另外，建议学弟学妹尽量慎重考虑强基计划的报名，强基计划对于高中必然是有利的，那会增加考上好学校的人数；但对个人而言，如果调剂到不喜欢的专业还没法转专业，甚至得从TOP2退学重考，这风险太大了吧？</del></p>\n<p>上了大学，我经常会想起高中美好的青春时光。每次想起那碧瓦黄墙，无数记忆浮起，多少暖意涌现。可是想到一群群<strong>有赤诚之心的担当者</strong>磨灭了思想与价值，不免一阵慨叹。市里前180名的学生啊，不应该被这样对待诶。你们，应该主宰自己的青春！</p>\n有诗云：\n<center>\n浪说曾分鲍叔金，谁人辨得伯牙琴？\n</center>\n<center>\n于今交道奸如鬼，湖海空悬一片心。\n</center>\n","categories":["Sociology"],"tags":["H3Z"]},{"title":"Huffman Compressor and Decompressor","url":"/2021/11/30/Huffman-Compressor-and-Decompressor/","content":"<h1 id=\"数据结构-huffman-压缩解压器大作业\">数据结构 Huffman 压缩/解压器大作业</h1>\n<h2 id=\"项目环境\">项目环境</h2>\n<ul>\n<li>设备：Windows Surface Pro 7 Model 1866 i7</li>\n<li>操作系统：Windows 11 Insider Preview 10.0.22504.1010 (rs_prerelease)</li>\n<li>集成开发环境：JetBrain CLion 2021.2.1</li>\n<li>编译器：MinGW 7.3.0 64-bit</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"compress.h\">Compress.h</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// Created by administrator Guo on 23/11/2021 15:46.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifndef</span> DSHW2_V1_COMPRESS_H</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> DSHW2_V1_COMPRESS_H</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;main.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Compress</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">    std::vector&lt;HTNode&gt; Huffman_tree;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> bit_of_unit;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> fork_of_tree;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> bit_of_move;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> <span class=\"type\">long</span> <span class=\"type\">long</span> read_buffer ;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> <span class=\"type\">char</span> read_buffer_temp ;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> bit_of_read_buffer ;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> read_complement ;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> <span class=\"type\">long</span> <span class=\"type\">long</span> write_buffer ;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> bit_of_write_buffer ;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> <span class=\"type\">char</span> write_buffer_temp ;</span><br><span class=\"line\">    std::string source_file_name;</span><br><span class=\"line\">    std::string compress_file_name;</span><br><span class=\"line\">    std::ifstream file_reader;</span><br><span class=\"line\">    std::ifstream file_reader2;</span><br><span class=\"line\">    std::ofstream file_writer;</span><br><span class=\"line\">    std::ofstream tree_printer;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">Compress</span>(<span class=\"type\">unsigned</span> ,<span class=\"type\">unsigned</span> ,<span class=\"type\">const</span> std::string&amp;,<span class=\"type\">const</span> std::string&amp;);</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">open_files</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">get_leaves</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">complete_leaves</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">struct_tree</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">encode</span><span class=\"params\">(<span class=\"type\">unsigned</span> )</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">encode_tree</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">print</span><span class=\"params\">(<span class=\"type\">unsigned</span> ,<span class=\"type\">unsigned</span> )</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">print_tree</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">write_tree</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">write_content</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">close_files</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span> <span class=\"comment\">//DSHW2_V1_COMPRESS_H</span></span></span><br></pre></td></tr></table></figure>\n<h2 id=\"compress.cpp\">Compress.cpp</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// Created by administrator Guo on 23/11/2021 15:46.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Compress.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">Compress::<span class=\"built_in\">Compress</span>(<span class=\"type\">unsigned</span> bit_of_unit,<span class=\"type\">unsigned</span> fork_of_tree,<span class=\"type\">const</span> std::string&amp; source_file_name,<span class=\"type\">const</span> std::string&amp;  compress_file_name)&#123;</span><br><span class=\"line\">    Compress::bit_of_unit=bit_of_unit;</span><br><span class=\"line\">    Compress::fork_of_tree=fork_of_tree;</span><br><span class=\"line\">    bit_of_move = [fork_of_tree]() -&gt; <span class=\"type\">unsigned</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (fork_of_tree == <span class=\"number\">2</span>)<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"number\">3</span> &lt;= fork_of_tree &amp;&amp; fork_of_tree &lt; <span class=\"number\">8</span>)<span class=\"keyword\">return</span> <span class=\"number\">2</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"number\">8</span> &lt;= fork_of_tree &amp;&amp; fork_of_tree &lt; <span class=\"number\">16</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">3</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> <span class=\"number\">4</span>;</span><br><span class=\"line\">    &#125;();</span><br><span class=\"line\">    read_buffer=<span class=\"number\">0</span> ;</span><br><span class=\"line\">    read_buffer_temp=<span class=\"number\">0</span> ;</span><br><span class=\"line\">    bit_of_read_buffer=<span class=\"number\">0</span> ;</span><br><span class=\"line\">    read_complement=<span class=\"number\">0</span> ;</span><br><span class=\"line\">    write_buffer=<span class=\"number\">0</span>;</span><br><span class=\"line\">    write_buffer_temp=<span class=\"number\">0</span>;</span><br><span class=\"line\">    bit_of_write_buffer=<span class=\"number\">0</span>;</span><br><span class=\"line\">    Compress::source_file_name=source_file_name;</span><br><span class=\"line\">    Compress::compress_file_name=compress_file_name;</span><br><span class=\"line\">    <span class=\"keyword\">auto</span> zeroth_HTNode = <span class=\"keyword\">new</span> <span class=\"built_in\">HTNode</span>();</span><br><span class=\"line\">    Huffman_tree.<span class=\"built_in\">push_back</span>(*zeroth_HTNode);</span><br><span class=\"line\">    tree_printer=std::<span class=\"built_in\">ofstream</span> (<span class=\"string\">&quot;tree.txt&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Compress::open_files</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    file_reader=std::ifstream (source_file_name, std::ios::binary);</span><br><span class=\"line\">    file_reader2=std::ifstream (source_file_name,std::ios::binary);</span><br><span class=\"line\">    file_writer=std::<span class=\"built_in\">ofstream</span> (compress_file_name,std::ios::binary);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!file_reader.<span class=\"built_in\">is_open</span>()||!file_reader2.<span class=\"built_in\">is_open</span>()||!file_writer)&#123;</span><br><span class=\"line\">        std::cout&lt;&lt;<span class=\"string\">&quot;Fail in opening files!\\n&quot;</span>;</span><br><span class=\"line\">        <span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Compress::get_leaves</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (; file_reader.<span class=\"built_in\">peek</span>() != EOF || bit_of_read_buffer &gt; <span class=\"number\">0</span>;) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (bit_of_read_buffer &lt; bit_of_unit) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (file_reader.<span class=\"built_in\">peek</span>() != EOF) &#123;</span><br><span class=\"line\">                file_reader.<span class=\"built_in\">read</span>(<span class=\"built_in\">reinterpret_cast</span>&lt;<span class=\"type\">char</span> *&gt;(&amp;read_buffer_temp), <span class=\"built_in\">sizeof</span>(<span class=\"type\">char</span>));</span><br><span class=\"line\">                read_buffer = (read_buffer &lt;&lt; <span class=\"number\">8</span>) + read_buffer_temp;</span><br><span class=\"line\">                bit_of_read_buffer += <span class=\"number\">8</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                read_complement = bit_of_unit - bit_of_read_buffer;</span><br><span class=\"line\">                read_buffer = read_buffer &lt;&lt; read_complement;</span><br><span class=\"line\">                bit_of_read_buffer = bit_of_unit;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">auto</span> number = read_buffer &gt;&gt; (bit_of_read_buffer - bit_of_unit);</span><br><span class=\"line\">            bit_of_read_buffer -= bit_of_unit;</span><br><span class=\"line\">            read_buffer &amp;= ((<span class=\"type\">unsigned</span> <span class=\"type\">long</span> <span class=\"type\">long</span>)<span class=\"number\">1</span> &lt;&lt; bit_of_read_buffer) - <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">auto</span> iter = std::<span class=\"built_in\">find</span>(Huffman_tree.<span class=\"built_in\">begin</span>() + <span class=\"number\">1</span>, Huffman_tree.<span class=\"built_in\">end</span>(), number);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (iter != Huffman_tree.<span class=\"built_in\">end</span>()) &#123;</span><br><span class=\"line\">                ++iter-&gt;weight;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(iter-&gt;weight==INT32_MAX)&#123;</span><br><span class=\"line\">                    std::cout&lt;&lt;<span class=\"string\">&quot;To big to compress!\\n&quot;</span>;</span><br><span class=\"line\">                    <span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">auto</span> temp_HTNode = <span class=\"keyword\">new</span> <span class=\"built_in\">HTNode</span>();</span><br><span class=\"line\">                temp_HTNode-&gt;number = number;</span><br><span class=\"line\">                temp_HTNode-&gt;weight = <span class=\"number\">1</span>;</span><br><span class=\"line\">                Huffman_tree.<span class=\"built_in\">push_back</span>(*temp_HTNode);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Compress::complete_leaves</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (; (Huffman_tree.<span class=\"built_in\">size</span>() - <span class=\"number\">2</span>) % (fork_of_tree - <span class=\"number\">1</span>) != <span class=\"number\">0</span>;) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">auto</span> temp_HTNode = <span class=\"keyword\">new</span> <span class=\"built_in\">HTNode</span>();</span><br><span class=\"line\">        Huffman_tree.<span class=\"built_in\">push_back</span>(*temp_HTNode);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Compress::struct_tree</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">auto</span> cycle_number = (Huffman_tree.<span class=\"built_in\">size</span>() - <span class=\"number\">2</span>) / (fork_of_tree - <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">unsigned</span> i = <span class=\"number\">0</span>; i &lt; cycle_number; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">auto</span> temp_HTNode = <span class=\"keyword\">new</span> <span class=\"built_in\">HTNode</span>();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">unsigned</span> j = <span class=\"number\">0</span>; j &lt; fork_of_tree; ++j) &#123;</span><br><span class=\"line\">            <span class=\"type\">unsigned</span> <span class=\"type\">long</span> <span class=\"type\">long</span> temp_weight;</span><br><span class=\"line\">            <span class=\"keyword\">auto</span> length = Huffman_tree.<span class=\"built_in\">size</span>();</span><br><span class=\"line\">            <span class=\"type\">unsigned</span> k = <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (; Huffman_tree[k].is_in_tree; ++k) &#123;&#125;</span><br><span class=\"line\">            temp_weight = Huffman_tree[k].weight;</span><br><span class=\"line\">            <span class=\"keyword\">auto</span> min_position = k;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (; k &lt; length; ++k) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (!Huffman_tree[k].is_in_tree &amp;&amp; Huffman_tree[k].weight &lt; temp_weight) &#123;</span><br><span class=\"line\">                    temp_weight = Huffman_tree[k].weight;</span><br><span class=\"line\">                    min_position = k;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            Huffman_tree[min_position].parent = length;</span><br><span class=\"line\">            Huffman_tree[min_position].is_in_tree = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            temp_HTNode-&gt;child[j] = min_position;</span><br><span class=\"line\">            temp_HTNode-&gt;weight += Huffman_tree[min_position].weight;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Huffman_tree.<span class=\"built_in\">push_back</span>(*temp_HTNode);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Compress::encode</span><span class=\"params\">(<span class=\"type\">unsigned</span> position)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; fork_of_tree; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Huffman_tree[position].child[i]) &#123;</span><br><span class=\"line\">            Huffman_tree[Huffman_tree[position].child[i]].code = (Huffman_tree[position].code &lt;&lt; bit_of_move) + i;</span><br><span class=\"line\">            Huffman_tree[Huffman_tree[position].child[i]].bit_of_code = Huffman_tree[position].bit_of_code + bit_of_move;</span><br><span class=\"line\">            <span class=\"built_in\">encode</span>(Huffman_tree[position].child[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Compress::encode_tree</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    Huffman_tree[Huffman_tree.<span class=\"built_in\">size</span>() - <span class=\"number\">1</span>].code = <span class=\"number\">1</span>;</span><br><span class=\"line\">    Huffman_tree[Huffman_tree.<span class=\"built_in\">size</span>() - <span class=\"number\">1</span>].bit_of_code = bit_of_move;</span><br><span class=\"line\">    <span class=\"built_in\">encode</span>(Huffman_tree.<span class=\"built_in\">size</span>() - <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Compress::print_tree</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(Huffman_tree.<span class=\"built_in\">size</span>()<span class=\"number\">-1</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">    tree_printer.<span class=\"built_in\">close</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Compress::print</span><span class=\"params\">(<span class=\"type\">unsigned</span> position, <span class=\"type\">unsigned</span> depth)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; depth; ++i) &#123;</span><br><span class=\"line\">        tree_printer &lt;&lt; <span class=\"string\">&#x27;\\t&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    tree_printer &lt;&lt; Huffman_tree[position].code;</span><br><span class=\"line\">    <span class=\"type\">int</span> j = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (; Huffman_tree[position].child[j] == <span class=\"number\">0</span> &amp;&amp; j &lt; fork_of_tree; ++j) &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (j == fork_of_tree) &#123;</span><br><span class=\"line\">        tree_printer &lt;&lt; <span class=\"string\">&#x27;\\t&#x27;</span> &lt;&lt; Huffman_tree[position].number;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    tree_printer &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; fork_of_tree; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Huffman_tree[position].child[i] != <span class=\"number\">0</span>)</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(Huffman_tree[position].child[i], depth + <span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Compress::write_tree</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">auto</span> size = Huffman_tree.<span class=\"built_in\">size</span>() - <span class=\"number\">1</span>;</span><br><span class=\"line\">    file_writer.<span class=\"built_in\">write</span>(<span class=\"built_in\">reinterpret_cast</span>&lt;<span class=\"type\">char</span> *&gt;(&amp;bit_of_unit), <span class=\"keyword\">sizeof</span> bit_of_unit);</span><br><span class=\"line\">    file_writer.<span class=\"built_in\">write</span>(<span class=\"built_in\">reinterpret_cast</span>&lt;<span class=\"type\">char</span> *&gt;(&amp;bit_of_move), <span class=\"keyword\">sizeof</span> bit_of_move);</span><br><span class=\"line\">    file_writer.<span class=\"built_in\">write</span>(<span class=\"built_in\">reinterpret_cast</span>&lt;<span class=\"type\">char</span> *&gt;(&amp;fork_of_tree), <span class=\"keyword\">sizeof</span> fork_of_tree);</span><br><span class=\"line\">    file_writer.<span class=\"built_in\">write</span>(<span class=\"built_in\">reinterpret_cast</span>&lt;<span class=\"type\">char</span> *&gt;(&amp;read_complement), <span class=\"keyword\">sizeof</span> read_complement);</span><br><span class=\"line\">    file_writer.<span class=\"built_in\">write</span>(<span class=\"built_in\">reinterpret_cast</span>&lt;<span class=\"type\">char</span> *&gt;(&amp;size), <span class=\"keyword\">sizeof</span> size);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> iter = Huffman_tree.<span class=\"built_in\">begin</span>() + <span class=\"number\">1</span>; iter != Huffman_tree.<span class=\"built_in\">end</span>(); ++iter) &#123;</span><br><span class=\"line\">        file_writer.<span class=\"built_in\">write</span>(<span class=\"built_in\">reinterpret_cast</span>&lt;<span class=\"type\">char</span> *&gt;(&amp;iter-&gt;number), <span class=\"keyword\">sizeof</span> iter-&gt;number);</span><br><span class=\"line\">        file_writer.<span class=\"built_in\">write</span>(<span class=\"built_in\">reinterpret_cast</span>&lt;<span class=\"type\">char</span> *&gt;(&amp;iter-&gt;parent), <span class=\"keyword\">sizeof</span> iter-&gt;parent);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; fork_of_tree; ++j) &#123;</span><br><span class=\"line\">            file_writer.<span class=\"built_in\">write</span>(<span class=\"built_in\">reinterpret_cast</span>&lt;<span class=\"type\">char</span> *&gt;(&amp;iter-&gt;child[j]), <span class=\"keyword\">sizeof</span> iter-&gt;child[j]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Compress::write_content</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (; file_reader2.<span class=\"built_in\">peek</span>() != EOF || bit_of_read_buffer &gt; <span class=\"number\">0</span> || bit_of_write_buffer &gt; <span class=\"number\">0</span>;) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (file_reader2.<span class=\"built_in\">peek</span>() == EOF &amp;&amp; bit_of_read_buffer == <span class=\"number\">0</span> &amp;&amp; bit_of_write_buffer &lt; <span class=\"number\">8</span>) &#123;</span><br><span class=\"line\">            write_buffer = (write_buffer &lt;&lt; (<span class=\"number\">8</span> - bit_of_write_buffer));</span><br><span class=\"line\">            bit_of_write_buffer = <span class=\"number\">8</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (bit_of_write_buffer &gt;= <span class=\"number\">8</span>) &#123;</span><br><span class=\"line\">            write_buffer_temp = write_buffer &gt;&gt; (bit_of_write_buffer - <span class=\"number\">8</span>);</span><br><span class=\"line\">            bit_of_write_buffer -= <span class=\"number\">8</span>;</span><br><span class=\"line\">            write_buffer &amp;= ((<span class=\"type\">unsigned</span> <span class=\"type\">long</span> <span class=\"type\">long</span>)<span class=\"number\">1</span>&lt;&lt; bit_of_write_buffer) - <span class=\"number\">1</span>;</span><br><span class=\"line\">            file_writer.<span class=\"built_in\">write</span>(<span class=\"built_in\">reinterpret_cast</span>&lt;<span class=\"type\">char</span> *&gt;(&amp;write_buffer_temp), <span class=\"built_in\">sizeof</span>(<span class=\"type\">char</span>));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (bit_of_read_buffer &lt; bit_of_unit) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (file_reader2.<span class=\"built_in\">peek</span>() != EOF) &#123;</span><br><span class=\"line\">                file_reader2.<span class=\"built_in\">read</span>(<span class=\"built_in\">reinterpret_cast</span>&lt;<span class=\"type\">char</span> *&gt;(&amp;read_buffer_temp), <span class=\"built_in\">sizeof</span>(<span class=\"type\">char</span>));</span><br><span class=\"line\">                read_buffer = (read_buffer &lt;&lt; <span class=\"number\">8</span>) + read_buffer_temp;</span><br><span class=\"line\">                bit_of_read_buffer += <span class=\"number\">8</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                read_complement = bit_of_unit - bit_of_read_buffer;</span><br><span class=\"line\">                read_buffer = read_buffer &lt;&lt; read_complement;</span><br><span class=\"line\">                bit_of_read_buffer = bit_of_unit;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">auto</span> number = read_buffer &gt;&gt; (bit_of_read_buffer - bit_of_unit);</span><br><span class=\"line\">            bit_of_read_buffer -= bit_of_unit;</span><br><span class=\"line\">            read_buffer &amp;= ((<span class=\"type\">unsigned</span> <span class=\"type\">long</span> <span class=\"type\">long</span>) <span class=\"number\">1</span> &lt;&lt; bit_of_read_buffer) - <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">auto</span> iter = std::<span class=\"built_in\">find</span>(Huffman_tree.<span class=\"built_in\">begin</span>() + <span class=\"number\">1</span>, Huffman_tree.<span class=\"built_in\">end</span>(), number);</span><br><span class=\"line\">            write_buffer = (write_buffer &lt;&lt; iter-&gt;bit_of_code) + iter-&gt;code;</span><br><span class=\"line\">            bit_of_write_buffer += iter-&gt;bit_of_code;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Compress::close_files</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    file_reader.<span class=\"built_in\">close</span>();</span><br><span class=\"line\">    file_writer.<span class=\"built_in\">close</span>();</span><br><span class=\"line\">    file_reader2.<span class=\"built_in\">close</span>();</span><br><span class=\"line\">    std::cout&lt;&lt;<span class=\"string\">&quot;Compress successfully!\\n&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"decompress.h\">Decompress.h</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// Created by administrator Guo on 23/11/2021 18:30.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifndef</span> DSHW2_V1_DECOMPRESS_H</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> DSHW2_V1_DECOMPRESS_H</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;main.h&quot;</span></span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Decompress</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">    std::vector&lt;HTNode&gt; Huffman_tree2;</span><br><span class=\"line\">    std::ifstream file_reader3;</span><br><span class=\"line\">    std::ofstream file_writer2;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> bit_of_unit2;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> fork_of_tree2;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> bit_of_move2;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> read_complement2;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> <span class=\"type\">long</span> <span class=\"type\">long</span> size2;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> <span class=\"type\">long</span> <span class=\"type\">long</span> read_buffer ;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> <span class=\"type\">char</span> read_buffer_temp ;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> bit_of_read_buffer ;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> <span class=\"type\">long</span> <span class=\"type\">long</span> write_buffer ;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> bit_of_write_buffer ;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> <span class=\"type\">char</span> write_buffer_temp ;</span><br><span class=\"line\">    std::string decompress_file_name;</span><br><span class=\"line\">    std::string compress_file_name;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">Decompress</span>(<span class=\"type\">const</span> std::string&amp;,<span class=\"type\">const</span> std::string&amp;);</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">open_files</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">read_tree</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">write_content</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">close_files</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span> <span class=\"comment\">//DSHW2_V1_DECOMPRESS_H</span></span></span><br></pre></td></tr></table></figure>\n<h2 id=\"decompress.cpp\">Decompress.cpp</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// Created by administrator Guo on 23/11/2021 18:30.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Decompress.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">Decompress::<span class=\"built_in\">Decompress</span>(<span class=\"type\">const</span> std::string&amp;compress_file_name,<span class=\"type\">const</span> std::string&amp;decompress_file_name) &#123;</span><br><span class=\"line\">    read_buffer=<span class=\"number\">0</span> ;</span><br><span class=\"line\">    read_buffer_temp=<span class=\"number\">0</span> ;</span><br><span class=\"line\">    bit_of_read_buffer=<span class=\"number\">0</span> ;</span><br><span class=\"line\">    read_complement2=<span class=\"number\">0</span> ;</span><br><span class=\"line\">    write_buffer=<span class=\"number\">0</span>;</span><br><span class=\"line\">    write_buffer_temp=<span class=\"number\">0</span>;</span><br><span class=\"line\">    bit_of_write_buffer=<span class=\"number\">0</span>;</span><br><span class=\"line\">    bit_of_unit2=<span class=\"number\">0</span>;</span><br><span class=\"line\">    fork_of_tree2=<span class=\"number\">0</span>;</span><br><span class=\"line\">    bit_of_move2=<span class=\"number\">0</span>;</span><br><span class=\"line\">    size2=<span class=\"number\">0</span>;</span><br><span class=\"line\">    Decompress::compress_file_name=compress_file_name;</span><br><span class=\"line\">    Decompress::decompress_file_name=decompress_file_name;</span><br><span class=\"line\">    <span class=\"keyword\">auto</span> zeroth_HTNode2 = <span class=\"keyword\">new</span> <span class=\"built_in\">HTNode</span>();</span><br><span class=\"line\">    Huffman_tree2.<span class=\"built_in\">push_back</span>(*zeroth_HTNode2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Decompress::close_files</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    file_reader3.<span class=\"built_in\">close</span>();</span><br><span class=\"line\">    file_writer2.<span class=\"built_in\">close</span>();</span><br><span class=\"line\">    std::cout&lt;&lt;<span class=\"string\">&quot;Decompress successfully!\\n&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Decompress::write_content</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> <span class=\"type\">long</span> <span class=\"type\">long</span> position = Huffman_tree2.<span class=\"built_in\">size</span>() - <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"type\">bool</span> is_new_number = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (; file_reader3.<span class=\"built_in\">peek</span>() != EOF || bit_of_read_buffer &gt; <span class=\"number\">0</span> || bit_of_write_buffer &gt; read_complement2;) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (bit_of_write_buffer &gt;= read_complement2 + <span class=\"number\">8</span>) &#123;</span><br><span class=\"line\">            write_buffer_temp = write_buffer &gt;&gt; (bit_of_write_buffer - <span class=\"number\">8</span>);</span><br><span class=\"line\">            bit_of_write_buffer -= <span class=\"number\">8</span>;</span><br><span class=\"line\">            write_buffer &amp;= ((<span class=\"type\">unsigned</span> <span class=\"type\">long</span> <span class=\"type\">long</span>)<span class=\"number\">1</span> &lt;&lt; bit_of_write_buffer) - <span class=\"number\">1</span>;</span><br><span class=\"line\">            file_writer2.<span class=\"built_in\">write</span>(<span class=\"built_in\">reinterpret_cast</span>&lt;<span class=\"type\">char</span> *&gt;(&amp;write_buffer_temp), <span class=\"keyword\">sizeof</span> write_buffer_temp);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (bit_of_read_buffer == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            file_reader3.<span class=\"built_in\">read</span>(<span class=\"built_in\">reinterpret_cast</span>&lt;<span class=\"type\">char</span> *&gt;(&amp;read_buffer_temp), <span class=\"keyword\">sizeof</span> read_buffer_temp);</span><br><span class=\"line\">            bit_of_read_buffer += <span class=\"number\">8</span>;</span><br><span class=\"line\">            read_buffer=(read_buffer&lt;&lt;<span class=\"number\">8</span>)+read_buffer_temp;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (is_new_number) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (read_buffer &gt;&gt; (bit_of_read_buffer - bit_of_move2) != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                    position = Huffman_tree2.<span class=\"built_in\">size</span>() - <span class=\"number\">1</span>;</span><br><span class=\"line\">                    is_new_number = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                bit_of_read_buffer -= bit_of_move2;</span><br><span class=\"line\">                read_buffer &amp;= ((<span class=\"type\">unsigned</span> <span class=\"type\">long</span> <span class=\"type\">long</span>) <span class=\"number\">1</span> &lt;&lt; bit_of_read_buffer) - <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"type\">int</span> k = <span class=\"number\">0</span>;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (; Huffman_tree2[position].child[k] == <span class=\"number\">0</span> &amp;&amp; k &lt; fork_of_tree2; ++k) &#123;&#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (k == fork_of_tree2) &#123;</span><br><span class=\"line\">                    write_buffer = (write_buffer &lt;&lt; bit_of_unit2) + Huffman_tree2[position].number;</span><br><span class=\"line\">                    bit_of_write_buffer += bit_of_unit2;</span><br><span class=\"line\">                    is_new_number = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    position = Huffman_tree2[position].child[read_buffer &gt;&gt; (bit_of_read_buffer - bit_of_move2)];</span><br><span class=\"line\">                    bit_of_read_buffer -= bit_of_move2;</span><br><span class=\"line\">                    read_buffer &amp;= ((<span class=\"type\">unsigned</span> <span class=\"type\">long</span> <span class=\"type\">long</span>) <span class=\"number\">1</span> &lt;&lt; bit_of_read_buffer) - <span class=\"number\">1</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Decompress::read_tree</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    file_reader3.<span class=\"built_in\">read</span>(<span class=\"built_in\">reinterpret_cast</span>&lt;<span class=\"type\">char</span> *&gt;(&amp;bit_of_unit2), <span class=\"keyword\">sizeof</span> bit_of_unit2);</span><br><span class=\"line\">    file_reader3.<span class=\"built_in\">read</span>(<span class=\"built_in\">reinterpret_cast</span>&lt;<span class=\"type\">char</span> *&gt;(&amp;bit_of_move2), <span class=\"keyword\">sizeof</span> bit_of_move2);</span><br><span class=\"line\">    file_reader3.<span class=\"built_in\">read</span>(<span class=\"built_in\">reinterpret_cast</span>&lt;<span class=\"type\">char</span> *&gt;(&amp;fork_of_tree2), <span class=\"keyword\">sizeof</span> fork_of_tree2);</span><br><span class=\"line\">    file_reader3.<span class=\"built_in\">read</span>(<span class=\"built_in\">reinterpret_cast</span>&lt;<span class=\"type\">char</span> *&gt;(&amp;read_complement2), <span class=\"keyword\">sizeof</span> read_complement2);</span><br><span class=\"line\">    file_reader3.<span class=\"built_in\">read</span>(<span class=\"built_in\">reinterpret_cast</span>&lt;<span class=\"type\">char</span> *&gt;(&amp;size2), <span class=\"keyword\">sizeof</span> size2);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; size2; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">auto</span> temp_HTNode = <span class=\"keyword\">new</span> <span class=\"built_in\">HTNode</span>();</span><br><span class=\"line\">        file_reader3.<span class=\"built_in\">read</span>(<span class=\"built_in\">reinterpret_cast</span>&lt;<span class=\"type\">char</span> *&gt;(&amp;temp_HTNode-&gt;number), <span class=\"keyword\">sizeof</span> temp_HTNode-&gt;number);</span><br><span class=\"line\">        file_reader3.<span class=\"built_in\">read</span>(<span class=\"built_in\">reinterpret_cast</span>&lt;<span class=\"type\">char</span> *&gt;(&amp;temp_HTNode-&gt;parent), <span class=\"keyword\">sizeof</span> temp_HTNode-&gt;parent);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; fork_of_tree2; ++j) &#123;</span><br><span class=\"line\">            file_reader3.<span class=\"built_in\">read</span>(<span class=\"built_in\">reinterpret_cast</span>&lt;<span class=\"type\">char</span> *&gt;(&amp;temp_HTNode-&gt;child[j]), <span class=\"keyword\">sizeof</span> temp_HTNode-&gt;child[j]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Huffman_tree2.<span class=\"built_in\">push_back</span>(*temp_HTNode);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Decompress::open_files</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    file_reader3=std::ifstream (compress_file_name, std::ios::binary);</span><br><span class=\"line\">    file_writer2=std::<span class=\"built_in\">ofstream</span> (decompress_file_name, std::ios::binary);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!file_reader3.<span class=\"built_in\">is_open</span>()||!file_writer2.<span class=\"built_in\">is_open</span>())&#123;</span><br><span class=\"line\">        std::cout&lt;&lt;<span class=\"string\">&quot;Fail in opening files!\\n&quot;</span>;</span><br><span class=\"line\">        <span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"main.h\">main.h</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// Created by administrator Guo on 23/11/2021 15:46.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifndef</span> DSHW2_V1_MAIN_H</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> DSHW2_V1_MAIN_H</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;iostream&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;fstream&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;string&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;vector&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;algorithm&quot;</span></span></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">HTNode</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> <span class=\"type\">long</span> <span class=\"type\">long</span> number;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> code;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> bit_of_code;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> <span class=\"type\">long</span> <span class=\"type\">long</span> weight;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> child[<span class=\"number\">16</span>];</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> parent;</span><br><span class=\"line\">    <span class=\"type\">bool</span> is_in_tree;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">bool</span> <span class=\"keyword\">operator</span>==(<span class=\"type\">const</span> <span class=\"type\">unsigned</span> <span class=\"type\">long</span> <span class=\"type\">long</span> i) <span class=\"type\">const</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> number == i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span> <span class=\"comment\">//DSHW2_V1_MAIN_H</span></span></span><br></pre></td></tr></table></figure>\n<h2 id=\"main.cpp\">main.cpp</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// Created by administrator Guo on 23/11/2021 15:46.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Compress.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Decompress.h&quot;</span></span></span><br><span class=\"line\"><span class=\"comment\">//It&#x27;s main function, the main part of the programme.</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> bit_of_unit;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> fork_of_tree;</span><br><span class=\"line\">    std::string operation;</span><br><span class=\"line\">    std::cout&lt;&lt;<span class=\"string\">&quot;Wait for command:\\n&quot;</span>;</span><br><span class=\"line\">    std::cin&gt;&gt;operation;</span><br><span class=\"line\">    std::string source_file_name;</span><br><span class=\"line\">    std::string compress_file_name;</span><br><span class=\"line\">    std::string decompress_file_name;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(operation==<span class=\"string\">&quot;compress&quot;</span>||operation==<span class=\"string\">&quot;c&quot;</span>)&#123;</span><br><span class=\"line\">        std::cout&lt;&lt;<span class=\"string\">&quot;Bits of unit:\\n&quot;</span>;</span><br><span class=\"line\">        std::cin&gt;&gt;bit_of_unit;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!(bit_of_unit%<span class=\"number\">2</span>==<span class=\"number\">0</span>&amp;&amp;<span class=\"number\">4</span>&lt;=bit_of_unit&amp;&amp;bit_of_unit&lt;=<span class=\"number\">32</span>))&#123;</span><br><span class=\"line\">            std::cout&lt;&lt;<span class=\"string\">&quot;Unsupported bit of unit!\\n&quot;</span>;</span><br><span class=\"line\">            <span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        std::cout&lt;&lt;<span class=\"string\">&quot;Forks of tree:\\n&quot;</span>;</span><br><span class=\"line\">        std::cin&gt;&gt;fork_of_tree;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!(<span class=\"number\">2</span>&lt;=fork_of_tree&amp;&amp;fork_of_tree&lt;=<span class=\"number\">16</span>))&#123;</span><br><span class=\"line\">            std::cout&lt;&lt;<span class=\"string\">&quot;Unsupported fork of tree!\\n&quot;</span>;</span><br><span class=\"line\">            <span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        std::cout&lt;&lt;<span class=\"string\">&quot;Source file name:\\n&quot;</span>;</span><br><span class=\"line\">        std::cin&gt;&gt;source_file_name;</span><br><span class=\"line\">        std::cout&lt;&lt;<span class=\"string\">&quot;Compress file name:\\n&quot;</span>;</span><br><span class=\"line\">        std::cin&gt;&gt;compress_file_name;</span><br><span class=\"line\">        <span class=\"function\">Compress <span class=\"title\">compress</span><span class=\"params\">(bit_of_unit,fork_of_tree,source_file_name,compress_file_name)</span></span>;</span><br><span class=\"line\">        compress.<span class=\"built_in\">open_files</span>();</span><br><span class=\"line\">        compress.<span class=\"built_in\">get_leaves</span>();</span><br><span class=\"line\">        compress.<span class=\"built_in\">complete_leaves</span>();</span><br><span class=\"line\">        compress.<span class=\"built_in\">struct_tree</span>();</span><br><span class=\"line\">        compress.<span class=\"built_in\">encode_tree</span>();</span><br><span class=\"line\">        compress.<span class=\"built_in\">print_tree</span>();</span><br><span class=\"line\">        compress.<span class=\"built_in\">write_tree</span>();</span><br><span class=\"line\">        compress.<span class=\"built_in\">write_content</span>();</span><br><span class=\"line\">        compress.<span class=\"built_in\">close_files</span>();</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(operation==<span class=\"string\">&quot;decompress&quot;</span>||operation==<span class=\"string\">&quot;d&quot;</span>)&#123;</span><br><span class=\"line\">        std::cout&lt;&lt;<span class=\"string\">&quot;Compress file name:\\n&quot;</span>;</span><br><span class=\"line\">        std::cin&gt;&gt;compress_file_name;</span><br><span class=\"line\">        std::cout&lt;&lt;<span class=\"string\">&quot;Decompress file name:\\n&quot;</span>;</span><br><span class=\"line\">        std::cin&gt;&gt;decompress_file_name;</span><br><span class=\"line\">        <span class=\"function\">Decompress <span class=\"title\">decompress</span><span class=\"params\">(compress_file_name,decompress_file_name)</span></span>;</span><br><span class=\"line\">        decompress.<span class=\"built_in\">open_files</span>();</span><br><span class=\"line\">        decompress.<span class=\"built_in\">read_tree</span>();</span><br><span class=\"line\">        decompress.<span class=\"built_in\">write_content</span>();</span><br><span class=\"line\">        decompress.<span class=\"built_in\">close_files</span>();</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        std::cout&lt;&lt;<span class=\"string\">&quot;Illegal operation!\\n&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//It&#x27;s a good habit.</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","categories":["Computer Science"],"tags":["Data Structure"]},{"title":"Hypothesis Testing","url":"/2022/01/07/Hypothesis-Testing/","content":"<p>假设检验，又称统计假设检验，是用来判断样本与样本、样本与总体的差异是由抽样误差引起还是本质差别造成的统计推断方法。显著性检验是假设检验中最常用的一种方法，也是一种最基本的统计推断形式，其基本原理是先对总体的特征做出某种假设，然后通过抽样研究的统计推理，对此假设应该被拒绝还是接受做出推断。</p>\n<span id=\"more\"></span>\n<h1 id=\"问题提法与基本概念\">问题提法与基本概念</h1>\n<h2 id=\"功效函数\">功效函数</h2>\n<p>设总体分布包含若干个未知参数<span class=\"math inline\">\\(\\theta_1,\\cdots,\\theta_k\\)</span>，<span class=\"math inline\">\\(H_0\\)</span>是关于这些参数的一个原假设，设有了样本<span class=\"math inline\">\\(X_1,\\cdots,X_n\\)</span>，而<span class=\"math inline\">\\(\\Phi\\)</span>是基于这些样本而对<span class=\"math inline\">\\(H_0\\)</span>所做的一个检验，则称检验<span class=\"math inline\">\\(\\Phi\\)</span>的功效函数为 <span class=\"math display\">\\[\n\\beta_\\Phi(\\theta_1,\\cdots,\\theta_k)=P_{\\theta_1,\\cdots,\\theta_k}(在检验\\Phi 之下，H_0被否定).\n\\]</span></p>\n<h2 id=\"检验的水平\">检验的水平</h2>\n<p>设<span class=\"math inline\">\\(\\Phi\\)</span>是原假设<span class=\"math inline\">\\(H_0\\)</span>的一个检验，<span class=\"math inline\">\\(\\beta_\\Phi(\\theta_1,\\cdots,\\theta_k)\\)</span>为其功效函数，<span class=\"math inline\">\\(\\alpha\\)</span>为常数<span class=\"math inline\">\\((0\\leqslant\\alpha\\leqslant 1)\\)</span>。如果 <span class=\"math display\">\\[\n\\beta_\\Phi(\\theta_1,\\cdots,\\theta_k)\\leqslant\\alpha(\\forall(\\theta_1,\\cdots,\\theta_k)\\in H_0),\n\\]</span> 则称<span class=\"math inline\">\\(\\Phi\\)</span>为<span class=\"math inline\">\\(H_0\\)</span>的一个水平为<span class=\"math inline\">\\(\\alpha\\)</span>的检验。</p>\n<h1 id=\"重要参数检验\">重要参数检验</h1>\n<h2 id=\"正态总体均值的检验\">正态总体均值的检验</h2>\n<h3 id=\"方差已知\">方差已知</h3>\n<p><span class=\"math display\">\\[\n\\frac{\\bar X_n-\\mu_0}{\\frac\\sigma{\\sqrt n}}\\sim N(0,1).\n\\]</span></p>\n<h3 id=\"方差未知\">方差未知</h3>\n<p><span class=\"math display\">\\[\n\\frac{\\bar X_n-\\mu_0}{\\frac\\S{\\sqrt n}}\\sim t_{n-1}.\n\\]</span></p>\n<h2 id=\"两个正态总体均值差的检验\">两个正态总体均值差的检验</h2>\n<h3 id=\"方差已知-1\">方差已知</h3>\n<p><span class=\"math display\">\\[\n\\frac{\\bar X-\\bar Y-(\\mu_1-\\mu_2)}{\\sqrt{\\frac {\\sigma_1^2} {n_1}+\\frac{\\sigma_2^2} {n_2}}}\\sim N(0,1).\n\\]</span></p>\n<h3 id=\"方差未知且相等\">方差未知且相等</h3>\n<p><span class=\"math display\">\\[\n\\frac{\\bar X-\\bar Y-(\\mu_1-\\mu_2)}{\\sqrt\\frac{(n_1-1)S_1^2+(n_2-1)S_2^2}{n_1+n_2-2}\\sqrt{\\frac 1 {n_1}+\\frac1 {n_2}}}\\sim t_{n_1+n_2-2}.\n\\]</span></p>\n<h2 id=\"正态分布方差的检验\">正态分布方差的检验</h2>\n<h3 id=\"单总体\">单总体</h3>\n<p><span class=\"math display\">\\[\n\\frac{(n-1)S_1^2}{\\sigma_1^2}\\sim\\chi_{n-1}^2\n\\]</span></p>\n<h3 id=\"双总体\">双总体</h3>\n<p><span class=\"math display\">\\[\n\\frac{\\frac{S_1^2}{\\sigma_1^2}}{\\frac{S_2^2}{\\sigma_2^2}}\\sim F_{n_1-1.n_2-1}.\n\\]</span></p>\n<h1 id=\"拟合优度检验\">拟合优度检验</h1>\n<p><span class=\"math display\">\\[\nZ=\\sum\\frac{(理论值-经验值)^2}{理论值}=\\sum_{i=1}^k \\frac{(np_i-\\nu_i)^2}{np_i}.\n\\]</span></p>\n<h2 id=\"理论分布完全已知且仅取有限个值的情况\">理论分布完全已知且仅取有限个值的情况</h2>\n<p>如果原假设<span class=\"math inline\">\\(H_0\\)</span>成立，则在样本大小<span class=\"math inline\">\\(n\\to\\infty\\)</span>时，<span class=\"math inline\">\\(Z\\)</span>的分布趋向于自由度为<span class=\"math inline\">\\(k-1\\)</span>的<span class=\"math inline\">\\(\\chi^2\\)</span>分布，即<span class=\"math inline\">\\(\\chi_{k-1}^2\\)</span>。</p>\n<h2 id=\"理论分布仅取有限个值但不完全已知的情况\">理论分布仅取有限个值但不完全已知的情况</h2>\n<p>在一定的条件下，若原假设<span class=\"math inline\">\\(H_0\\)</span>成立，则在样本大小<span class=\"math inline\">\\(n\\to\\infty\\)</span>时，<span class=\"math inline\">\\(Z\\)</span>的分布趋向于自由度为<span class=\"math inline\">\\(k-1-r\\)</span>的<span class=\"math inline\">\\(\\chi^2\\)</span>分布，即<span class=\"math inline\">\\(\\chi_{k-1-r}^2\\)</span>。</p>\n<h2 id=\"对列联表的应用\">对列联表的应用</h2>\n<p><span class=\"math display\">\\[\nV_n=\\frac{n(n_{11}n_{22}-n_{12}n_{21})^2}{n_{1\\cdot}n_{2\\cdot}n_{\\cdot 1}n_{\\cdot 2}}\\sim\\chi_1^2.\n\\]</span></p>\n","categories":["Mathematics"],"tags":["Mathematical Statistics"]},{"title":"Infinite Series","url":"/2021/03/07/Infinite-Series/","content":"<p>无穷级数笔记：</p>\n<span id=\"more\"></span>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/math08.pdf\">移动端点击链接下载查看</a></p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/math08.pdf\" data-height=\"600px\"></div>\n","categories":["Mathematics"],"tags":["Mathematical Analysis"]},{"title":"Implement Netgate-Netgate VPN with Windows 2003","url":"/2022/05/07/Implement-Netgate-Netgate-VPN-with-Windows-2003/","content":"<p>信息安全导论实验报告《用Windows2003实现网关-网关VPN》：</p>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/20220503实验报告：用Windows2003实现网关-网关VPN.pdf\">移动端点击链接下载查看</a></p>\n<span id=\"more\"></span>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/20220503实验报告：用Windows2003实现网关-网关VPN.pdf\" data-height=\"600px\"></div>\n","categories":["Computer Science"],"tags":["Information Security"]},{"title":"Integral Calculus of Single Variable Function","url":"/2021/03/07/Integral-Calculus-of-Single-Variable-Function/","content":"<p>单变量函数的积分学笔记：</p>\n<span id=\"more\"></span>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/math06.pdf\">移动端点击链接下载查看</a></p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/math06.pdf\" data-height=\"600px\"></div>\n","categories":["Mathematics"],"tags":["Mathematical Analysis"]},{"title":"Integral Representation of Analytic Functions","url":"/2021/12/07/Integral-Representation-of-Analytic-Functions/","content":"<h1 id=\"解析函数的积分表示\">解析函数的积分表示</h1>\n<p>复积分是研究解析函数的一个重要工具，解析函数的许多重要性质都是通过它的积分表示得到的，这是复变函数论在方法上的一个特点。</p>\n<span id=\"more\"></span>\n<h2 id=\"复变函数的积分\">复变函数的积分</h2>\n<h3 id=\"复变函数的积分-1\">复变函数的积分</h3>\n<p>设<span class=\"math inline\">\\(C\\)</span>是平面上的一条有向曲线，其起点是<span class=\"math inline\">\\(z_0\\)</span>，终点是<span class=\"math inline\">\\(Z\\)</span>，<span class=\"math inline\">\\(f(z)\\)</span>是定义在<span class=\"math inline\">\\(C\\)</span>上的单值函数。任意用一列分点 <span class=\"math display\">\\[\nz_k=x_k+y_k(k=0,1,\\cdots,n,z_n=Z)\n\\]</span> 把曲线<span class=\"math inline\">\\(C\\)</span>分成<span class=\"math inline\">\\(n\\)</span>个小段，在每个小段<span class=\"math inline\">\\(\\overset{\\LARGE\\frown}{z_{k-1} z_k}\\)</span>上任取点<span class=\"math inline\">\\(\\zeta_k\\)</span>，作和 <span class=\"math display\">\\[\n\\sum\\limits_{k=1}^nf(\\zeta_k)\\Delta z_k(\\Delta z_k=z_k-z_{k-1}).\n\\]</span> 记<span class=\"math inline\">\\(\\lambda=\\max\\limits_k|\\Delta z_k|\\)</span>，如果当<span class=\"math inline\">\\(\\lambda\\to0\\)</span>时，上述和式的极限存在，而且其值与弧段的分法和各<span class=\"math inline\">\\(\\zeta_k\\)</span>的取法无关，就称这个极限为<span class=\"math inline\">\\(f(z)\\)</span>沿曲线<span class=\"math inline\">\\(C\\)</span>自<span class=\"math inline\">\\(z_0\\)</span>到<span class=\"math inline\">\\(Z\\)</span>的积分，记作 <span class=\"math display\">\\[\n\\int\\limits_Cf(z)\\mathrm dz.\n\\]</span></p>\n<h3 id=\"复变函数积分与第二型曲线积分\">复变函数积分与第二型曲线积分</h3>\n<p>设<span class=\"math inline\">\\(f(z)=u(x,y)+\\mathrm iv(x,y)\\)</span>在曲线<span class=\"math inline\">\\(C\\)</span>上连续，则复积分<span class=\"math inline\">\\(\\int\\limits_Cf(z)\\mathrm dz\\)</span>存在，而且 <span class=\"math display\">\\[\n\\int\\limits_Cf(z)\\mathrm dz=\\int\\limits_Cu(x,y)\\mathrm dx-v(x,y)\\mathrm dy\\newline+\\mathrm i\\int\\limits_Cv(x,y)\\mathrm dx+u(x,y)\\mathrm dy\n\\]</span></p>\n<h2 id=\"柯西积分定理\">柯西积分定理</h2>\n<h3 id=\"柯西积分定理-1\">柯西积分定理</h3>\n<p>设<span class=\"math inline\">\\(D\\)</span>是由闭路<span class=\"math inline\">\\(C\\)</span>所围成的单连通区域，<span class=\"math inline\">\\(f(z)\\)</span>在闭区域<span class=\"math inline\">\\(\\overline D=C+D\\)</span>上解析，则 <span class=\"math display\">\\[\n\\int\\limits_Cf(z)\\mathrm dz=0.\n\\]</span> 这里，所谓<span class=\"math inline\">\\(f(z)\\)</span>在闭域<span class=\"math inline\">\\(D\\)</span>上解析，是指存在区域<span class=\"math inline\">\\(G\\)</span>，使得<span class=\"math inline\">\\(\\overline D\\subset G\\)</span>，且<span class=\"math inline\">\\(f(z)\\)</span>在<span class=\"math inline\">\\(G\\)</span>内解析。</p>\n<h3 id=\"多连通区域的柯西积分定理\">多连通区域的柯西积分定理</h3>\n<p>设<span class=\"math inline\">\\(f(z)\\)</span>在复闭路<span class=\"math inline\">\\(C=C_0+C_1^-+C_2^-+\\cdots+C_n^-\\)</span>及其所围成的多连通区域内解析，则 <span class=\"math display\">\\[\n\\int\\limits_{C_0}f(z)\\mathrm dz=\\int\\limits_{C_1}f(z)\\mathrm dz+\\int\\limits_{C_2}f(z)\\mathrm dz+\\cdots+\\int\\limits_{C_n}f(z)\\mathrm dz\n\\]</span> 或 <span class=\"math display\">\\[\n\\int\\limits_Cf(z)\\mathrm dz=0.\n\\]</span></p>\n<h2 id=\"柯西积分公式\">柯西积分公式</h2>\n<h3 id=\"柯西积分公式-1\">柯西积分公式</h3>\n<p>设函数<span class=\"math inline\">\\(f(z)\\)</span>在闭路（或复闭路）<span class=\"math inline\">\\(C\\)</span>及其所围区域<span class=\"math inline\">\\(D\\)</span>内解析，则对<span class=\"math inline\">\\(D\\)</span>内任一点<span class=\"math inline\">\\(z\\)</span>，有 <span class=\"math display\">\\[\nf(z)=\\frac{1}{2\\pi \\mathrm i}\\int\\limits_C\\frac{f(\\zeta)}{\\zeta-z}\\mathrm d\\zeta.\n\\]</span></p>\n<h3 id=\"柯西积分公式-2\">柯西积分公式</h3>\n<p>设函数<span class=\"math inline\">\\(f(z)\\)</span>在闭路（或复闭路）<span class=\"math inline\">\\(C\\)</span>及其所围区域<span class=\"math inline\">\\(D\\)</span>内解析，则对<span class=\"math inline\">\\(D\\)</span>内任一点<span class=\"math inline\">\\(z\\)</span>，<span class=\"math inline\">\\(f(z)\\)</span>有任意阶导数，且 <span class=\"math display\">\\[\nf^{(n)}(z)=\\frac{n!}{2\\pi \\i}\\int\\limits_C\\frac{f(\\zeta)}{(\\zeta-z)^{n+!}}\\mathrm d\\zeta.\n\\]</span></p>\n<h2 id=\"原函数\">原函数</h2>\n<h3 id=\"原函数-1\">原函数</h3>\n<p>如果在区域<span class=\"math inline\">\\(D\\)</span>内有<span class=\"math inline\">\\(F&#39;(z)=f(z)\\)</span>，则<span class=\"math inline\">\\(F(z)\\)</span>称为<span class=\"math inline\">\\(f(z)在区域\\)</span>D内的一个原函数。</p>\n<h3 id=\"原函数与变上限积分\">原函数与变上限积分</h3>\n<p>设<span class=\"math inline\">\\(f(z)\\)</span>在单连通区域<span class=\"math inline\">\\(D\\)</span>内连续，且对<span class=\"math inline\">\\(D\\)</span>内任意闭路<span class=\"math inline\">\\(C\\)</span>，有<span class=\"math inline\">\\(\\int\\limits_Cf(z)=\\mathrm dz=0\\)</span>，那么，由变上限积分所确定的函数 <span class=\"math display\">\\[\nF(z)=\\int_{z_0}^zf(z)\\mathrm dz\n\\]</span> （<span class=\"math inline\">\\(z_0\\)</span>是<span class=\"math inline\">\\(D\\)</span>内一定点）是<span class=\"math inline\">\\(D\\)</span>内的解析函数，而且 <span class=\"math display\">\\[\nF&#39;(z)=f(z)(z\\in D).\n\\]</span></p>\n<h3 id=\"莫累拉定理\">莫累拉定理</h3>\n<p>设<span class=\"math inline\">\\(f(z)\\)</span>在单连通区域<span class=\"math inline\">\\(D\\)</span>内连续，且对<span class=\"math inline\">\\(D\\)</span>内任意闭路<span class=\"math inline\">\\(C\\)</span>，有<span class=\"math inline\">\\(\\int\\limits_Cf(z)=\\mathrm dz=0\\)</span>，那么<span class=\"math inline\">\\(f(z)\\)</span>是<span class=\"math inline\">\\(D\\)</span>内的解析函数。</p>\n<h2 id=\"解析函数与调和函数的关系\">解析函数与调和函数的关系</h2>\n<h3 id=\"调和函数\">调和函数</h3>\n<p>如果实二元函数<span class=\"math inline\">\\(u(x,y)\\)</span>在区域<span class=\"math inline\">\\(D\\)</span>内有二阶连续偏导数，且在<span class=\"math inline\">\\(D\\)</span>内满足拉普拉斯方程 <span class=\"math display\">\\[\n\\frac{\\partial^2 u}{\\partial x^2}+\\frac{\\partial^2 u}{\\partial y^2}=0,\n\\]</span> 则称<span class=\"math inline\">\\(u(x,y)\\)</span>是域<span class=\"math inline\">\\(D\\)</span>内的调和函数。</p>\n<h3 id=\"由解析推调和\">由解析推调和</h3>\n<p>设<span class=\"math inline\">\\(f(z)=u(x,y)+iv(x,y)\\)</span>在域<span class=\"math inline\">\\(D\\)</span>内解析，那么它的实部<span class=\"math inline\">\\(u\\)</span>及虚部<span class=\"math inline\">\\(v\\)</span>都是<span class=\"math inline\">\\(D\\)</span>的调和函数。</p>\n<h3 id=\"解析函数的几何性质\">解析函数的几何性质</h3>\n<p>设<span class=\"math inline\">\\(f(z)=u+iv\\)</span>是一解析函数，且<span class=\"math inline\">\\(f&#39;(z)\\neq 0\\)</span>，那么等值曲线族 <span class=\"math display\">\\[\nu(x,y)=K_1\n\\]</span> 与 <span class=\"math display\">\\[\nv(x,y)=K_2\n\\]</span> 在其公共点上永远是相互正交的，这里，<span class=\"math inline\">\\(K1\\)</span>及<span class=\"math inline\">\\(K_2\\)</span>为常数。</p>\n<h3 id=\"由调和找解析\">由调和找解析</h3>\n<p>设<span class=\"math inline\">\\(u(x,y)\\)</span>是单连通区域<span class=\"math inline\">\\(D\\)</span>内的调和函数，则由线积分所确定的函数 <span class=\"math display\">\\[\nv(x,y)=\\int_{(x_0,y_0)}^{(x,y)}-\\frac{\\partial u}{\\partial y}\\mathrm dx+\\frac{\\partial u}{\\partial x}\\mathrm dy+C\n\\]</span> 使得<span class=\"math inline\">\\(f(z)=u(x,y)+iv(x,y)\\)</span>在<span class=\"math inline\">\\(D\\)</span>内解析。其中，<span class=\"math inline\">\\((x,y)\\)</span>是<span class=\"math inline\">\\(D\\)</span>内任一点，<span class=\"math inline\">\\((x_0,y_0)\\)</span>是<span class=\"math inline\">\\(D\\)</span>内一定点，<span class=\"math inline\">\\(C\\)</span>是实常数。</p>\n","categories":["Mathematics"],"tags":["Complex Function"]},{"title":"Introduction to Information Security Crip","url":"/2022/05/21/Introduction-to-Information-Security-Crip/","content":"<p>信息安全导论期末考试合法小抄：</p>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/20220521考试资料：信息安全导论期末考试小抄.pdf\">移动端点击链接下载查看</a></p>\n<span id=\"more\"></span>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/20220521考试资料：信息安全导论期末考试小抄.pdf\" data-height=\"600px\"></div>\n","categories":["Computer Science"],"tags":["Information Security"]},{"title":"Introduction of Stochastic Process","url":"/2021/10/27/Introduction-of-Stochastic-Process/","content":"<h1 id=\"引论\">引论</h1>\n<p>一般来说，把一组随机变量定义为随机过程。在研究随机过程时人们透过表面的偶然性描述出必然的内在规律并以概率的形式来描述这些规律，从偶然中悟出必然正是这一学科的魅力所在。</p>\n<span id=\"more\"></span>\n<h2 id=\"引言\">引言</h2>\n<h3 id=\"随机过程\">随机过程</h3>\n<p>随机过程就是一族随机变量<span class=\"math inline\">\\(\\{X(t),t\\in T\\}\\)</span>，其中<span class=\"math inline\">\\(t\\)</span>为参数，它属于某个指标集<span class=\"math inline\">\\(T\\)</span>，<span class=\"math inline\">\\(T\\)</span>称为参数集。</p>\n<h3 id=\"严格平稳\">严格平稳</h3>\n<p>如果随机过程<span class=\"math inline\">\\(X(t)\\)</span>对任意的<span class=\"math inline\">\\(t_1,\\cdots,t_n\\in T\\)</span>和任何<span class=\"math inline\">\\(h\\)</span>有<span class=\"math display\">\\[(X(t_1+h),\\cdots,X(t_n+h)) \\mathop{=}\\limits^d(X(t_1),\\cdots,X(t_n))\\]</span>，则称为严格平稳的。</p>\n<h3 id=\"宽平稳\">宽平稳</h3>\n<p>如果随机过程的所有二阶矩存在并有<span class=\"math inline\">\\(EX(t)=m\\)</span>及协方差函数<span class=\"math inline\">\\(R_X(t,s)\\)</span>只与时间差<span class=\"math inline\">\\(t-s\\)</span>有关，则称为宽平稳的或二阶矩平稳的。</p>\n<h3 id=\"独立增量过程\">独立增量过程</h3>\n<p>如果对任意<span class=\"math inline\">\\(t_1&lt;t_2&lt;\\cdots&lt;t_n,t_1,\\cdots,t_n\\in T\\)</span>，随机变量是相互独立的，则<span class=\"math inline\">\\(X(t)\\)</span>称为独立增量过程。如果进一步有对任意的<span class=\"math inline\">\\(t1,t2\\)</span>，<span class=\"math display\">\\[X(t_1+h)-X(t_1)\\mathop{=}\\limits^dX(t_2+h)-X(t_2)\\]</span>，则过程称为有平稳独立增量的过程。</p>\n<h2 id=\"条件期望与矩母函数\">条件期望与矩母函数</h2>\n<h3 id=\"条件期望的重要性质\">条件期望的重要性质</h3>\n<p>若<span class=\"math inline\">\\(X\\)</span>与<span class=\"math inline\">\\(Y\\)</span>独立，则<span class=\"math inline\">\\(E(X|Y=y)=EX\\)</span>。</p>\n<p>条件期望有所谓的平滑性：<span class=\"math inline\">\\(EX=\\int E(X|Y=y)dF_Y(y)=E[E(X|Y)]\\)</span>。</p>\n<p>对随机变量<span class=\"math inline\">\\(X,Y\\)</span>的函数<span class=\"math inline\">\\(\\phi(X,Y)\\)</span>，恒有<span class=\"math display\">\\[E[\\phi(X,Y)|Y=y]=E[\\phi(X,y)|Y=y]\\]</span>。</p>\n<h3 id=\"矩母函数\">矩母函数</h3>\n<p>随机变量<span class=\"math inline\">\\(X\\)</span>的矩母函数定义为随机变量<span class=\"math inline\">\\(e^{tX}\\)</span>的期望，记作<span class=\"math inline\">\\(g(t)\\)</span>，即<span class=\"math inline\">\\(g(t)=E(e^{tX})=\\int e^{tX}dF(x)\\)</span>。</p>\n<h3 id=\"概率生成函数\">概率生成函数</h3>\n<p>若<span class=\"math inline\">\\(X\\)</span>为离散随机变量，则期望<span class=\"math inline\">\\(E(s^X)\\)</span>为其概率生成函数。记作<span class=\"math inline\">\\(\\phi_X(s)\\)</span>。特别地，若<span class=\"math inline\">\\(P(X=k)=p_k,k=0,1,2,\\cdots\\)</span>，则<span class=\"math inline\">\\(\\phi_X(s)=\\sum\\limits_{k=0}\\limits^\\infty p_ks^k\\)</span>。</p>\n<h2 id=\"收敛性\">收敛性</h2>\n<h3 id=\"依概率收敛和几乎必然收敛\">依概率收敛和几乎必然收敛</h3>\n<p>设<span class=\"math inline\">\\(\\{X_n,n\\geqslant1\\}\\)</span>是一列随机变量，若存在随机变量<span class=\"math inline\">\\(X\\)</span>，使对<span class=\"math inline\">\\(\\forall \\varepsilon&gt;0\\)</span>，有<span class=\"math inline\">\\(\\lim\\limits_{n\\to\\infty}P(|X_n-X|\\geqslant\\varepsilon)=0\\)</span>，则称随机变量序列<span class=\"math inline\">\\(\\{X_n,n\\geqslant1\\}\\)</span>依概率收敛于<span class=\"math inline\">\\(X\\)</span>，记为<span class=\"math inline\">\\(X_n\\mathop\\to\\limits^p X\\)</span>。</p>\n<p>如果事件<span class=\"math inline\">\\(\\{\\omega:\\lim\\limits_{n\\to\\infty}(X_n(\\omega)-X(\\omega))=0\\}\\)</span>的概率为<span class=\"math inline\">\\(1\\)</span>，即<span class=\"math inline\">\\(P(\\lim\\limits_{n\\to\\infty}(X_n-X)=0)=1\\)</span>，则称随机变量序列<span class=\"math inline\">\\(\\{X_n,n\\geqslant1\\}\\)</span>几乎必然收敛于<span class=\"math inline\">\\(X\\)</span>，记为<span class=\"math inline\">\\(X_n\\to X,a.s.\\)</span>，也称随机变量序列以概率<span class=\"math inline\">\\(1\\)</span>收敛于<span class=\"math inline\">\\(X\\)</span>。</p>\n<h3 id=\"均方收敛\">均方收敛</h3>\n<p>设随机变量<span class=\"math inline\">\\(X\\)</span>和<span class=\"math inline\">\\(X_n,n\\geqslant1\\)</span>，都有有限的二阶矩，如果<span class=\"math inline\">\\(\\lim\\limits_{n\\to\\infty}E(X_n-X)^2=0\\)</span>，则称<span class=\"math inline\">\\(X_n\\)</span>军方收敛于<span class=\"math inline\">\\(X\\)</span>，记为<span class=\"math inline\">\\(X_n\\mathop\\to\\limits^{L_2}X\\)</span>。</p>\n<h2 id=\"难题集萃\">难题集萃</h2>\n<h3 id=\"期望不等式\">期望不等式</h3>\n<p><span class=\"math inline\">\\(X,Y\\)</span>为随机变量，<span class=\"math inline\">\\(EX,EY,Eg(Y)\\)</span>存在，证明：<span class=\"math inline\">\\(E(Y-E(Y|X))^2\\leqslant E(Y-g(X))^2\\)</span>。</p>\n<p>解： <span class=\"math display\">\\[\nE((Y-E(Y|X))^2-(Y-g(X))^2)\n\\\\=E((2Y-E(Y|X)-g(X))(g(X)-E(Y|X)))\n\\\\=E(E(((2Y-E(Y|X)-g(X))(g(X)-E(Y|X)))|X))\n\\\\=E(-(g(X))^2+2g(XE(Y|X))-(E(Y|X))^2)\n\\\\=-E(g(X)-E(Y|X))^2\n\\\\  \\leqslant0.\n\\]</span></p>\n","categories":["Mathematics"],"tags":["Stochastic Process"]},{"title":"Lattice and Boolean Algebra","url":"/2021/07/03/Lattice-and-Boolean-Algebra/","content":"<p>格和布尔代数笔记：</p>\n<span id=\"more\"></span>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/math19.pdf\">移动端点击链接下载查看</a></p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/math19.pdf\" data-height=\"600px\"></div>\n","categories":["Mathematics"],"tags":["Algebra Structure"]},{"title":"Learn from the Past","url":"/2021/12/13/Learn-from-the-Past/","content":"<h1 id=\"learn-from-the-past\">Learn from the Past</h1>\n<p>Experiment Report to ICS Lab6.</p>\n<span id=\"more\"></span>\n<h2 id=\"task\">Task</h2>\n<p>The last lab might be the simplest one. Use a high-level programming language (e. g. C, Python, C++) to implement all the code that has been written before. The algorithm needs to be consistent with what was used before, e. g. a replication of the first experiment cannot be implemented with just one line of multiplication.</p>\n<h2 id=\"qa\">Q&amp;A</h2>\n<h3 id=\"q1-how-to-evaluate-the-performance-of-my-own-high-level-language-programs\">Q1: How to evaluate the performance of my own high-level language programs?</h3>\n<p>There are 2 efficient methods to evaluate the performance of programmes. They are called time complexity and space complexity. Each of them can be measured sketchily or precisely. To measure time performance, I can get the commencing and the termination time of the programme, then get how long it takes to complete execution of the programme. But it is a rough result. To get precise result of how many clock cycle it takes, A significant method is assemble high level language into assembly. Then precise clock cycles can be measured. As for space performance, It is similar to the time one, which is roughly estimating with high level language itself or precisely calculating by assembly.</p>\n<h3 id=\"q2-why-is-a-high-level-language-easier-to-write-than-lc3-assembly\">Q2: Why is a high-level language easier to write than LC3 assembly?</h3>\n<p>As is known to all, high level language has portability, which LC-3 assembly does not. In addition, grammar of high level language is user-friendly, but assembly is machine-friendly. Without brace(C like language) or indent(Python), the structure of the programme is unclear in assembly, especially when reading others' programmes or debugging. With no type of variables, I can only operate storage of different type of variables inefficiently.</p>\n<h3 id=\"q3-what-instructions-do-i-think-need-to-be-added-to-lc3-i-can-think-about-the-previous-experiments-and-what-instructions-could-be-added-to-greatly-simplify-the-previous-programming\">Q3: What instructions do I think need to be added to LC3? (I can think about the previous experiments and what instructions could be added to greatly simplify the previous programming)</h3>\n<p>I think that everyone using LC-3 wants to add a right-shift instruction. If there is no right-shift instruction, division is very difficult to operate. Cycling minus? Sequentially multiply? Maybe both are not a good method. Furthermore, a right-shift is easy to realised in fundamental circuit. With a bit-splice operator in Verilog HDL, Nexy4-DDR development board can do it.</p>\n<h3 id=\"q4-is-there-anything-i-need-to-learn-from-lc3-for-the-high-level-language-i-use\">Q4: Is there anything I need to learn from LC3 for the high-level language I use?</h3>\n<p>Yes, a lot of things. After learning the process of assembling, some basic regulation of high level language is easer to represent. Additionally. I learned that some basic operations are slow and some are quick in realisation, but they are the same easy to write in a high level language. Due to high level language is developing from assembly and machine language, we should have learned low level language first. What a pity!👻</p>\n<h2 id=\"gains\">Gains</h2>\n<p>No pains, no gains!</p>\n<p>Thanks for Prof. Zhang and all TAs from the bottom of my heart.</p>\n","categories":["Computer Science"],"tags":["Computing System"]},{"title":"Lending Your Name","url":"/2021/11/30/Lending-Your-Name/","content":"<h1 id=\"experiment-report-of-lab2-lending-your-name\">Experiment Report of Lab2: Lending Your Name</h1>\n<p>From this lab, Prof. An ask TA to write guide in English, so I also try to write report in English.</p>\n<span id=\"more\"></span>\n<h2 id=\"task\">Task</h2>\n<p><strong>In lab 2, the task is very simple.</strong> Store the n-th number of a sequence into register R7. As the Fibonacci sequence grows quite rapidly, we made a little difference with the origin Fibonacci sequence: <span class=\"math display\">\\[\nF(0) = 1;\\\\\nF(1) = 1;\\\\\nF(2) = 2;\\\\\nF(n) = F(n-1) + 2F(n-3) (\\mod 1024) (1 \\leqslant n \\leqslant 16384)\n\\]</span> Divide my student number into four equal segments, labelling them with a, b, c and d. For example, my student ID is PB20111712, so a = 20, b = 11, c = 17, d=12. Store value of F(a), F(b), F(c) and F(d) at the end of your code with '.FILL' pseudo command.</p>\n<h2 id=\"method\">Method</h2>\n<ol type=\"1\">\n<li>If n is less than 3, the value can be gotten directly</li>\n<li>When n is more than 2, I should use .recursion to get <span class=\"math inline\">\\(F(n)\\)</span>. I used two other registers to store <span class=\"math inline\">\\(2F(n-3)\\)</span> and <span class=\"math inline\">\\(F(n)\\)</span>. CAUTION: <span class=\"math inline\">\\(F(n)\\)</span> may larger than 1024, but it cannot larger than 3072, which is 3 times of 1024.</li>\n<li>So I subtract 3072 from <span class=\"math inline\">\\(F(n)\\)</span>, and than add 1024 into it, until it is positive. CAUTION: Both 1024 and 3072 are larger than what can be represented by a 5-bit immediate number, so they should be stored by '.FILL' instruction.</li>\n<li>In every cycle, I subtract 1 from n, which is not negative. When n is negative, the <span class=\"math inline\">\\(F(n)\\)</span> is gotten, then store it into register R7, and the programme finishes.</li>\n</ol>\n<h2 id=\"gains\">Gains</h2>\n<ol type=\"1\">\n<li>The first L-version took 32 lines, and the last one 30. I optimised the programme by firstly stored <span class=\"math inline\">\\(F(0),F(1),F(2)\\)</span> all in R3.</li>\n<li>No pains,no gains!</li>\n</ol>\n<h2 id=\"codes\">Codes</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">.ORIG x3000</span><br><span class=\"line\">ADD R3,R3,#1</span><br><span class=\"line\">ADD R0,R0,#-1</span><br><span class=\"line\">BRn LABLE2</span><br><span class=\"line\">ADD R1,R3,#0</span><br><span class=\"line\">ADD R0,R0,#-1</span><br><span class=\"line\">BRn LABLE2</span><br><span class=\"line\">ADD R2,R3,#0</span><br><span class=\"line\">ADD R3,R3,#1</span><br><span class=\"line\">ADD R0,R0,#-1</span><br><span class=\"line\">BRn LABLE2</span><br><span class=\"line\">LABLE4 ADD R4,R1,R1</span><br><span class=\"line\">ADD R4,R4,R3</span><br><span class=\"line\">LD R5,NUMBER1</span><br><span class=\"line\">LD R6,NUMBER0</span><br><span class=\"line\">ADD R4,R4,R6</span><br><span class=\"line\">LABLE3 ADD R4,R4,R5</span><br><span class=\"line\">BRn LABLE3</span><br><span class=\"line\">ADD R1,R2,#0</span><br><span class=\"line\">ADD R2,R3,#0</span><br><span class=\"line\">ADD R3,R4,#0</span><br><span class=\"line\">ADD R0,R0,#-1</span><br><span class=\"line\">BRzp LABLE4</span><br><span class=\"line\">BRn LABLE2</span><br><span class=\"line\">LABLE2 ADD R7,R3,#0</span><br><span class=\"line\">NUMBER0 .FILL #-3072</span><br><span class=\"line\">NUMBER1 .FILL #1024</span><br><span class=\"line\">Fa .FILL #930</span><br><span class=\"line\">Fb .FILL #246</span><br><span class=\"line\">Fc .FILL #742</span><br><span class=\"line\">Fd .FILL #418</span><br><span class=\"line\">.END</span><br></pre></td></tr></table></figure>\n","categories":["Computer Science"],"tags":["Computing System"]},{"title":"Limit","url":"/2021/03/07/Limit/","content":"<p>极限笔记：</p>\n<span id=\"more\"></span>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/math03.pdf\">移动端点击链接下载查看</a></p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/math03.pdf\" data-height=\"600px\"></div>\n","categories":["Mathematics"],"tags":["Mathematical Analysis"]},{"title":"Linear Equations","url":"/2021/07/13/Linear-Equations/","content":"<p>线性方程组笔记：</p>\n<span id=\"more\"></span>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/math10.pdf\">移动端点击链接下载查看</a></p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/math10.pdf\" data-height=\"600px\"></div>\n","categories":["Mathematics"],"tags":["Linear Algebra"]},{"title":"Linear List","url":"/2021/12/29/Linear-List/","content":"<p>线性表ADT的逻辑结构、存储结构及基本操作：</p>\n<span id=\"more\"></span>\n<h1 id=\"逻辑结构\">逻辑结构</h1>\n<p>ADT List{</p>\n<p>数据对象： <span class=\"math display\">\\[\nD=\\{a_i|a_i\\in ElemSet,i=1,2,\\cdots,n,n\\geqslant0\\}\n\\]</span> 数据关系： <span class=\"math display\">\\[\nR1=\\{&lt;a_{i-1},a_i&gt;|a_{i-1},a_i\\in D,i=1,2,\\cdots,n\\}\n\\]</span> 基本操作：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">InitList(&amp;L);</span><br><span class=\"line\">DestroyList(&amp;L);</span><br><span class=\"line\">ClearList(&amp;L);</span><br><span class=\"line\">ListEmpty(L);</span><br><span class=\"line\">ListLength(L);</span><br><span class=\"line\">GetElem(L,i,&amp;e);</span><br><span class=\"line\">LocateElem(L,e,compare());</span><br><span class=\"line\">PriorElem(L,cur_e,&amp;pre_e);</span><br><span class=\"line\">NextElem(L,cur_e,&amp;next_e);</span><br><span class=\"line\">ListInsert(&amp;L,i,e);</span><br><span class=\"line\">ListDelete(&amp;L,i,&amp;e);</span><br><span class=\"line\">ListTraverse(L,visit());</span><br></pre></td></tr></table></figure>\n<p>}ADT List</p>\n<h1 id=\"存储结构\">存储结构</h1>\n<h2 id=\"线性表的动态分配顺序存储结构\">线性表的动态分配顺序存储结构</h2>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> LIST_INIT_SIZE 100</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> LISTINCREMENT 10</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">    ElemType* elem;</span><br><span class=\"line\">    <span class=\"type\">int</span> length;</span><br><span class=\"line\">    <span class=\"type\">int</span> listsize;</span><br><span class=\"line\">&#125;SqList;</span><br></pre></td></tr></table></figure>\n<h2 id=\"线性表的单链表存储结构\">线性表的单链表存储结构</h2>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">LNode</span>&#123;</span></span><br><span class=\"line\">    ElemType data;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">LNode</span>* <span class=\"title\">next</span>;</span></span><br><span class=\"line\">&#125;LNode,*LinkList;</span><br></pre></td></tr></table></figure>\n<h2 id=\"线性表的静态单链表存储结构\">线性表的静态单链表存储结构</h2>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MAXSIZE 1000</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">    ElemType data;</span><br><span class=\"line\">    <span class=\"type\">int</span> cur;</span><br><span class=\"line\">&#125;component,SLinkList[MAXSIZE];</span><br></pre></td></tr></table></figure>\n<h2 id=\"线性表的双向链表存储结构\">线性表的双向链表存储结构</h2>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">DuLNode</span>&#123;</span></span><br><span class=\"line\">    ElemType data;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">DuLNode</span>* <span class=\"title\">prior</span>;</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">DuLNode</span>* <span class=\"title\">next</span>;</span></span><br><span class=\"line\">&#125;DuLNode,*DuLinkList;</span><br></pre></td></tr></table></figure>\n<h1 id=\"基本操作\">基本操作</h1>\n<h2 id=\"顺序表\">顺序表</h2>\n<h3 id=\"数据对象与数据关系的实现\">数据对象与数据关系的实现</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> LIST_INIT_SIZE 100\t<span class=\"comment\">//线性表存储空间的初始分配量</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> LISTINCREMENT 10\t<span class=\"comment\">//存储空间分配增量</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> &#123;</span></span><br><span class=\"line\">    ElemType *elem;\t\t\t<span class=\"comment\">//存储空间基址</span></span><br><span class=\"line\">    <span class=\"type\">int</span> length;\t\t\t    <span class=\"comment\">//当前元素个数（表长）</span></span><br><span class=\"line\">    <span class=\"type\">int</span> listsize;\t\t\t<span class=\"comment\">//当前分配存储容量</span></span><br><span class=\"line\">    \t\t\t\t\t   <span class=\"comment\">//以sizeof(ElemType)为单位</span></span><br><span class=\"line\">&#125; SqList;</span><br></pre></td></tr></table></figure>\n<h3 id=\"初始化线性表\">初始化线性表</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">InitSqList</span><span class=\"params\">(SqList&amp;L)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//从无到有，在内存中创造出一个线性表</span></span><br><span class=\"line\">    L=(ElemType*)<span class=\"built_in\">malloc</span>(LIST_INIT_SIZE*<span class=\"keyword\">sizeof</span>(ElemType));</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!L)</span><br><span class=\"line\">        <span class=\"built_in\">exit</span>(OVERFLOW);</span><br><span class=\"line\">    L.length=<span class=\"number\">0</span>;</span><br><span class=\"line\">    L.listsize=LIST_INIT_SIZE;</span><br><span class=\"line\">&#125;<span class=\"comment\">//InitSqList</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"按值查找\">按值查找</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">LocateElem</span><span class=\"params\">(SqList L,ElemType x,equal)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//在顺序表中从头查找结点值等于给定值x的结点</span></span><br><span class=\"line\">    <span class=\"comment\">//返回结点的位置</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;L.length&amp;&amp;*(L.elem+i<span class=\"number\">-1</span>)!=x;++i)&#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> i&lt;L.length?i+<span class=\"number\">1</span>:<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;<span class=\"comment\">//LocateElem</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"求表的长度\">求表的长度</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">ListLength</span><span class=\"params\">(SqList L)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//返回表的长度</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> L.length;</span><br><span class=\"line\">&#125;<span class=\"comment\">//ListLength</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"提取函数\">提取函数</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">GetElem</span><span class=\"params\">(SqList L,<span class=\"type\">int</span> i,ElemType &amp;e)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//在表中提取第i个元素的值</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(i&lt;=<span class=\"number\">0</span>||i&gt;L.length)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ERROR;</span><br><span class=\"line\">    e=L.elem[i<span class=\"number\">-1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;<span class=\"comment\">//GetElem</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"插入元素\">插入元素</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">ListInsert_Sq</span><span class=\"params\">(SqList L,<span class=\"type\">int</span> i,ElemType e)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//在表L中第i个位置前插入新元素e</span></span><br><span class=\"line\">    <span class=\"comment\">//时间复杂度O(n)</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(i&lt;<span class=\"number\">1</span>||i&gt;L.length)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ERROR;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(L.length&gt;=L.listsize)&#123;</span><br><span class=\"line\">        newbase=(ElemType*)<span class=\"built_in\">realloc</span>((L.listsize+LISTINCREMENT)*<span class=\"keyword\">sizeof</span>(ElemType));</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!newbase)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> OVERFLOW;</span><br><span class=\"line\">        L.elem=newbase;</span><br><span class=\"line\">        L.listsize+=LISTINCREMENT;</span><br><span class=\"line\">    &#125;<span class=\"comment\">//if</span></span><br><span class=\"line\">    q=L.elem+i<span class=\"number\">-1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(p=L.elem+L.length<span class=\"number\">-1</span>;p&gt;=q;--p)</span><br><span class=\"line\">        *(p+<span class=\"number\">1</span>)=*p;</span><br><span class=\"line\">    *q=e;</span><br><span class=\"line\">    ++L.length;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;<span class=\"comment\">//ListInsert_Sq</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"删除元素\">删除元素</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">ListDelete_Sq</span><span class=\"params\">(SqList &amp;L,<span class=\"type\">int</span> i,ElemType &amp;e)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//在表L中删除第i个元素，并用e返回其值</span></span><br><span class=\"line\">    <span class=\"comment\">//时间复杂度O(n)</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(i&lt;<span class=\"number\">1</span>||i&gt;L.length)<span class=\"keyword\">return</span> ERROR;</span><br><span class=\"line\">    p=L.elem+i<span class=\"number\">-1</span>;</span><br><span class=\"line\">    e=*p;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(q=L.elem+L.length<span class=\"number\">-1</span>;p&lt;=q;++p)</span><br><span class=\"line\">        *p=*(p+<span class=\"number\">1</span>);</span><br><span class=\"line\">    --L.length;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;<span class=\"comment\">//ListDelete_Sq</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"集合的并\">集合的并</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">Union</span><span class=\"params\">(SqList &amp;La,SqList Lb)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//时间复杂度O(La.Length+Lb.length)</span></span><br><span class=\"line\">    <span class=\"comment\">//空间复杂度O(1)</span></span><br><span class=\"line\">    n=ListLength(La);</span><br><span class=\"line\">    m=ListLength(Lb);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;m;i++)&#123;</span><br><span class=\"line\">        GetElem(Lb,i,e);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(LocateElem(La,e,equal))</span><br><span class=\"line\">            ListInsert_Sq(La,++n,e);</span><br><span class=\"line\">    &#125;<span class=\"comment\">//for</span></span><br><span class=\"line\">&#125;<span class=\"comment\">//Union</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"集合相减\">集合相减</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">Intersection</span><span class=\"params\">(SqList &amp;La,SqList Lb)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//时间复杂度O(La.Length+Lb.length)</span></span><br><span class=\"line\">    <span class=\"comment\">//空间复杂度O(1)</span></span><br><span class=\"line\">    n=ListLength(La);</span><br><span class=\"line\">    m=ListLength(Lb);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;m;++i)&#123;</span><br><span class=\"line\">        GetElem(Lb,i,e);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x=LocateElem(La,e,equal))</span><br><span class=\"line\">            ListDelete_Sq(La,x,e);</span><br><span class=\"line\">    &#125;<span class=\"comment\">//for</span></span><br><span class=\"line\">&#125;<span class=\"comment\">//Intersection</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"有序表的归并\">有序表的归并</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">MergeList_Sq</span><span class=\"params\">(SqList La,SqList,Lb,SqLIst &amp;Lc)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//两个有序表拼成更大的有序表</span></span><br><span class=\"line\">    <span class=\"comment\">//时间复杂度O(La.length+Lb.length)</span></span><br><span class=\"line\">    <span class=\"comment\">//空间复杂度O(La.length+Lb.length)</span></span><br><span class=\"line\">    pa=La.elem;</span><br><span class=\"line\">    pb=Lb.elem;</span><br><span class=\"line\">    pc=(ElemType*)<span class=\"built_in\">malloc</span>((La.length+Lb.length)*<span class=\"keyword\">sizeof</span>(ElemType));</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!pc)</span><br><span class=\"line\">        <span class=\"built_in\">exit</span>(OVERFLOW);</span><br><span class=\"line\">    Lc.elem=pc;</span><br><span class=\"line\">    Lc.listsize=La.length+Lb.length;</span><br><span class=\"line\">    Lc.length=Lc.listsize;</span><br><span class=\"line\">    pa_last=La.elem+La.length;</span><br><span class=\"line\">    pb_last=Lb.elem+Lb.length;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;pa&lt;pa_last&amp;&amp;pb&lt;pb_last;)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(*pa&lt;*pb)</span><br><span class=\"line\">            *pc++=*pa++;</span><br><span class=\"line\">    \t<span class=\"keyword\">else</span></span><br><span class=\"line\">        \t*pc++=*pb++;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;pa&lt;pa_last;)</span><br><span class=\"line\">        *pc++=*pa++;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;pb&lt;pb_last;)</span><br><span class=\"line\">        *pc++=*pb++;</span><br><span class=\"line\">&#125;<span class=\"comment\">//MergeList_Sq</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"单链表\">单链表</h2>\n<h3 id=\"单链表的数据对象和数据关系的实现\">单链表的数据对象和数据关系的实现</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Lnode</span> &#123;</span>\t<span class=\"comment\">//链表结点</span></span><br><span class=\"line\">    ElemType data;\t    <span class=\"comment\">//结点数据域</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Lnode</span> *<span class=\"title\">next</span>;</span>\t<span class=\"comment\">//结点链域</span></span><br><span class=\"line\">&#125; ListNode, *LinkList;</span><br></pre></td></tr></table></figure>\n<h3 id=\"取第i个元素\">取第i个元素</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">GetElem_L</span><span class=\"params\">(LinkList L,<span class=\"type\">int</span> i, ElemType &amp;e)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//参数：链表L、位置i、取得的第i个元素e</span></span><br><span class=\"line\">    <span class=\"comment\">//算法：带头结点的单链表中取第i个元素</span></span><br><span class=\"line\">    p=L;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(j=<span class=\"number\">1</span>;j&lt;i&amp;&amp;p;++j)</span><br><span class=\"line\">        p=p-&gt;next;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!p)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ERROR;</span><br><span class=\"line\">    e=p-&gt;data;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;<span class=\"comment\">//GetElem_L</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"插入操作\">插入操作</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">ListInsert</span><span class=\"params\">(LinkList &amp;L,<span class=\"type\">int</span> i,ElemType e)</span>&#123;</span><br><span class=\"line\">    p=L;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(j=<span class=\"number\">0</span>;j&lt;i<span class=\"number\">-1</span>&amp;&amp;p;++j)</span><br><span class=\"line\">        p=p-&gt;next;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!p)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ERROR;</span><br><span class=\"line\">    s=(ElemType*)<span class=\"built_in\">malloc</span>()</span><br><span class=\"line\">&#125;<span class=\"comment\">//ListInsert</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"循环链表\">循环链表</h2>\n<h3 id=\"双向循环链表的数据对象和数据关系的实现\">双向循环链表的数据对象和数据关系的实现</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> ListData;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">dnode</span> &#123;</span></span><br><span class=\"line\">    ListData data;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">dnode</span> *<span class=\"title\">prior</span>, *<span class=\"title\">next</span>;</span></span><br><span class=\"line\">&#125;DblNode,*DblList;</span><br></pre></td></tr></table></figure>\n","categories":["Computer Science"],"tags":["Data Structure"]},{"title":"Logisim Getting Started","url":"/2021/10/24/Logisim-Getting-Started/","content":"<p>数字电路实验报告《Logisim 入门》：</p>\n<span id=\"more\"></span>\n<p>移动端点击链接下载查看；</p>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/computer03.pdf\">Logisim Getting Started</a></p>\n<p>PC端支持在线预览。</p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/computer03.pdf\" data-height=\"600px\"></div>\n","categories":["Computer Science"],"tags":["Digital Circuit"]},{"title":"Looking up","url":"/2018/05/25/Looking-up/","content":"<p>高中班刊征文之一——《仰望》：</p>\n<span id=\"more\"></span>\n<p>这里是一个仰望的地方。</p>\n<p>多少人走过那古朴的红柱石狮门口，停下过脚步，透过枝桠的掩映，抬头仰望着红底金字的匾。他们之中，有中小学的莘莘学子，或慕名而来，满怀憧憬与希望；或经常路过，坚守信念与目标。当然也有游客，他们所仰望的，外表多于内涵，而仅仅是楼宇的外表，就足够仰望许久了。碧瓦黄墙之间，承载着无数的梦。</p>\n<p>九十余年的风雨中，一代又一代三中人经营与守护这个地方，助其屹立至今。“三中人”，这个朴实却响亮的名字恰当不过。带上“人”字，就像有了灵气，将八方而来的过客集聚在了一起。</p>\n<p>园子里的人渐渐变更，但三中精神却不会消灭。就像忒修斯之船即便换下了最后一块零件，也应被称为忒修斯之船一样，精神的永恒，是真正永垂不朽的标志。</p>\n<p>来到三中之前，我曾仰望这里；来到三中之后，我发现可以仰望之处更多了。</p>\n<p>紧随录取喜悦之后的，便是更大的挑战。随着学习的深入，周围总有些同学开始被其他同学仰望了。能力较弱的同学看到能力较强的同学，就有了更确切的前进的目标；而那些能力较强的同学，便会看到更多曾经看不到的同水平的同学，也就把目标提升到与其争锋。在激烈的比拼中，每个人仰望别人与被别人仰望交替着，看到差距与后来居上轮回着，经过一系列调整、巩固、充实、提高，一步步地、不知不觉地踏上了更高的台阶。</p>\n<p>在三中，不仅是同学间的仰望，还可以站在三中高台之上，仰望着知名高校与未来。三中，让我们站得更高，见得更广；识得更深，走得更远。</p>\n<p>此时，我们班级还在幽深静谧的半地下室中存在。走到窗子近前，看外面只能抬头仰望，并且只有局限的视野。下半年，就要搬到一楼去，看到外面只需平视，但还有遮挡。明年到了二楼，视野会大为开阔，即使望向操场，也是俯视了。这是多么巧合，或是有意如此设计：我们一步一步地走，学识进了三级，而眼界扩展了千万倍。从仰望到平视，再到俯视，便是进步的过程。</p>\n<p>我站在教室窗口，阳光从窗户上方铺散下来；我走在傍晚的操场上，看到天上星辉稀疏而缥缈。天行健，君子以自强不息，无论是看到日光的照射，抑或是满天星辰的闪烁，都会使人鼓舞。自然但且运转不止，我们如何能止步不前？</p>\n<p>梦想，总是需要仰望；奋斗，却是近在咫尺。每次些许的努力，不都是一次助力吗？教室前方的“敦品励学，严谨求是”八个白底红字的校训在激励我们，匆匆不停的钟表在提醒我们，算下日子，距离高考还有七百四十二天。如今去看高考，不早也不迟。让我们为无悔的青春而战，为不灭的梦想启航。仰望星空，脚踏实地，定能拾级而上，终至高位，载誉而归。</p>\n<p>此时，我回想着曾经对三中的仰望，憧憬着渴求的未来，遂写下这篇《仰望》，助你我前行。</p>\n","categories":["Sociology"],"tags":["H3Z"]},{"title":"Magnetic Forces and Magnetic Fields","url":"/2022/01/19/Magnetic-Forces-and-Magnetic-Fields/","content":"<p>磁力与磁场笔记：</p>\n<span id=\"more\"></span>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/physics16.pdf\">移动端点击链接下载查看</a></p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/physics16.pdf\" data-height=\"600px\"></div>\n","categories":["Physics"],"tags":["Electromagnetism"]},{"title":"Magnetic Pendulum","url":"/2021/06/05/Magnetic-Pendulum/","content":"<p>大学物理基础实验 A 实验报告《磁力摆》：</p>\n<span id=\"more\"></span>\n<p>移动端点击链接下载查看；</p>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/physics07.pdf\">Magnetic Pendulum</a></p>\n<p>PC端支持在线预览。</p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/physics07.pdf\" data-height=\"600px\"></div>\n","categories":["Physics"],"tags":["Physical Experiment"]},{"title":"Magnetism in the Material and Magnetic Materials","url":"/2021/07/04/Magnetism-in-the-Material-and-Magnetic-Materials/","content":"<p>物质中的磁场与磁性材料笔记：</p>\n<span id=\"more\"></span>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/physics17.pdf\">移动端点击链接下载查看</a></p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/physics17.pdf\" data-height=\"600px\"></div>\n","categories":["Physics"],"tags":["Electromagnetism"]},{"title":"Map","url":"/2021/07/03/Map/","content":"<p>映射笔记：</p>\n<span id=\"more\"></span>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/math14.pdf\">移动端点击链接下载查看</a></p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/math14.pdf\" data-height=\"600px\"></div>\n","categories":["Mathematics"],"tags":["Algebra Structure"]},{"title":"Markov Process","url":"/2021/10/26/Markov-Process/","content":"<h1 id=\"markov-过程\">Markov 过程</h1>\n<p>Markov过程是研究离散事件动态系统状态空间的重要方法,它的原始模型Markov链 ，由俄国数学家A.A.Markov于1907年提出。</p>\n<span id=\"more\"></span>\n<h2 id=\"markov链的定义和例子\">Markov链的定义和例子</h2>\n<h3 id=\"markov链\">Markov链</h3>\n<p>如果对任何一列状态，<span class=\"math inline\">\\(i_0,i_1,\\cdots,i_{n-1},i,j\\)</span>，及对任何<span class=\"math inline\">\\(n\\geqslant 0\\)</span>，随机过程<span class=\"math inline\">\\({X_n,n\\geqslant0}\\)</span>满足Markov性质<span class=\"math display\">\\[P\\{X_{n+1}=j|X_0=i_0,\\cdots,X_{n-1}=i_{n-i},X_n=i_n\\}=P\\{X_{n+1}=j|X_n=i\\}\\]</span>，则称<span class=\"math inline\">\\(X_n\\)</span>为离散时间Markov链。</p>\n<h3 id=\"markov链的一步转移概率\">Markov链的一步转移概率</h3>\n<p>设<span class=\"math inline\">\\(X_n\\)</span>为一离散时间Makov链。给定<span class=\"math inline\">\\(X_n\\)</span>在状态<span class=\"math inline\">\\(i\\)</span>时，<span class=\"math inline\">\\(X_{n+1}\\)</span>处于状态<span class=\"math inline\">\\(j\\)</span>的条件概率<span class=\"math inline\">\\(P\\{X_{n+1}=j|X_n=i\\}\\)</span>称为Markov链的一步转移概率，并记为<span class=\"math inline\">\\(P_{ij}^{n.n+1}\\)</span>。当这一概率与<span class=\"math inline\">\\(n\\)</span>无关时称该Markov链有平稳转移概率，并记为<span class=\"math inline\">\\(P_{ij}\\)</span>。</p>\n<h3 id=\"markov链的n步转移概率矩阵\">Markov链的n步转移概率矩阵</h3>\n<p>Markov链的<span class=\"math inline\">\\(n\\)</span>步转移概率矩阵满足<span class=\"math inline\">\\(P_{ij}^{(n)}=\\sum\\limits_{k=0}\\limits^\\infty P_{ik}P_{kj}^{(n-1)}\\)</span>，我们约定<span class=\"math inline\">\\(P_{ii}^{(0)}=1\\)</span>，当<span class=\"math inline\">\\(j\\neq i\\)</span>时<span class=\"math inline\">\\(P_{ij}^{(0)}=0\\)</span>。</p>\n<h2 id=\"markov链的状态分布\">Markov链的状态分布</h2>\n<h3 id=\"可达与互达\">可达与互达</h3>\n<p>如果对某一<span class=\"math inline\">\\(n\\geqslant0\\)</span>，有<span class=\"math inline\">\\(P_{ij}^{(n)}&gt;0\\)</span>，则称状态<span class=\"math inline\">\\(j\\)</span>是从状态<span class=\"math inline\">\\(i\\)</span>可达的，记作<span class=\"math inline\">\\(i\\to j\\)</span>。它表示从状态<span class=\"math inline\">\\(i\\)</span>经过有限步的转移可以到达状态<span class=\"math inline\">\\(j\\)</span>。两个互相可达的状态<span class=\"math inline\">\\(i\\)</span>和<span class=\"math inline\">\\(j\\)</span>则称为互达的，记作<span class=\"math inline\">\\(i\\leftrightarrow j\\)</span>。</p>\n<h3 id=\"互达性\">互达性</h3>\n<p>互达性是等价关系。即 (i)<span class=\"math inline\">\\(i\\leftrightarrow j\\)</span>，自反性； (ii)若<span class=\"math inline\">\\(i\\leftrightarrow j\\)</span>，则<span class=\"math inline\">\\(j\\leftrightarrow i\\)</span>，对称性； (iii)若<span class=\"math inline\">\\(i\\leftrightarrow j\\)</span>，且<span class=\"math inline\">\\(j\\leftrightarrow k\\)</span>，传递性。</p>\n<h3 id=\"状态的周期\">状态的周期</h3>\n<p>设<span class=\"math inline\">\\(i\\)</span>为Markov链的一个状态，使<span class=\"math inline\">\\(P_{ii}^{(n)}&gt;0\\)</span>的所有正整数<span class=\"math inline\">\\(n(n\\geqslant 1)\\)</span>的最大公约数称作是状态<span class=\"math inline\">\\(i\\)</span>的周期，记作<span class=\"math inline\">\\(d(i)\\)</span>。如果对所有<span class=\"math inline\">\\(n\\geqslant 1\\)</span>，都有<span class=\"math inline\">\\(P_{ii}^{(n)}=0\\)</span>，则约定周期为<span class=\"math inline\">\\(\\infty\\)</span>；<span class=\"math inline\">\\(d(i)=1\\)</span>的状态则称为是非周期的。</p>\n<h3 id=\"状态周期的性质\">状态周期的性质</h3>\n<p>如果<span class=\"math inline\">\\(i\\leftrightarrow j\\)</span>，则<span class=\"math inline\">\\(d(i)=d(j)\\)</span>。</p>\n<h3 id=\"周期的基本性质\">周期的基本性质</h3>\n<p>如果状态<span class=\"math inline\">\\(i\\)</span>有周期<span class=\"math inline\">\\(d(i)\\)</span>，则存在正整数<span class=\"math inline\">\\(d(n)\\)</span>，使得对所有的<span class=\"math inline\">\\(n&gt;N\\)</span>恒有<span class=\"math inline\">\\(P_{ii}^{(nd(n))}&gt;0\\)</span>​。</p>\n<h3 id=\"周期的推广性质\">周期的推广性质</h3>\n<p>如果<span class=\"math inline\">\\(P_{ji}^{(m)}&gt;0\\)</span>，则存在正整数<span class=\"math inline\">\\(N\\)</span>使得对<span class=\"math inline\">\\(n&gt;N\\)</span>恒有$P_{ji}^{(m+nd(i))}&gt;0。</p>\n<h3 id=\"非周期不可约markov链性质\">非周期不可约Markov链性质</h3>\n<p>令<span class=\"math inline\">\\(\\textbf{P}\\)</span>为不可约、非周期、有限状态Markov链的转移概率阵，则必存在<span class=\"math inline\">\\(N\\)</span>，使得当<span class=\"math inline\">\\(n\\geqslant N\\)</span>时，<span class=\"math inline\">\\(n\\)</span>步转移概率阵<span class=\"math inline\">\\(\\textbf{P}^{(n)}\\)</span>的所有元素都非零。</p>\n<h3 id=\"常返与瞬过\">常返与瞬过</h3>\n<p>如果 <span class=\"math inline\">\\(f_{ii}=1\\)</span>，我们称状态<span class=\"math inline\">\\(i\\)</span>是常返的，一个非常返的状态称为瞬过的。其中<span class=\"math inline\">\\(f_{ij}=\\sum\\limits_{n=1}^\\infty f_{ij}^{(n)},f_{ij}^{(n)}\\)</span>为首达概率， <span class=\"math display\">\\[\nf_{ij}^{(0)}=0;f_{IJ}^{(n)}=P\\{X_n=j,X_k\\neq j,k=1,\\cdots,n-1|X_0=i \\}.\n\\]</span></p>\n<h3 id=\"常返与瞬过的充要条件\">常返与瞬过的充要条件</h3>\n<p>状态<span class=\"math inline\">\\(i\\)</span>常返的充分必要条件是<span class=\"math inline\">\\(\\sum\\limits_{n=1}^\\infty P_{ii}^{(n)}=\\infty\\)</span>。当然与此等价地有，状态<span class=\"math inline\">\\(i\\)</span>是瞬过的当且仅当<span class=\"math inline\">\\(\\sum\\limits_{n=1}^\\infty P_{ii}^{(n)}&lt;\\infty\\)</span>。</p>\n<h3 id=\"常返与可达的关系\">常返与可达的关系</h3>\n<p>如果<span class=\"math inline\">\\(i\\)</span>是常返的，且<span class=\"math inline\">\\(i\\leftrightarrow j\\)</span>，则<span class=\"math inline\">\\(j\\)</span>也是常返的。</p>\n<h3 id=\"零常返与正常返\">零常返与正常返</h3>\n<p>一个常返状态<span class=\"math inline\">\\(i\\)</span>当且仅当<span class=\"math inline\">\\(\\mu_i=\\infty\\)</span>时称为零常返的，而当且仅当<span class=\"math inline\">\\(\\mu_i&lt;\\infty\\)</span>时称为正常返的，其中<span class=\"math display\">\\[\\mu=ET_i=\\sum\\limits_{n=1}^\\infty nf_{ii}^{(n)}.\\]</span></p>\n<h2 id=\"markov链的极限定理与平稳分布\">Markov链的极限定理与平稳分布</h2>\n<h3 id=\"markov链的基本极限定理\">Markov链的基本极限定理</h3>\n<ol type=\"1\">\n<li>若状态<span class=\"math inline\">\\(i\\)</span>是瞬过的或是零常返的，则<span class=\"math display\">\\[\\lim\\limits_{n\\to\\infty} P_{ii}^{(n)}=0.\\]</span></li>\n<li>若状态<span class=\"math inline\">\\(i\\)</span>是周期为<span class=\"math inline\">\\(d\\)</span>的常返状态，则<span class=\"math display\">\\[\\lim\\limits_{n\\to\\infty}P_{ii}^{(nd)}=\\frac{d}{\\mu_i}.\\]</span></li>\n<li>当状态<span class=\"math inline\">\\(i\\)</span>是非周期的正常返状态，则<span class=\"math display\">\\[\\lim\\limits_{n\\to\\infty}P_{ii}^{(nd)}=\\frac{1}{\\mu_i}.\\]</span></li>\n</ol>\n<h3 id=\"markov链的平稳分布\">Markov链的平稳分布</h3>\n<p>Markov链有转移概率阵<span class=\"math inline\">\\(\\textbf{P}=(P_{ij})\\)</span>。一个概率分布<span class=\"math inline\">\\(\\{\\pi_i,i\\geqslant0\\}\\)</span>如果满足 <span class=\"math display\">\\[\n\\pi_j=\\sum\\limits_{i=0}^\\infty \\pi_iP_{ij},\n\\]</span> 则称为这一Markov链的平稳分布。</p>\n<h3 id=\"平稳分布的判定\">平稳分布的判定</h3>\n<p>若一个不可约Markov链中的所有状态都是遍历的，则对所有<span class=\"math inline\">\\(i,j\\)</span>，极限 <span class=\"math display\">\\[\n\\lim\\limits_{n\\to\\infty}P_{ij}^{(n)}=\\pi_j\n\\]</span> 存在且<span class=\"math inline\">\\(\\pi=\\{\\pi_j,j\\geqslant0\\}\\)</span>为平稳分布。也即 <span class=\"math display\">\\[\n\\sum\\limits_{j}\\pi_j=1,\\pi_j&gt;0,\\sum\\limits_i\\pi_iP_{ij}=\\pi_j.\n\\]</span> 反之，若一个不可约Markov链只存在一个平稳分布，即满足<span class=\"math inline\">\\((4)\\)</span>式，且这个Markov链的所有状态都是遍历的，则该平稳分布就是这一Markov链的极限分布，即对任何<span class=\"math inline\">\\(i\\)</span>有 <span class=\"math display\">\\[\n\\lim\\limits_{n\\to\\infty}P_{ij}^{(n)}=\\pi_j.\n\\]</span></p>\n<h2 id=\"连续时间markov链\">连续时间Markov链</h2>\n<h3 id=\"连续时间markov链-1\">连续时间Markov链</h3>\n<p>若对所有<span class=\"math inline\">\\(s,t\\geqslant0\\)</span>和任何非负整数<span class=\"math inline\">\\(i,j,x(u),0\\leqslant u&lt;s\\)</span>，随机过程<span class=\"math inline\">\\(X(t),t\\geqslant0\\)</span>满足 <span class=\"math display\">\\[\nP\\{X(t+s)=j|X(s)=i,X(u)=x(u),0\\leqslant u&lt;s\\}=P\\{X(t+s)=j|X(s)=i\\},\n\\]</span> 则称为连续时间Markov链。</p>\n<h3 id=\"连续时间markov链的联合分布\">连续时间Markov链的联合分布</h3>\n<p>连续时间Markov链的转移概率<span class=\"math inline\">\\(P_{ij}(i)\\)</span>和<span class=\"math inline\">\\(p_i\\)</span>完全确定了过程的所有联合分布。</p>\n<h3 id=\"连续时间markov链的转移概率函数\">连续时间Markov链的转移概率函数</h3>\n<p>函数<span class=\"math inline\">\\(P_{ij}(t)\\)</span>能够作为无瞬即转移的Markov过程的转移概率函数的充分必要条件是它满足： <span class=\"math display\">\\[\nP_{ij}(t)\\geqslant0,\\sum\\limits_jP_{ij}(t)=1,\n\\]</span></p>\n<p><span class=\"math display\">\\[\nP_{Ij}(t+\\tau)=\\sum_kP\\{X(t+\\tau)=j,X(\\tau)=k|X(0)=i\\}=\\sum\\limits_kP_{ik}(\\tau)P_{kj}(t),\n\\]</span></p>\n<p><span class=\"math display\">\\[\n\\lim\\limits_{\\tau\\downarrow0}P\\{X(t+\\tau)=i|X(t)=i\\}=\\lim\\limits_{\\tau\\downarrow0}P_{ii}(\\tau)=1.\n\\]</span></p>\n<h2 id=\"难题集萃\">难题集萃</h2>\n<h3 id=\"markov过程的转移概率矩阵\">Markov过程的转移概率矩阵</h3>\n<p>记<span class=\"math inline\">\\(Z_i,i=1,2,\\cdots\\)</span>为一串独立同分布的离散随机变量。<span class=\"math display\">\\[P\\{Z_1=k\\}=p_k\\geqslant0,k=0,1,2,\\cdots,\\sum\\limits_{k=0}^\\infty p_k=1.\\]</span>记<span class=\"math inline\">\\(X_n=Z_n,n=1,2\\cdots\\)</span>。试求过程<span class=\"math inline\">\\(X_n\\)</span>的转移概率矩阵。</p>\n<p>解： <span class=\"math display\">\\[\n\\textbf{P}=(p_{ij})_{\\infty\\times\\infty}.\n\\]</span></p>\n<p><span class=\"math display\">\\[\np_{ij}=\\sum\\limits_{i=0}^\\infty p_ip_j=p_j.\n\\]</span></p>\n<p>未完待续</p>\n","categories":["Mathematics"],"tags":["Stochastic Process"]},{"title":"Matrix and Determinant","url":"/2021/07/13/Matrix-and-Determinant/","content":"<p>矩阵与行列式笔记：</p>\n<span id=\"more\"></span>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/math11.pdf\">移动端点击链接下载查看</a></p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/math11.pdf\" data-height=\"600px\"></div>\n","tags":["Linear Algebra"]},{"title":"Maxwell-Boltzmann Distribution Law","url":"/2021/03/03/Maxwell-Boltzmann-Distribution-Law/","content":"<p>Maxwell-Boltzmann分布律笔记：</p>\n<span id=\"more\"></span>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/physics12.pdf\">移动端点击链接下载查看</a></p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/physics12.pdf\" data-height=\"600px\"></div>\n","categories":["Physics"],"tags":["Thermology"]},{"title":"Mechanics Crip","url":"/2020/12/10/Mechanics-Crip/","content":"<p>《力学（B）》期末考试合法小抄：</p>\n<span id=\"more\"></span>\n<figure>\n<img src=\"https://gsxgoldenlegendary.github.io/images/crip_01.jpg\" alt=\"page0\" /><figcaption>page0</figcaption>\n</figure>\n<figure>\n<img src=\"https://gsxgoldenlegendary.github.io/images/crip_02.jpg\" alt=\"page1\" /><figcaption>page1</figcaption>\n</figure>\n","categories":["Physics"],"tags":["Mechanics"]},{"title":"Memory","url":"/2021/11/29/Memory/","content":"<p>数字电路实验报告《存储器》：</p>\n<span id=\"more\"></span>\n<p>移动端点击链接下载查看；</p>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/computer0a.pdf\">Memory</a></p>\n<p>PC端支持在线预览。</p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/computer0a.pdf\" data-height=\"600px\"></div>\n","categories":["Computer Science"],"tags":["Digital Circuit"]},{"title":"Monocyclic CPU Design","url":"/2022/03/23/Monocyclic-CPU-Design/","content":"<p>计算机组成原理实验报告《单周期CPU设计》：</p>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/computer0f.pdf\">移动端点击链接下载查看</a></p>\n<span id=\"more\"></span>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/computer0f.pdf\" data-height=\"600px\"></div>\n","tags":["Computer Organization"]},{"title":"Multiplication in LC-3","url":"/2021/11/14/Multiplication-in-LC-3/","content":"<p>计算系统概论实验报告《温故知新》：</p>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/computer04.pdf\">移动端点击链接下载查看</a></p>\n<span id=\"more\"></span>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/computer08.pdf\" data-height=\"600px\"></div>\n","categories":["Computer Science"],"tags":["Computing System"]},{"title":"Network Attack Technology","url":"/2022/04/16/Network-Attack-Technology/","content":"<p>信息安全导论实验报告《网络攻击技术》：</p>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/computer11.pdf\">移动端点击链接下载查看</a></p>\n<span id=\"more\"></span>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/computer11.pdf\" data-height=\"600px\"></div>\n","categories":["Computer Science"],"tags":["Information Security"]},{"title":"On the Real Numbers","url":"/2020/10/06/On-the-Real-Numbers/","content":"<p>数学分析 (B1) 课程论文《论实数》：</p>\n<span id=\"more\"></span>\n<p>移动端点击链接下载查看；</p>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/math02.pdf\">On the Real Numbers</a></p>\n<p>PC端支持在线预览。</p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/math02.pdf\" data-height=\"600px\"></div>\n","categories":["Mathematics"],"tags":["Mathematical Analysis"]},{"title":"Only Struggle for Survival","url":"/2021/12/11/Only-Struggle-for-Survival/","content":"<p>日本文化导览课程论文《唯有努力生存》：</p>\n<span id=\"more\"></span>\n<p>移动端点击链接下载查看；</p>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/society01.pdf\">Only Struggle for Survival</a></p>\n<p>PC端支持在线预览。</p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/society01.pdf\" data-height=\"600px\"></div>\n","categories":["Sociology"],"tags":["Japan Culture"]},{"title":"Parameter Estimation","url":"/2021/11/25/Parameter-Estimation/","content":"<p>数理统计学使用概率论和数学的方法，研究通过试验或观察收集带有随机误差的数据，并在统计模型之下，对这种数据进行统计分析，以对所研究的问题做出统计推断。</p>\n<span id=\"more\"></span>\n<h1 id=\"数理统计学的基本概念\">数理统计学的基本概念</h1>\n<h2 id=\"总体\">总体</h2>\n<p>总体是指与所研究的问题有关的对象（个体）的全体构成的集合。</p>\n<h2 id=\"样本\">样本</h2>\n<p>样本是按一定的规定从总体抽出的一部分个体。所谓“按一定的规定”，是指总体中的每一个个体有同等的被抽出的机会。</p>\n<h2 id=\"统计量\">统计量</h2>\n<p>完全由样本所决定的量叫做统计量。</p>\n<h1 id=\"矩估计极大似然估计和贝叶斯估计\">矩估计，极大似然估计和贝叶斯估计</h1>\n<h2 id=\"矩估计\">矩估计</h2>\n<p>设总体分布为<span class=\"math inline\">\\(f(x;\\theta_1,\\cdots,\\theta_k)\\)</span>，则它的矩（以连续型的原点矩为例） <span class=\"math display\">\\[\na_m-\\int_{-\\infty}^\\infty x^mf(x;\\theta_1,\\cdots,\\theta_k)\\mathrm dx\n\\]</span> 依赖于<span class=\"math inline\">\\(\\theta_1,\\cdots,\\theta_k\\)</span>。另一方面，至少在样本大小<span class=\"math inline\">\\(n\\)</span>较大时，<span class=\"math inline\">\\(\\alpha_m\\)</span>又应接近于样本原点矩<span class=\"math inline\">\\(a_m\\)</span>。于是 <span class=\"math display\">\\[\n\\alpha_m=\\alpha_m(\\theta_1,\\cdots,\\theta_k)\\approx a_m=\\frac {\\sum_{i=1}^n X_i^m} n\n\\]</span> 取<span class=\"math inline\">\\(m=1,\\cdots,k\\)</span>，并将上面的近似式改成等式，就得到一个方程组： <span class=\"math display\">\\[\n\\alpha(\\theta_1,\\cdots,\\theta_k)=a_m(m=1,\\cdots,k).\n\\]</span> 解此方程组，得其根<span class=\"math inline\">\\(\\hat\\theta_i=\\hat\\theta_i(X_1,\\cdots,X_n)(i=1,\\cdots,k)\\)</span>，就以<span class=\"math inline\">\\(\\hat\\theta_i\\)</span>作为<span class=\"math inline\">\\(\\theta_i\\)</span>的估计（<span class=\"math inline\">\\(i=1,\\cdots,k\\)</span>）。如果要估计的是<span class=\"math inline\">\\(\\theta_1,\\cdots,\\theta_k\\)</span>的某函数<span class=\"math inline\">\\(g(\\theta_1,\\cdots,\\theta_k)\\)</span>，则用 <span class=\"math display\">\\[\n\\hat g=\\hat (X_1,\\cdots,X_n)=g(\\hat\\theta_1,\\cdots,\\hat\\theta_k)\n\\]</span> 去估计它。</p>\n<h2 id=\"极大似然估计\">极大似然估计</h2>\n<p>设总体分布为<span class=\"math inline\">\\(f(x;\\theta_1,\\cdots,\\theta_k)\\)</span>，<span class=\"math inline\">\\(X_1,\\cdots,X_n\\)</span>为自这个总体中抽出的样本，则样本<span class=\"math inline\">\\((X_1,\\cdots,X_n)\\)</span>的分布为 <span class=\"math display\">\\[\nf(x_1;\\theta_1,\\cdots,\\theta_k)f(x_2;\\theta_1,\\cdots,\\theta_k)\\cdots f(x_n;\\theta_1,\\cdots,\\theta_k),\n\\]</span> 记为<span class=\"math inline\">\\(L(x_1,\\cdots,x_n;\\theta_1,\\cdots,\\theta_k)\\)</span>。</p>\n<p>用满足条件 <span class=\"math display\">\\[\nL(X_1,\\cdots,X_n;\\theta_1^*,\\cdots,\\theta_k^*)=\\max_{\\theta_1,\\cdots,\\theta_k}L(X_1,\\cdots,X_n;\\theta_1,\\cdots,\\theta_k)\n\\]</span> 的<span class=\"math inline\">\\((\\theta_1^*,\\cdots,\\theta_k^*)\\)</span>去作为<span class=\"math inline\">\\((\\theta_1,\\cdots,\\theta_k)\\)</span>的估计值。如果要估计的是<span class=\"math inline\">\\(g(\\theta_1,\\cdots,\\theta_k)\\)</span>，则<span class=\"math inline\">\\(g(\\theta_1^*,\\cdots,\\theta_k^*)\\)</span>是它的极大似然估计。</p>\n<h1 id=\"点估计的优良性准则\">点估计的优良性准则</h1>\n<h2 id=\"无偏性\">无偏性</h2>\n<p>设某统计总体的分布包含未知参数<span class=\"math inline\">\\(\\theta_1,\\cdots,\\theta_k\\)</span>，<span class=\"math inline\">\\(X_1,\\cdots,X_n\\)</span>是从该总体中抽出的样本，<span class=\"math inline\">\\(\\hat g(X_1,\\cdots,X_n)\\)</span>是<span class=\"math inline\">\\(g(\\theta_1,\\cdots,\\theta_k)\\)</span>的一个估计量。如果对任何可能的<span class=\"math inline\">\\((\\theta_1,\\cdots,\\theta_k)\\)</span>，都有 <span class=\"math display\">\\[\nE_{\\theta_1,\\cdots,\\theta_k}(\\hat g(X_!,\\cdots,X_n))=g(\\theta_1,\\cdots,\\theta_k),\n\\]</span> 则称<span class=\"math inline\">\\(\\hat g\\)</span>是<span class=\"math inline\">\\(g(\\theta_1,\\cdots,\\theta_k)\\)</span>的一个无偏估计量。</p>\n<h1 id=\"区间估计\">区间估计</h1>\n<h2 id=\"置信系数与置信界\">置信系数与置信界</h2>\n<h4 id=\"置信系数\">置信系数</h4>\n<p>给定一个很小的数<span class=\"math inline\">\\(\\alpha&gt;0\\)</span>，如果对参数<span class=\"math inline\">\\(\\theta\\)</span>的任何值，概率 <span class=\"math display\">\\[\nP_\\theta(\\hat\\theta_1(X_1,\\cdots,X_n)\\leqslant\\theta\\leqslant\\hat\\theta_1(X_1,\\cdots,X_n))\n\\]</span> 都等于<span class=\"math inline\">\\(1-\\alpha\\)</span>，则称区间估计<span class=\"math inline\">\\([\\hat\\theta_1,\\hat\\theta_2]\\)</span>的置信系数为<span class=\"math inline\">\\(1-\\alpha\\)</span>。</p>\n<h3 id=\"置信上界\">置信上界</h3>\n<p>给定一个很小的数<span class=\"math inline\">\\(\\alpha&gt;0\\)</span>，如果对参数<span class=\"math inline\">\\(\\theta\\)</span>的任何值，概率 <span class=\"math display\">\\[\nP_\\theta(\\bar\\theta(X_1,\\cdots,X_n)\\geqslant\\theta)\n\\]</span> 都等于<span class=\"math inline\">\\(1-\\alpha\\)</span>，则称<span class=\"math inline\">\\(\\bar \\theta\\)</span>为<span class=\"math inline\">\\(\\theta\\)</span>的一个置信系数为<span class=\"math inline\">\\(1-\\alpha\\)</span>的置信上界。</p>\n<h3 id=\"置信下界\">置信下界</h3>\n<p>给定一个很小的数<span class=\"math inline\">\\(\\alpha&gt;0\\)</span>，如果对参数<span class=\"math inline\">\\(\\theta\\)</span>的任何值，概率 <span class=\"math display\">\\[\nP_\\theta(\\underline\\theta(X_1,\\cdots,X_n)\\leqslant\\theta)\n\\]</span> 都等于<span class=\"math inline\">\\(1-\\alpha\\)</span>，则称<span class=\"math inline\">\\(\\underline \\theta\\)</span>为<span class=\"math inline\">\\(\\theta\\)</span>的一个置信系数为<span class=\"math inline\">\\(1-\\alpha\\)</span>的置信下界。</p>\n<h2 id=\"正态总体样本均值样本方差的分布\">正态总体样本均值、样本方差的分布</h2>\n<h3 id=\"一般总体样本均值样本方差的性质\">一般总体样本均值、样本方差的性质</h3>\n<p><span class=\"math display\">\\[\nE\\bar X=\\mu,D(\\bar X)=\\frac{\\sigma^2} n,\n\\]</span></p>\n<p><span class=\"math display\">\\[\nE S^2=D(X)=\\sigma^2\n\\]</span></p>\n<h3 id=\"正态总体样本均值方差的分布\">正态总体样本均值、方差的分布</h3>\n<p>设<span class=\"math inline\">\\(X_1,\\cdots,X_n\\)</span>是来自正态总体<span class=\"math inline\">\\(N(\\mu,\\sigma^2)\\)</span>的样本，<span class=\"math inline\">\\(\\bar X\\)</span>与<span class=\"math inline\">\\(S\\)</span>分别是样本均值与样本标准差，则 <span class=\"math display\">\\[\n\\bar X\\sim N(\\mu,\\frac {\\sigma^2} n),或\\frac{\\bar X-\\mu}{\\frac \\sigma{\\sqrt n}}\\sim N(0,1).\n\\]</span></p>\n<p><span class=\"math display\">\\[\n\\frac {(n-1)S^2}{\\sigma^2}\\sim \\chi_{n-1}^2.\n\\]</span></p>\n<p><span class=\"math inline\">\\(\\bar X\\)</span>与<span class=\"math inline\">\\(S^2\\)</span>相互独立。 <span class=\"math display\">\\[\n\\frac{\\bar X-\\mu}{\\frac S {\\sqrt n}}\\sim t_{n-1}.\n\\]</span> 设<span class=\"math inline\">\\(X_1,\\cdots,X_n\\)</span>是来自正态总体<span class=\"math inline\">\\(N(\\mu_1,\\sigma_1^2)\\)</span>的样本，<span class=\"math inline\">\\(Y_1,\\cdots,Y_n\\)</span>是来自正态总体<span class=\"math inline\">\\(N(\\mu_2,\\sigma_2^2)\\)</span>的样本，且<span class=\"math inline\">\\(X\\)</span>与<span class=\"math inline\">\\(Y\\)</span>相互独立，<span class=\"math inline\">\\(\\bar X,\\bar Y\\)</span>分别表示样本均值，<span class=\"math inline\">\\(S_1^2,S_2^2\\)</span>分别表示样本方差，则： <span class=\"math display\">\\[\n\\frac{\\frac{S_1^2}{\\sigma_1^2}}{\\frac{S_2^2}{\\sigma_2^2}}\\sim F_{n_1-1.n_2-1}.\n\\]</span> 当<span class=\"math inline\">\\(\\sigma_1=\\sigma_2\\)</span>时， <span class=\"math display\">\\[\n\\frac{\\bar X-\\bar Y-(\\mu_1-\\mu_2)}{\\sqrt\\frac{(n_1-1)S_1^2+(n_2-1)S_2^2}{n_1+n_2-2}\\sqrt{\\frac 1 {n_1}+\\frac1 {n_2}}}\\sim t_{n_1+n_2-2}.\n\\]</span></p>\n<h2 id=\"枢轴变量法\">枢轴变量法</h2>\n<ol type=\"1\">\n<li><p>找一个与要估计的参数<span class=\"math inline\">\\(g(\\theta)\\)</span>有关的统计量<span class=\"math inline\">\\(T\\)</span>，一般是其一个良好的点估计。</p></li>\n<li><p>设法找出<span class=\"math inline\">\\(T\\)</span>和<span class=\"math inline\">\\(g(\\theta)\\)</span>的某一函数<span class=\"math inline\">\\(S(T,g(\\theta))\\)</span>，其分布<span class=\"math inline\">\\(F\\)</span>要与<span class=\"math inline\">\\(\\theta\\)</span>无关。</p></li>\n<li><p>对任何常数<span class=\"math inline\">\\(a&lt;b\\)</span>，不等式<span class=\"math inline\">\\(a\\leqslant S(T,g(\\theta))\\leqslant b\\)</span>要能改写为等价的形式<span class=\"math inline\">\\(A\\leqslant g(\\theta)\\leqslant B\\)</span>，<span class=\"math inline\">\\(A,B\\)</span>只与<span class=\"math inline\">\\(T,a,b\\)</span>有关，而与<span class=\"math inline\">\\(\\theta\\)</span>无关。</p></li>\n<li><p>取分布<span class=\"math inline\">\\(F\\)</span>的上<span class=\"math inline\">\\(\\frac \\alpha 2\\)</span>分位点<span class=\"math inline\">\\(w_{\\frac \\alpha 2}\\)</span>和上<span class=\"math inline\">\\(1-\\frac \\alpha 2\\)</span>分位点<span class=\"math inline\">\\(w_{1-\\frac \\alpha 2}\\)</span>，则有 <span class=\"math display\">\\[\nP(w_{\\frac \\alpha 2}\\leqslant S(T,g(\\theta))\\leqslant w_{1-\\frac\\alpha 2})=1-\\alpha.\n\\]</span> 将 <span class=\"math display\">\\[\nw_{\\frac \\alpha 2}\\leqslant S(T,g(\\theta))\\leqslant w_{1-\\frac\\alpha 2}\n\\]</span> 改写成<span class=\"math inline\">\\(A\\leqslant g(\\theta)\\leqslant B\\)</span>的形式，则<span class=\"math inline\">\\([A,B]\\)</span>就是<span class=\"math inline\">\\(g(\\theta )\\)</span>的一个置信系数为<span class=\"math inline\">\\(1-\\alpha\\)</span>的区间估计。</p></li>\n</ol>\n","categories":["Mathematics"],"tags":["Mathematical Statistics"]},{"title":"Pendulum Method for Measuring Acceleration of Gravity","url":"/2021/04/03/Pendulum-Method-for-Measuring-Acceleration-of-Gravity/","content":"<p>大学物理基础实验 A 实验报告《单摆法测重力加速度》：</p>\n<span id=\"more\"></span>\n<p>移动端点击链接下载查看；</p>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/physics01.pdf\">Pendulum Method for Measuring Acceleration of Gravity</a></p>\n<p>PC端支持在线预览。</p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/physics01.pdf\" data-height=\"600px\"></div>\n","categories":["Physics"],"tags":["Physical Experiment"]},{"title":"Pipeline CPU Design","url":"/2022/04/12/Pipeline-CPU-Design/","content":"<p>计算机组成原理实验报告《流水线CPU设计》：</p>\n<span id=\"more\"></span>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/computer10.pdf\">移动端点击链接下载查看</a></p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/computer10.pdf\" data-height=\"600px\"></div>\n","categories":["Computer Science"],"tags":["Computer Organization"]},{"title":"Poisson Process","url":"/2021/10/26/Poisson-Process/","content":"<h1 id=\"poisson-过程\">Poisson 过程</h1>\n<p>Poisson过程是一系列离散事件的模型，事件之间的平均时间是确定的，但事件发生的确切时间是随机的，一个事件的到来与之前的事件无关。</p>\n<span id=\"more\"></span>\n<h2 id=\"poisson过程\">Poisson过程</h2>\n<h3 id=\"poisson过程-1\">Poisson过程</h3>\n<p>一个整数值随机过程<span class=\"math inline\">\\(\\{N(t),t\\geqslant0\\}\\)</span>满足下述三个条件就称作强度为<span class=\"math inline\">\\(\\lambda&gt;0\\)</span>的Poisson过程：</p>\n<ol type=\"1\">\n<li><span class=\"math inline\">\\(N(0)=0\\)</span>；</li>\n<li><span class=\"math inline\">\\(N(t)\\)</span>是独立增量过程；</li>\n<li>对任何<span class=\"math inline\">\\(t&gt;0\\)</span>，<span class=\"math inline\">\\(s\\geqslant0\\)</span>增量<span class=\"math inline\">\\(N(s+t)-N(t)\\)</span>服从参数为<span class=\"math inline\">\\(\\lambda t\\)</span>的Poisson分布，即<span class=\"math display\">\\[P\\{N(s+t)-N(t)=k\\}=\\frac{(\\lambda t)^ke^{-\\lambda t}}{k!},k=0,1,\\cdots\\]</span>。</li>\n</ol>\n<p>满足假定1~4的随机过程<span class=\"math inline\">\\(N(t)\\)</span>为Poisson过程。</p>\n<ol type=\"1\">\n<li>在不相交区间中事件发生的数目相互独立，也即对任何整数<span class=\"math inline\">\\(n=1,2,\\cdots\\)</span>，设时刻<span class=\"math inline\">\\(t_0=0&lt;t_1&lt;t_2&lt;\\cdots&lt;t_n\\)</span>，增量<span class=\"math display\">\\[N(t_1)-N(t_0),N(t_2)-N(t_1),\\cdots,N(t_n)-N(t_{n-1})\\]</span>相互独立；</li>\n<li>对任何时刻<span class=\"math inline\">\\(t\\)</span>和正数<span class=\"math inline\">\\(h\\)</span>，随机变量（增量）<span class=\"math inline\">\\(N(t+h)-N(t)\\)</span>的分布只依赖于区间长度<span class=\"math inline\">\\(h\\)</span>而不依赖时刻<span class=\"math inline\">\\(t\\)</span>；</li>\n<li>存在正整数<span class=\"math inline\">\\(\\lambda\\)</span>当<span class=\"math inline\">\\(h\\downarrow 0\\)</span>时，使在长度为的小区间中事件至少发生一次的概率<span class=\"math display\">\\[P\\{N(t+h)-N(t)\\geqslant1\\}=\\lambda h+\\omicron(h)\\]</span>；</li>\n<li>在小区间<span class=\"math inline\">\\((t,t+h]\\)</span>发生两个或两个以上事件的概率为<span class=\"math inline\">\\(\\omicron(h)\\)</span>（可以忽略不计），即当<span class=\"math inline\">\\(h\\downarrow 0\\)</span>，<span class=\"math inline\">\\(P\\{N(t+h)-N(t)\\geqslant2\\}=\\omicron (h)\\)</span>。</li>\n</ol>\n<h2 id=\"与poisson过程相联系的若干分布\">与Poisson过程相联系的若干分布</h2>\n<h3 id=\"间隔时间和等待时间的分布\">间隔时间和等待时间的分布</h3>\n<p>第<span class=\"math inline\">\\(n-1\\)</span>次与第<span class=\"math inline\">\\(n\\)</span>次事件间的间隔时间记作<span class=\"math inline\">\\(X_n\\)</span>，而<span class=\"math inline\">\\(W_n=\\sum\\limits_{i-1}\\limits^nX_i\\)</span>为第<span class=\"math inline\">\\(n\\)</span>次事件的到达或等待时间，则<span class=\"math inline\">\\(X_n,n=1,2,\\cdots\\)</span>是均值为<span class=\"math inline\">\\(\\frac{1}{\\lambda}\\)</span>的独立同分布的指数随机变量，<span class=\"math inline\">\\(W_n\\)</span>服从参数为<span class=\"math inline\">\\(n\\)</span>，和<span class=\"math inline\">\\(\\lambda\\)</span>的<span class=\"math inline\">\\(\\Gamma\\)</span>分布。</p>\n<h3 id=\"等待时间的联合分布\">等待时间的联合分布</h3>\n<p>若<span class=\"math inline\">\\(N(t),t\\geqslant 0\\)</span>为Poisson过程，则给定<span class=\"math inline\">\\(N(t)=n\\)</span>下等待时间<span class=\"math inline\">\\(W_1,\\cdots,W_n\\)</span>的联合密度为<span class=\"math display\">\\[f_{W_1,\\cdots,W_n|N(t)=n}(\\omega_1.\\cdots,\\omega_n|n)=\\frac{n!}{t^n},0&lt;\\omega_1&lt;\\cdots&lt;\\omega_n\\leqslant t\\]</span>。</p>\n<h2 id=\"poisson过程的推广\">Poisson过程的推广</h2>\n<h3 id=\"更新过程\">更新过程</h3>\n<p>如果<span class=\"math inline\">\\(X_i,i=1,2,\\cdots\\)</span>为一非负的随机变量，它们独立同分布，分布函数为<span class=\"math inline\">\\(F(x)\\)</span>。记<span class=\"math inline\">\\(W_0=0,W_n=\\sum\\limits_{i=1}\\limits^nX_i\\)</span>，<span class=\"math inline\">\\(W_i\\)</span>表示第<span class=\"math inline\">\\(n\\)</span>次事件发生的时刻，则称<span class=\"math inline\">\\(N(t)=max\\{n:W_n\\leqslant t\\}\\)</span>为更新过程。</p>\n<h3 id=\"更新过程的分布\">更新过程的分布</h3>\n<p>更新过程<span class=\"math inline\">\\(N(t)\\)</span>的分布<span class=\"math inline\">\\(P\\{N(t)=n\\}=F^{(n)}(t)-F^{(n+1)}(t)\\)</span>，而更新函数<span class=\"math inline\">\\(m(t)=\\sum\\limits_{n=1}\\limits^\\infty F^{(n)}(t)\\)</span>，其中<span class=\"math inline\">\\(F^{(n)}(t)\\)</span>为<span class=\"math inline\">\\(F(t)\\)</span>的<span class=\"math inline\">\\(n\\)</span>重卷积，<span class=\"math inline\">\\(F(t)\\)</span>即为<span class=\"math inline\">\\(X_i\\)</span>的分布函数。</p>\n<h2 id=\"难题集萃\">难题集萃</h2>\n<h3 id=\"多个独立poisson过程\">多个独立Poisson过程</h3>\n<p>设某路口蓝车，白车和黄车的到达次数分别为强度<span class=\"math inline\">\\(\\lambda_1,\\lambda_2,\\lambda_3\\)</span>的Poisson过程，且相互独立。试求在相继到达的两辆蓝车之间，恰有<span class=\"math inline\">\\(k\\)</span>辆车到达的概率。</p>\n<p>易知蓝车首先到达的概率为<span class=\"math inline\">\\(p=\\frac{\\lambda_1}{\\lambda_1+\\lambda_2+\\lambda_3}\\)</span>，不是蓝车的概率为<span class=\"math inline\">\\(1=p\\)</span>，认为蓝车到达为“成功”，否则为“失败”，则两次蓝车之间到达车辆分布服从几何分布，即<span class=\"math display\">\\[P(N=k)=(1-p)^kp=\\frac{\\lambda_1(\\lambda_2+\\lambda_3)^k}{(\\lambda_1+\\lambda_2+\\lambda_3)^{k+1}}\\]</span>。</p>\n<h3 id=\"冲击模型\">冲击模型</h3>\n<p>记<span class=\"math inline\">\\(N(t)\\)</span>为某系统到某时刻<span class=\"math inline\">\\(t\\)</span>受到的冲击次数，它是参数为<span class=\"math inline\">\\(\\lambda\\)</span> 的Poisson过程。设第<span class=\"math inline\">\\(k\\)</span>次冲击对系统的损害大小<span class=\"math inline\">\\(Y_k\\)</span>服从参数为<span class=\"math inline\">\\(\\mu\\)</span>的指数分布，<span class=\"math inline\">\\(Y_k,𝑘=1,2,· · ·\\)</span>，独立同分布。记<span class=\"math inline\">\\(X(t)\\)</span>为系统所受到的总损害。当损害超过一定的极限<span class=\"math inline\">\\(\\alpha\\)</span>时系统不能运行，寿命终止，记<span class=\"math inline\">\\(T\\)</span>为系统寿命。试求该系统的平均寿命<span class=\"math inline\">\\(ET\\)</span>。</p>\n<p>解： <span class=\"math display\">\\[\nET=\\int_0^\\infty tf(t)\\mathrm{d}t=\\int_0^\\infty(\\int_0^tf(t)\\mathrm{d}s)\\mathrm{d}t\n\\]</span></p>\n<p><span class=\"math display\">\\[\n=\\int_0^\\infty(\\int_t^\\infty f(t)\\mathrm{d}t)\\mathrm{d}s=\\int_0^\\infty P(T&gt;t)\\mathrm{d}t\n\\]</span></p>\n<p><span class=\"math display\">\\[\nP(T&gt;t)=P(X(t)\\leqslant\\alpha)=P(\\sum\\limits_{i=1}\\limits^{N(t)}Y_i\\leqslant\\alpha)\n\\]</span></p>\n<p><span class=\"math display\">\\[\n=\\sum\\limits_{n=0}\\limits^\\infty P(\\sum\\limits_{i=1}\\limits^{N(t)}Y_i\\leqslant\\alpha|N(t)=n)P(N(t)=n)\n\\]</span></p>\n<p><span class=\"math display\">\\[\n\\therefore ET=\\int_0^\\infty 1\\cdot P(N(t)=0)+\\int_0^\\infty\\sum\\limits_{n=0}\\limits^\\infty P(\\sum\\limits_{i=1}\\limits^{n}Y_i\\leqslant\\alpha)P(N(t)=n)\n\\]</span></p>\n<p><span class=\"math display\">\\[\n=\\frac{1}{\\lambda}+\\int_0^\\infty\\sum\\limits_{n=1}\\limits^\\infty(\\int_0^\\alpha\\frac{\\mu(\\mu y)^{n-1}}{(n-1)!}e^{-\\mu y}\\mathrm{d}y)\\frac{(\\lambda t)^n e^{-\\lambda t}}{n!}\\mathrm{d}t\n\\]</span></p>\n<p><span class=\"math display\">\\[\n=\\frac{1}{\\lambda}+\\int_0^\\alpha\\sum\\limits_{n=1}\\limits^\\infty(\\int_0^\\infty \\frac{(\\lambda t)^n e^{-\\lambda t}}{n!}\\mathrm{d}t)\\frac{\\mu(\\mu y)^{n-1}}{(n-1)!}e^{-\\mu y}\\mathrm{d}y\n\\]</span></p>\n<p><span class=\"math display\">\\[\n=\\frac{1}{\\lambda}+\\int_0^\\alpha\\sum\\limits_{n=1}^\\limits\\infty\\frac{\\Gamma(n)}{\\lambda n!}\\frac{\\mu(\\mu y)^{n-1}}{(n-1)!}e^{-\\mu y}\\mathrm{d}y\n\\]</span></p>\n<p><span class=\"math display\">\\[\n=\\frac{1}{\\lambda}+\\frac{1}{\\lambda}\\int_0^\\alpha\\sum\\limits_{n=1}^\\limits\\infty\\frac{\\mu(\\mu y)^{n-1}}{(n-1)!}e^{-\\mu y}\\mathrm{d}y\n\\]</span></p>\n<p><span class=\"math display\">\\[\n=\\frac{1}{\\lambda}+\\frac{1}{\\lambda}\\int_0^\\alpha\\mu\\mathrm{d}y=\\frac{\\mu\\alpha+1}{\\lambda}\n\\]</span></p>\n<p>注意：<span class=\"math inline\">\\(n\\)</span>个同分布的参数为<span class=\"math inline\">\\(\\lambda\\)</span>的指数随机变量的和服从参数为<span class=\"math inline\">\\(n,\\lambda\\)</span>的<span class=\"math inline\">\\(\\Gamma\\)</span>分布。</p>\n<h3 id=\"非齐次poisson过程的事件时间间隔\">非齐次Poisson过程的事件时间间隔</h3>\n<p>令<span class=\"math inline\">\\(N(t)\\)</span>是强度为<span class=\"math inline\">\\(\\lambda(t)\\)</span>的非齐次Poisson过程，<span class=\"math inline\">\\(X_1,X_2,\\cdots\\)</span>为事件间的时间间隔，则<span class=\"math inline\">\\(X_i\\)</span>不独立。</p>\n<p>解： <span class=\"math display\">\\[\n𝑃 (𝑋_2 &gt; 𝑡|𝑋_1 = 𝑠) = 𝑃 (𝑁(𝑡 + 𝑠) − 𝑁(𝑠) = 0|𝑁(𝑠) = 1) =𝑃(𝑁(𝑡 + 𝑠) − 𝑁(𝑠) = 0) = 𝑒^{-\\int_s^{t+s}\\lambda(s)\\mathrm{d}s}\n\\]</span> 由于<span class=\"math inline\">\\(𝑃(X_2&gt;t|X_1=s)\\)</span>与<span class=\"math inline\">\\(s\\)</span>有关，故<span class=\"math inline\">\\(X_1\\)</span>与<span class=\"math inline\">\\(X_2\\)</span>不独立，故<span class=\"math inline\">\\(X_i\\)</span>不独立。</p>\n<p>注意：非齐次Poisson过程的<span class=\"math inline\">\\(N(t)\\)</span>也是独立增量过程。</p>\n<h3 id=\"更新过程的等待时间\">更新过程的等待时间</h3>\n<p>设<span class=\"math inline\">\\(N(t)\\)</span>为更新过程，则<span class=\"math inline\">\\(\\{N(t)\\leqslant k\\}\\nLeftrightarrow\\{W_k\\geqslant t\\}\\)</span>。</p>\n<p>解：第<span class=\"math inline\">\\(k\\)</span>次更新发生在<span class=\"math inline\">\\(t\\)</span>时刻之前，第<span class=\"math inline\">\\(k+1\\)</span>次更新发生在<span class=\"math inline\">\\(t\\)</span>时刻之后，此时<span class=\"math inline\">\\(W_k&lt;k\\)</span>，且<span class=\"math inline\">\\(N(t)\\leqslant k\\)</span>。</p>\n","categories":["Mathematics"],"tags":["Stochastic Process"]},{"title":"Portable Executable Virus","url":"/2022/05/19/Portable-Executable-Virus/","content":"<p>信息安全导论实验报告《PE病毒》：</p>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/20220518实验报告：PE病毒.pdf\">移动端点击链接下载查看</a></p>\n<span id=\"more\"></span>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/20220518实验报告：PE病毒.pdf\" data-height=\"600px\"></div>\n","categories":["Computer Science"],"tags":["Information Security"]},{"title":"Predicative Calculus","url":"/2022/04/14/Predicative-Calculus/","content":"<p>谓词演算对命题演算的改进在于：深入分析“原子命题”内部结构，同时引进量词运算。这是一种更细致、更复杂的数学模型，它能更深入、更广泛地表现实际的推理过程。</p>\n<span id=\"more\"></span>\n<h1 id=\"谓词演算的建立\">谓词演算的建立</h1>\n<h2 id=\"闭项\">闭项</h2>\n<p>只含个体常元的项叫做闭项。</p>\n<h2 id=\"原子公式集\">原子公式集</h2>\n<p>原子公式集是指 <span class=\"math display\">\\[\nY=\\mathop\\cup_{i,n}(\\{R_i^n\\}\\times \\underbrace {T\\times\\cdots\\times T}_{n个T})\n\\]</span> 即 <span class=\"math display\">\\[\nY=\\{(R_i^n,t_1,\\cdots,t_n|R_i^n\\in R,t_1,\\cdots,t_n\\in T\\}.\n\\]</span></p>\n<h2 id=\"变元的自由出现与约束出现\">变元的自由出现与约束出现</h2>\n<p>在一个公式里，个体变元<span class=\"math inline\">\\(x\\)</span>的出现如果不是在<span class=\"math inline\">\\(\\forall x\\)</span>中或在<span class=\"math inline\">\\(\\forall x\\)</span>的范围中，则叫做自由出现，否则叫做约束出现。</p>\n<h2 id=\"闭式\">闭式</h2>\n<p>公式若不含自由出现的变元，则叫做闭式。</p>\n<h2 id=\"项t对公式p中变元x是自由的\">项<span class=\"math inline\">\\(t\\)</span>对公式<span class=\"math inline\">\\(p\\)</span>中变元<span class=\"math inline\">\\(x\\)</span>是自由的</h2>\n<p>用项<span class=\"math inline\">\\(t\\)</span>去代换公式<span class=\"math inline\">\\(p\\)</span>中自由出现的个体变元<span class=\"math inline\">\\(x\\)</span>时，若在代换后的新公式里，<span class=\"math inline\">\\(t\\)</span>的变元都是自由的，则说<span class=\"math inline\">\\(t\\)</span>对<span class=\"math inline\">\\(p\\)</span>中<span class=\"math inline\">\\(x\\)</span>是可自由代换的，简称<span class=\"math inline\">\\(t\\)</span>对公式<span class=\"math inline\">\\(p\\)</span>中变元<span class=\"math inline\">\\(x\\)</span>是可代换的，或简称<span class=\"math inline\">\\(t\\)</span>对<span class=\"math inline\">\\(p\\)</span>中<span class=\"math inline\">\\(x\\)</span>是自由的。</p>\n<h2 id=\"谓词演算k\">谓词演算K</h2>\n<p>谓词演算<span class=\"math inline\">\\(K\\)</span>是指带有如下规定的“公理”和“证明”的公式集<span class=\"math inline\">\\(K(Y)\\)</span>。</p>\n<ol type=\"1\">\n<li><p>“公理”</p>\n<p>取<span class=\"math inline\">\\(K(Y)\\)</span>中间以下形状的公式作为“公理”。</p>\n<p>(K1)<span class=\"math inline\">\\(p\\to(q\\to p)\\)</span>；</p>\n<p>(K2)<span class=\"math inline\">\\((p\\to(q\\to r))\\to((p\\to q)\\to(p\\to r))\\)</span>；</p>\n<p>(K3)<span class=\"math inline\">\\((\\neg p\\to\\neg q)\\to(q\\to p)\\)</span>；</p>\n<p>(K4)<span class=\"math inline\">\\(\\forall xp(x)\\to p(t)\\)</span>，其中项<span class=\"math inline\">\\(t\\)</span>对怕<span class=\"math inline\">\\(p(x)\\)</span>中的<span class=\"math inline\">\\(x\\)</span>是自由的；</p>\n<p>(K5)<span class=\"math inline\">\\(\\forall x(p\\to q)\\to(p\\to\\forall xq)\\)</span>，其中<span class=\"math inline\">\\(x\\)</span>不在<span class=\"math inline\">\\(p\\)</span>中自由出现。</p>\n<p>以上给出的五种公理模式，其中<span class=\"math inline\">\\(p,q,r,p(x)\\)</span>都是任意的公式。</p></li>\n<li><p>“证明”</p>\n<p>设<span class=\"math inline\">\\(p\\)</span>是某个公式，<span class=\"math inline\">\\(\\Gamma\\)</span>是某个公式集。<span class=\"math inline\">\\(p\\)</span>从<span class=\"math inline\">\\(\\Gamma\\)</span>可证，记作<span class=\"math inline\">\\(\\Gamma \\vdash p\\)</span>，是指存在着公式的有限序列<span class=\"math inline\">\\(p_1,\\cdots,p_n\\)</span>，其中<span class=\"math inline\">\\(p_n=p\\)</span>，且对每个<span class=\"math inline\">\\(k=1,\\cdots,n\\)</span>，有</p>\n<p>(i)<span class=\"math inline\">\\(p_k\\in\\Gamma\\)</span>，或</p>\n<p>(ii)<span class=\"math inline\">\\(p_k\\)</span>为公理，或</p>\n<p>(iii)存在<span class=\"math inline\">\\(i,j&lt;k\\)</span>，使<span class=\"math inline\">\\(p_j=p_i\\to p_k\\)</span>（此时说由<span class=\"math inline\">\\(p_i,p_i\\to p_k\\)</span>使用MP得到<span class=\"math inline\">\\(p_k\\)</span>），或</p>\n<p>(iv)存在<span class=\"math inline\">\\(j&lt;k\\)</span>，使<span class=\"math inline\">\\(p_k=\\forall xp_j\\)</span>使用“Gen”这条推理规则得到<span class=\"math inline\">\\(p_k\\)</span>，<span class=\"math inline\">\\(x\\)</span>叫做Gen变元。</p></li>\n</ol>\n<h2 id=\"命题演算与谓词演算\">命题演算与谓词演算</h2>\n<p>设<span class=\"math inline\">\\(x_i,\\cdots,x_n\\)</span>是命题演算<span class=\"math inline\">\\(L\\)</span>的命题变元，<span class=\"math inline\">\\(p(x_1,\\cdots,x_n)\\in L(X_n)\\)</span>。我们有 <span class=\"math display\">\\[\n\\vdash_L p(x_1,\\cdots,x_n)\\Rightarrow\\vdash_K p(p_1,\\cdots,p_n),\n\\]</span> 其中<span class=\"math inline\">\\(p_1,\\cdots,p_n\\in K(Y)\\)</span>，<span class=\"math inline\">\\(p(p_1,\\cdots,p_n)\\)</span>是用<span class=\"math inline\">\\(p_1,\\cdots,p_n\\)</span>分别代换<span class=\"math inline\">\\(p(x_1,\\cdots,x_n)\\)</span>中的<span class=\"math inline\">\\(x_1,\\cdots,x_n\\)</span>所得结果。</p>\n<h2 id=\"命题演算型永真式\">命题演算型永真式</h2>\n<p>若<span class=\"math inline\">\\(p(x_1,\\cdots,x_n)\\in L(X_n)\\)</span>是命题演算<span class=\"math inline\">\\(L\\)</span>中的永真式，则对任意<span class=\"math inline\">\\(p_1,\\cdots,p_n\\in K(Y)\\)</span>，<span class=\"math inline\">\\(p(p_1,\\cdots,p_n)\\)</span>叫做<span class=\"math inline\">\\(K\\)</span>的命题演算型永真式，简称永真式。</p>\n<h2 id=\"演绎定理\">演绎定理</h2>\n<ol type=\"1\">\n<li>若<span class=\"math inline\">\\(\\Gamma \\vdash p\\to q\\)</span>，则<span class=\"math inline\">\\(\\Gamma\\cup\\{p\\}\\vdash q\\)</span>；</li>\n<li>若<span class=\"math inline\">\\(\\Gamma\\cup\\{p\\}\\vdash q\\)</span>，且证明中所用Gen变元不在<span class=\"math inline\">\\(p\\)</span>中自由出现，则不增加Gen变元就可得<span class=\"math inline\">\\(\\Gamma\\vdash p\\to q\\)</span>。</li>\n</ol>\n<h2 id=\"反证律\">反证律</h2>\n<p>若<span class=\"math inline\">\\(\\Gamma\\cup\\{\\neg p\\}\\vdash q\\)</span>及<span class=\"math inline\">\\(\\neg q\\)</span>，且所用Gen变元不在<span class=\"math inline\">\\(p\\)</span>中自由出现，则不增加新的Gen变元便可得<span class=\"math inline\">\\(\\Gamma\\vdash p\\)</span>，</p>\n<h2 id=\"归谬率\">归谬率</h2>\n<p>若<span class=\"math inline\">\\(\\Gamma\\cup\\{\\neg p\\}\\vdash q\\)</span>及<span class=\"math inline\">\\(\\neg q\\)</span>，且所用Gen变元不在<span class=\"math inline\">\\(p\\)</span>中自由出现，则不增加新的Gen变元便可得<span class=\"math inline\">\\(\\Gamma\\vdash\\neg p\\)</span>，</p>\n<h2 id=\"可证等价\">可证等价</h2>\n<p><span class=\"math inline\">\\(p\\)</span>与<span class=\"math inline\">\\(q\\)</span>可证等价（简称等价）指<span class=\"math inline\">\\(\\vdash p\\leftrightarrow q\\)</span>成立。</p>\n<h2 id=\"子公式的等价可替换性\">子公式的等价可替换性</h2>\n<p>设公式<span class=\"math inline\">\\(q\\)</span>是公式<span class=\"math inline\">\\(p\\)</span>的子公式：<span class=\"math inline\">\\(p=\\cdots q\\cdots\\)</span>。用公式<span class=\"math inline\">\\(q&#39;\\)</span>替换<span class=\"math inline\">\\(p\\)</span>中的<span class=\"math inline\">\\(q\\)</span>（一次替换）所得结果记为<span class=\"math inline\">\\(p&#39;=\\cdots q&#39;\\cdots\\)</span>。则有 <span class=\"math display\">\\[\n\\Gamma\\vdash q\\leftrightarrow q&#39;\\Rightarrow\\Gamma\\vdash p\\leftrightarrow p&#39;.\n\\]</span></p>\n<h2 id=\"对偶律\">对偶律</h2>\n<p>设公式<span class=\"math inline\">\\(p\\)</span>已表示成含原子公式以及<span class=\"math inline\">\\(\\neg,\\wedge,\\vee,\\forall,\\exists\\)</span>的公式。现把<span class=\"math inline\">\\(p\\)</span>中所有原子公式都改为它们的否定，<span class=\"math inline\">\\(\\vee\\)</span>与<span class=\"math inline\">\\(\\wedge\\)</span>互换，<span class=\"math inline\">\\(\\forall\\)</span>与<span class=\"math inline\">\\(\\exists\\)</span>互换，得公式<span class=\"math inline\">\\(p^*\\)</span>，则有 <span class=\"math display\">\\[\n\\vdash p^*\\leftrightarrow\\neg p.\n\\]</span></p>\n<h2 id=\"前束范式\">前束范式</h2>\n<p>前束范式，指形如 <span class=\"math display\">\\[\nQ_1x\\cdots Q_nyp\n\\]</span> 的公式，其中<span class=\"math inline\">\\(Q_1,\\cdots Q_n\\)</span>表示量词符号<span class=\"math inline\">\\(\\forall\\)</span>或<span class=\"math inline\">\\(\\exists\\)</span>，尾部<span class=\"math inline\">\\(p\\)</span>是不含量词的公式。</p>\n<h2 id=\"pi_n型和sigma_n型前束范式\"><span class=\"math inline\">\\(\\Pi_n\\)</span>型和<span class=\"math inline\">\\(\\Sigma_n\\)</span>型前束范式</h2>\n<p>设<span class=\"math inline\">\\(n&gt;0\\)</span>。若前束范式是由全称量词开始，从左至右改变<span class=\"math inline\">\\(n-1\\)</span>次词性，则叫做<span class=\"math inline\">\\(\\Pi_n\\)</span>型前束范式；若是由特称量词开始，从左至右改变<span class=\"math inline\">\\(n-1\\)</span>次词性，则叫做<span class=\"math inline\">\\(\\Sigma_n\\)</span>型前束范式。</p>\n<h1 id=\"谓词演算的语义\">谓词演算的语义</h1>\n<h2 id=\"k的解释域\"><span class=\"math inline\">\\(K\\)</span>的解释域</h2>\n<p>设非空集<span class=\"math inline\">\\(M\\)</span>具有以下性质：</p>\n<ol type=\"1\">\n<li><p>对<span class=\"math inline\">\\(K\\)</span>的每个个体常元<span class=\"math inline\">\\(c_i\\)</span>，都有<span class=\"math inline\">\\(M\\)</span>的元素<span class=\"math inline\">\\(\\overline{c_i}\\)</span>与之对应： <span class=\"math display\">\\[\nc_i\\mapsto\\overline{c_i},\\overline{c_i}\\in M;\n\\]</span></p></li>\n<li><p>对<span class=\"math inline\">\\(K\\)</span>的每个运算符<span class=\"math inline\">\\(f_i^n\\)</span>，都有<span class=\"math inline\">\\(M\\)</span>上的<span class=\"math inline\">\\(n\\)</span>元运算<span class=\"math inline\">\\(\\overline{f_i^n}\\)</span>与之对应： <span class=\"math display\">\\[\nf_i^n\\mapsto\\overline{f_i^n},\\overline{f_i^n}是 M上的n元运算;\n\\]</span></p></li>\n<li><p>对<span class=\"math inline\">\\(K\\)</span>的每个谓词<span class=\"math inline\">\\(R_i^n\\)</span>，都有<span class=\"math inline\">\\(M\\)</span>上的<span class=\"math inline\">\\(n\\)</span>元关系<span class=\"math inline\">\\(\\overline{R_i^n}\\)</span>与之对应： <span class=\"math display\">\\[\nR_i^n\\mapsto\\overline{R_i^n},\\overline{R_i^n}是 M上的n元关系.\n\\]</span></p></li>\n</ol>\n<p>带有上述三个映射的非空集<span class=\"math inline\">\\(M\\)</span>叫做<span class=\"math inline\">\\(K\\)</span>的解释域。</p>\n<h2 id=\"项解释的变元变通\">项解释的变元变通</h2>\n<p>设<span class=\"math inline\">\\(x\\)</span>是某个给定的个体变元，<span class=\"math inline\">\\(y\\)</span>是任意的个体变元，且<span class=\"math inline\">\\(\\varphi,\\varphi&#39;\\in\\Phi_M\\)</span>满足条件 <span class=\"math display\">\\[\ny\\neq x\\Rightarrow\\phi&#39;(y)=\\phi(y).\n\\]</span> 则把<span class=\"math inline\">\\(\\varphi&#39;\\)</span>叫做<span class=\"math inline\">\\(\\varphi\\)</span>的<span class=\"math inline\">\\(x\\)</span>变通。（此时<span class=\"math inline\">\\(\\varphi\\)</span>与<span class=\"math inline\">\\(\\varphi &#39;\\)</span>互为对方的<span class=\"math inline\">\\(x\\)</span>变通。</p>\n<h2 id=\"公式的赋值函数\">公式的赋值函数</h2>\n<p>设<span class=\"math inline\">\\(M\\)</span>是给定的解释域，<span class=\"math inline\">\\(p\\)</span>是<span class=\"math inline\">\\(K\\)</span>中任一公式。由公式<span class=\"math inline\">\\(p\\)</span>按下面方式归纳定义 的函数<span class=\"math inline\">\\(|p|:\\Phi_M\\to \\mathbb Z_2\\)</span>叫做公式<span class=\"math inline\">\\(p\\)</span>的赋值函数。</p>\n<p>对任一项解释<span class=\"math inline\">\\(\\varphi\\in\\Phi_M\\)</span>，</p>\n<ol type=\"1\">\n<li><p>当<span class=\"math inline\">\\(p\\)</span>为原子公式<span class=\"math inline\">\\(R_i^n(t_1,\\cdots,t_n)\\)</span>时，令 <span class=\"math display\">\\[\n|p|(\\varphi)=\n\\begin{cases}\n1,若(\\overline{t_1},\\cdots,\\overline{t_n})\\in\\overline{R_i^n},\\\\\n0,若(\\overline{t_1},\\cdots,\\overline{t_n})\\notin\\overline{R_i^n};\n\\end{cases}\n\\]</span></p></li>\n<li><p>当<span class=\"math inline\">\\(p\\)</span>是<span class=\"math inline\">\\(\\neg q\\)</span>或<span class=\"math inline\">\\(q\\to r\\)</span>时，令 <span class=\"math display\">\\[\n|\\neg q|(\\varphi)=\\neq|q|(\\varphi),\n\\]</span></p>\n<p><span class=\"math display\">\\[\n|q\\to r|(\\varphi)=|q|(\\varphi)\\to|r|(\\varphi);\n\\]</span></p></li>\n<li><p>当<span class=\"math inline\">\\(p\\)</span>是<span class=\"math inline\">\\(\\forall xq\\)</span>时，令 <span class=\"math display\">\\[\n\\forall xq|(\\varphi)=\n\\begin{cases}\n1,若\\varphi的任一x变通\\varphi&#39;都使|q|(\\varphi&#39;)=1,\\\\\n0,若存在\\varphi的x变通\\varphi&#39;使|q|(\\varphi&#39;)=0.\n\\end{cases}\n\\]</span></p></li>\n</ol>\n<h2 id=\"公式在解释域中恒真与恒假\">公式在解释域中恒真与恒假</h2>\n<p>公式<span class=\"math inline\">\\(p\\)</span>在解释域<span class=\"math inline\">\\(M\\)</span>中恒真，记作<span class=\"math inline\">\\(|p|_M=1\\)</span>，是指对任一<span class=\"math inline\">\\(\\varphi\\in\\Phi_M\\)</span>，<span class=\"math inline\">\\(|p|(\\varphi)=1\\)</span>；公式<span class=\"math inline\">\\(p\\)</span>在解释域<span class=\"math inline\">\\(M\\)</span>中恒假，记作<span class=\"math inline\">\\(|p|_M=1\\)</span>，是指对任一<span class=\"math inline\">\\(\\varphi\\in\\Phi_M\\)</span>，<span class=\"math inline\">\\(|p|(\\varphi)=0\\)</span>。</p>\n<h2 id=\"闭式的语义特征\">闭式的语义特征</h2>\n<p>对给定的解释域<span class=\"math inline\">\\(M\\)</span>，任一闭式<span class=\"math inline\">\\(p\\)</span>在<span class=\"math inline\">\\(M\\)</span>中恒真与恒假二者必居其一：或<span class=\"math inline\">\\(|p|_M=1\\)</span>，或<span class=\"math inline\">\\(|p|_M=0\\)</span>。</p>\n<h2 id=\"全称闭式\">全称闭式</h2>\n<p>设<span class=\"math inline\">\\(x_{i_1},\\cdots,x_{i_n}\\)</span>是在<span class=\"math inline\">\\(p\\)</span>中自由出现的全部变元，则 <span class=\"math display\">\\[\n\\forall x_{i_1}\\cdots\\forall x_{i_n}p\n\\]</span> 叫做<span class=\"math inline\">\\(p\\)</span>的全称闭式。</p>\n<h2 id=\"模型\">模型</h2>\n<p>设<span class=\"math inline\">\\(M\\)</span>是<span class=\"math inline\">\\(K\\)</span>的一个解释域。<span class=\"math inline\">\\(M\\)</span>是公式集<span class=\"math inline\">\\(\\Gamma\\)</span>的模型，指<span class=\"math inline\">\\(\\Gamma\\)</span>的每个公式都在<span class=\"math inline\">\\(M\\)</span>中恒真： <span class=\"math display\">\\[\nr\\in \\Gamma\\Rightarrow|r|_M=1.\n\\]</span> <span class=\"math inline\">\\(\\Gamma=\\emptyset\\)</span>时任何解释域都是<span class=\"math inline\">\\(\\Gamma\\)</span>的模型。</p>\n<h2 id=\"语义推论\">语义推论</h2>\n<p>公式<span class=\"math inline\">\\(p\\)</span>是公式集<span class=\"math inline\">\\(\\Gamma\\)</span>的语义推论，记作<span class=\"math inline\">\\(\\Gamma\\vDash p\\)</span>，指<span class=\"math inline\">\\(p\\)</span>在<span class=\"math inline\">\\(\\Gamma\\)</span>的所有模型中都恒真，即：在使<span class=\"math inline\">\\(\\Gamma\\)</span>的每个成员都恒真的解释中，<span class=\"math inline\">\\(p\\)</span>也恒真；或者说，<span class=\"math inline\">\\(\\Gamma\\)</span>的任何模型都是<span class=\"math inline\">\\(\\Gamma\\cup\\{p\\}\\)</span>的模型。</p>\n<h2 id=\"有效式与满足公式\">有效式与满足公式</h2>\n<p><span class=\"math inline\">\\(\\emptyset\\vDash p\\)</span>时，<span class=\"math inline\">\\(p\\)</span>叫做<span class=\"math inline\">\\(K\\)</span>的有效式，记为<span class=\"math inline\">\\(\\vDash p\\)</span>。</p>\n<p>若<span class=\"math inline\">\\(\\neg p\\)</span>不是有效式，则<span class=\"math inline\">\\(p\\)</span>叫做<span class=\"math inline\">\\(K\\)</span>的可满足公式。</p>\n<h1 id=\"k的可靠性\">K的可靠性</h1>\n<h2 id=\"k的可靠性-1\">K的可靠性</h2>\n<p><span class=\"math display\">\\[\n\\Gamma\\vdash p\\Rightarrow\\Gamma\\vDash p.\n\\]</span></p>\n<h1 id=\"k的完全性\">K的完全性</h1>\n<h2 id=\"无矛盾公式集的模型\">无矛盾公式集的模型</h2>\n<p>无矛盾公式集一定有可数集模型。</p>\n<h2 id=\"k的完全性-1\">K的完全性</h2>\n<p><span class=\"math display\">\\[\n\\Gamma\\vDash p\\Rightarrow\\Gamma\\vdash p.\n\\]</span></p>\n","categories":["Mathematics"],"tags":["Mathematical Logic"]},{"title":"Preliminary of Group Theory","url":"/2021/07/03/Preliminary-of-Group-Theory/","content":"<p>群论初步笔记：</p>\n<span id=\"more\"></span>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/math16.pdf\">移动端点击链接下载查看</a></p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/math16.pdf\" data-height=\"600px\"></div>\n","categories":["Mathematics"],"tags":["Algebra Structure"]},{"title":"Preliminary of Number Theory","url":"/2021/07/03/Preliminary-of-Number-Theory/","content":"<p>数论初步笔记：</p>\n<span id=\"more\"></span>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/math13.pdf\">移动端点击链接下载查看</a></p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/math13.pdf\" data-height=\"600px\"></div>\n","categories":["Mathematics"],"tags":["Algebra Structure"]},{"title":"Preliminary of Ordinary Differential Equation","url":"/2021/03/07/Preliminary-of-Ordinary-Differential-Equation/","content":"<p>常微分方程初步笔记：</p>\n<span id=\"more\"></span>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/math07.pdf\">移动端点击链接下载查看</a></p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/math07.pdf\" data-height=\"600px\"></div>\n","categories":["Mathematics"],"tags":["Mathematical Analysis"]},{"title":"Probability of Events","url":"/2021/10/30/Probability-of-Events/","content":"<h1 id=\"事件的概率\">事件的概率</h1>\n<p>概率亦称“或然率”、“机率”。它反映随机事件出现的可能性大小的量度。</p>\n<span id=\"more\"></span>\n<h2 id=\"概率是什么\">概率是什么</h2>\n<h3 id=\"古典概率\">古典概率</h3>\n<p>设一个试验有<span class=\"math inline\">\\(N\\)</span>个等可能的结果，而事件<span class=\"math inline\">\\(E\\)</span>恰包含其中的<span class=\"math inline\">\\(M\\)</span>个结果，则事件<span class=\"math inline\">\\(E\\)</span>的概率，记为<span class=\"math inline\">\\(P(E)\\)</span>，定义为<span class=\"math inline\">\\(P(E)=\\frac{M}{N}\\)</span>。</p>\n<h2 id=\"事件的运算条件概率与独立性\">事件的运算、条件概率与独立性</h2>\n<h3 id=\"概率的加法定理\">概率的加法定理</h3>\n<p>若干个互斥事件和的概率，等于各事件的概率之和，即 <span class=\"math display\">\\[\nP(A_1+A_2+\\cdots)=P(A_1)+P(A_2)+\\cdots.\n\\]</span></p>\n<h3 id=\"条件概率\">条件概率</h3>\n<p>设有两个事件<span class=\"math inline\">\\(A,B\\)</span>，而<span class=\"math inline\">\\(P(B)\\neq 0\\)</span>。则“在给定<span class=\"math inline\">\\(B\\)</span>发生的条件下<span class=\"math inline\">\\(A\\)</span>的条件概率”，记为<span class=\"math inline\">\\(P(A|B)\\)</span>，定义为 <span class=\"math display\">\\[\nP(A|B)=\\frac{P(AB)}{P{B}}.\n\\]</span></p>\n<h3 id=\"事件的独立性\">事件的独立性</h3>\n<p>设<span class=\"math inline\">\\(A_1,A_2,\\cdots\\)</span>为有限或无限个事件，如果从其中任意取出有限个<span class=\"math inline\">\\(A_{i_1},A_{i_2},\\cdots,A_{i_m}\\)</span>，都成立 <span class=\"math display\">\\[\nP(A_{i_1}A_{i_2}\\cdots A_{i_m})=P(A_{i_1})P(A_{i_2})\\cdots P(A_{i_m}),\n\\]</span> 则称事件<span class=\"math inline\">\\(A_1,A_2,\\cdots\\)</span>相互独立，或简称独立。</p>\n<h3 id=\"概率的乘法定理\">概率的乘法定理</h3>\n<p>若干个独立事件<span class=\"math inline\">\\(A_i,\\cdots,A_n\\)</span>之积的概率，等于各事件概率的乘积： <span class=\"math display\">\\[\nP(A_1\\cdots A_n)=P(A_1)\\cdots P(A_n).\n\\]</span></p>\n<h3 id=\"全概率公式\">全概率公式</h3>\n<p><span class=\"math inline\">\\(B_1,B_2,\\cdots\\)</span>为一个完备事件群，对任意事件<span class=\"math inline\">\\(A\\)</span>，有全概率公式： <span class=\"math display\">\\[\nP(A)=P(B_1)P(A|B_1)+P(B_2)P(A|B_2)\\cdots.\n\\]</span></p>\n<h3 id=\"贝叶斯公式\">贝叶斯公式</h3>\n<p><span class=\"math inline\">\\(B_1,B_2,\\cdots\\)</span>为一个完备事件群，对任意事件<span class=\"math inline\">\\(A\\)</span>，有贝叶斯公式： <span class=\"math display\">\\[\nP(B_i|A)=\\frac{P(AB_i)}{P(A)}=\\frac{P(B_i)P(A|B_i)}{\\sum\\limits_jP(B_j)P(A|B_j)}.\n\\]</span></p>\n","categories":["Mathematics"],"tags":["Probability Theory"]},{"title":"Propositional Calculus","url":"/2022/04/14/Propositional-Calculus/","content":"<p>命题演算是我们要建立的最简单、最基本的形式系统。这种系统是用来表现较为简单的逻辑推理的一种数学模型。命题演算的简单性表现在：当它把复合命题分解成最简单的命题后，就把简单命题视为最小的考察对象，不再继续对简单命题进行分解了。研究这种系统，除去为直接应用，还为研究谓词演算（用来表现更为复杂的推理的形式系统）打下基础。</p>\n<span id=\"more\"></span>\n<h1 id=\"命题演算的建立\">命题演算的建立</h1>\n<h2 id=\"命题演算l\">命题演算L</h2>\n<p>命题变元集<span class=\"math inline\">\\(X=\\{x_1,x_2,\\cdots\\}\\)</span>上的命题演算L是指带有下面规定的“公理”和“证明”的命题代数<span class=\"math inline\">\\(L(X)\\)</span>：</p>\n<p>（1）“公理”</p>\n<p>取<span class=\"math inline\">\\(L(X)\\)</span>的具有以下形状的公式作为“公理”：</p>\n<p>（L1，肯定后件律）<span class=\"math inline\">\\(p\\to(q\\to p),\\)</span></p>\n<p>（L2，蕴含词分配律）<span class=\"math inline\">\\((p\\to (q\\to r))\\to((p\\to q)\\to(p\\to r)),\\)</span></p>\n<p>（L3，换位律）<span class=\"math inline\">\\((\\neg p\\to\\neg q)\\to(q\\to p),\\)</span></p>\n<p>其中<span class=\"math inline\">\\(p,q,r\\in L(X)\\)</span>。</p>\n<p>（2）“证明”</p>\n<p>设<span class=\"math inline\">\\(\\Gamma\\subseteq L(X),p\\in L(X)\\)</span>。当我们说“公式<span class=\"math inline\">\\(p\\)</span>是从公式集<span class=\"math inline\">\\(\\Gamma\\)</span>可证的”，是指存在着<span class=\"math inline\">\\(L(X)\\)</span>的公式有限序列<span class=\"math inline\">\\(p_1,\\cdots,p_n\\)</span>，其中尾项<span class=\"math inline\">\\(p_n=p\\)</span>，且每个<span class=\"math inline\">\\(p_k(k=1,\\cdots,n)\\)</span>满足：</p>\n<p>（i）<span class=\"math inline\">\\(p_k\\in\\Gamma\\)</span>，或</p>\n<p>（ii）<span class=\"math inline\">\\(p_k\\)</span>是“公理”，或</p>\n<p>（iii）存在<span class=\"math inline\">\\(i,j&lt;k\\)</span>使<span class=\"math inline\">\\(p_j=p_i\\to p_k\\)</span>。</p>\n<p>具有上述性质的有限序列<span class=\"math inline\">\\(p_1,\\cdots,p_n\\)</span>，叫做<span class=\"math inline\">\\(p\\)</span>从<span class=\"math inline\">\\(\\Gamma\\)</span>的“证明”。</p>\n<h2 id=\"语法推论\">语法推论</h2>\n<p>建立了命题演算L之后，进一步规定：</p>\n<p>（1）如果公式<span class=\"math inline\">\\(p\\)</span>从公式集<span class=\"math inline\">\\(\\Gamma\\)</span>可证，那么我们写<span class=\"math inline\">\\(\\Gamma\\vdash p\\)</span>，必要时也可写成<span class=\"math inline\">\\(\\Gamma\\vdash_L p\\)</span>，这时<span class=\"math inline\">\\(\\Gamma\\)</span>中的公式叫做“假定”，<span class=\"math inline\">\\(p\\)</span>叫做假定集<span class=\"math inline\">\\(\\Gamma\\)</span>的语法推论。</p>\n<p>（2）若<span class=\"math inline\">\\(\\emptyset\\vdash p\\)</span>，则称<span class=\"math inline\">\\(p\\)</span>是<span class=\"math inline\">\\(L\\)</span>的“定理”，记为<span class=\"math inline\">\\(\\vdash p\\)</span>。<span class=\"math inline\">\\(p\\)</span>在<span class=\"math inline\">\\(L\\)</span>中从<span class=\"math inline\">\\(\\emptyset\\)</span>的证明<span class=\"math inline\">\\(p_1,\\cdots,p_n\\)</span>简称为<span class=\"math inline\">\\(p\\)</span>在<span class=\"math inline\">\\(L\\)</span>中的证明。</p>\n<p>（3）在一个证明中，当<span class=\"math inline\">\\(p_j=p_i\\to p_k(i,j&lt;k)\\)</span>时，就说<span class=\"math inline\">\\(p_k\\)</span>由<span class=\"math inline\">\\(p_i,p_p\\to p_k\\)</span>使用假言推理（Modus Ponens）这条推理规则而得，或简单地说“使用MP”而得。</p>\n<h2 id=\"无矛盾公式集\">无矛盾公式集</h2>\n<p>如果对任何公式<span class=\"math inline\">\\(q\\)</span>，<span class=\"math inline\">\\(\\Gamma\\vdash q\\)</span>和<span class=\"math inline\">\\(\\Gamma\\vdash\\neg q\\)</span>二者都不同时成立，就称公式集<span class=\"math inline\">\\(\\Gamma\\)</span>是无矛盾公式集，否则称公式集<span class=\"math inline\">\\(\\Gamma\\)</span>是有矛盾公式集。</p>\n<h2 id=\"演绎定理\">演绎定理</h2>\n<p><span class=\"math display\">\\[\n\\Gamma\\cup\\{p\\}\\vdash q\\Leftrightarrow\\Gamma\\vdash p\\to q.\n\\]</span></p>\n<h2 id=\"假设三段论hypothetical-syllogismhs\">假设三段论（Hypothetical Syllogism,HS）</h2>\n<p><span class=\"math display\">\\[\n\\{p\\to q,q\\to r\\}\\vdash p\\to r.\n\\]</span></p>\n<h2 id=\"反证律\">反证律</h2>\n<p><span class=\"math display\">\\[\n\\begin{array}\\\\\n\\Gamma\\cup\\{\\neg p\\}\\vdash q\\\\\n\\Gamma\\cup\\{\\neg p\\}\\vdash \\neg q\n\\end{array}\n\\left\\}\n\\Rightarrow\n\\Gamma\\vdash p.\n\\right.\n\\]</span></p>\n<h2 id=\"归谬律\">归谬律</h2>\n<p><span class=\"math display\">\\[\n\\begin{array}\\\\\n\\Gamma\\cup\\{p\\}\\vdash q\\\\\n\\Gamma\\cup\\{p\\}\\vdash \\neg q\n\\end{array}\n\\left\\}\n\\Rightarrow\n\\Gamma\\vdash\\neg p.\n\\right.\n\\]</span></p>\n<h1 id=\"命题演算的语义\">命题演算的语义</h1>\n<h2 id=\"真值函数\">真值函数</h2>\n<p>函数<span class=\"math inline\">\\(f:\\mathbb Z_2^n\\to\\mathbb Z_2\\)</span>叫做<span class=\"math inline\">\\(n\\)</span>元真值函数。</p>\n<h2 id=\"赋值\">赋值</h2>\n<p>具有“保运算性”的映射<span class=\"math inline\">\\(v:L(X)\\to Z_2\\)</span>叫做<span class=\"math inline\">\\(L(X)\\)</span>的赋值。映射具有保运算性，是指对任意<span class=\"math inline\">\\(p,q\\in L(X)\\)</span>，<span class=\"math inline\">\\(v\\)</span>满足条件：</p>\n<ol type=\"1\">\n<li><span class=\"math inline\">\\(v(\\neg p)=\\neg v(p),\\)</span></li>\n<li><span class=\"math inline\">\\(v(p\\to q)=v(p)\\to v(q).\\)</span></li>\n</ol>\n<p>对任意公式<span class=\"math inline\">\\(p\\in L(X)\\)</span>，<span class=\"math inline\">\\(v(p)\\)</span>叫做<span class=\"math inline\">\\(p\\)</span>的真值。同样，具有保运算性的映射<span class=\"math inline\">\\(v:L(X)\\to \\mathbb Z_2\\)</span>叫做<span class=\"math inline\">\\(L(X_n)\\)</span>的赋值。（$$）</p>\n<h2 id=\"真值指派\">真值指派</h2>\n<p>映射<span class=\"math inline\">\\(v_0\\to\\mathbb Z_2\\)</span>叫做命题变元的真值指派。若把其中<span class=\"math inline\">\\(X\\)</span>换成<span class=\"math inline\">\\(X_n=\\{x_1,\\cdots,x_n\\}\\)</span>，则<span class=\"math inline\">\\(v_0\\)</span>叫做<span class=\"math inline\">\\(x_1,\\cdots,x_n\\)</span>的真值指派。</p>\n<h2 id=\"唯一扩张\">唯一扩张</h2>\n<p>命题变元的任一真值指派，必可唯一地扩张成<span class=\"math inline\">\\(L(X)\\)</span>的赋值；<span class=\"math inline\">\\(x_1,\\cdots,x_n\\)</span>的任一真值指派，必可唯一地扩张成<span class=\"math inline\">\\(L(X_n)\\)</span>的赋值。</p>\n<h2 id=\"永真式\">永真式</h2>\n<p>若公式<span class=\"math inline\">\\(p\\)</span>的真值函数取常值<span class=\"math inline\">\\(1\\)</span>，则<span class=\"math inline\">\\(p\\)</span>叫做命题演算<span class=\"math inline\">\\(L\\)</span>的永真式或重言式（Tautology），记作<span class=\"math inline\">\\(\\vDash p\\)</span>。</p>\n<h2 id=\"代换定理\">代换定理</h2>\n<p><span class=\"math display\">\\[\n\\vDash p(x_1,\\cdots,x_n)\\Rightarrow\\vDash p(p_1,\\cdots,p_n).\n\\]</span></p>\n<p>其中<span class=\"math inline\">\\(p(p_1,\\cdots,p_n)\\in L(X_n)\\)</span>，而<span class=\"math inline\">\\(p_1,\\cdots,p_n\\in L(X)\\)</span>；<span class=\"math inline\">\\(p(p_1,\\cdots,p_n)\\)</span>是用<span class=\"math inline\">\\(p_1,\\cdots,p_n\\)</span>分别全部替换<span class=\"math inline\">\\(p(x_1,\\cdots,x_n)\\)</span>中的<span class=\"math inline\">\\(x_1,\\cdots,x_n\\)</span>所得结果。</p>\n<h2 id=\"永假式与可满足公式\">永假式与可满足公式</h2>\n<p>若<span class=\"math inline\">\\(\\neg p\\)</span>是永真式，则<span class=\"math inline\">\\(p\\)</span>叫做永假式。非永假式叫做可满足公式。</p>\n<h2 id=\"语义推论\">语义推论</h2>\n<p>设<span class=\"math inline\">\\(\\Gamma\\subseteq L(X),p\\in L(X)\\)</span>，如果<span class=\"math inline\">\\(\\Gamma\\)</span>中所有公式的任何公共成真指派都一定是公式<span class=\"math inline\">\\(p\\)</span>的成真指派，则说<span class=\"math inline\">\\(p\\)</span>是公式集<span class=\"math inline\">\\(\\Gamma\\)</span>的语义推论，记作<span class=\"math inline\">\\(\\Gamma\\vDash p\\)</span>。</p>\n<h2 id=\"语义演绎定理\">语义演绎定理</h2>\n<p><span class=\"math display\">\\[\n\\Gamma\\cup\\{p\\}\\vDash q\\Leftrightarrow\\Gamma\\vDash p\\to q.\n\\]</span></p>\n<h1 id=\"命题演算l的可靠性与完全性\">命题演算L的可靠性与完全性</h1>\n<h2 id=\"l的可靠性\">L的可靠性</h2>\n<p><span class=\"math display\">\\[\n\\Gamma\\vdash p\\Rightarrow\\Gamma\\vDash p.\n\\]</span></p>\n<h2 id=\"公式集的完备性\">公式集的完备性</h2>\n<p>设<span class=\"math inline\">\\(\\Gamma\\subseteq L(X)\\)</span>。<span class=\"math inline\">\\(\\Gamma\\)</span>是完备的，意指对任一公式<span class=\"math inline\">\\(p\\)</span>，<span class=\"math inline\">\\(\\Gamma\\vdash p\\)</span>与<span class=\"math inline\">\\(\\Gamma\\vdash\\neg p\\)</span>必有一个成立。</p>\n<h2 id=\"l的完全性\">L的完全性</h2>\n<p><span class=\"math display\">\\[\n\\Gamma\\vDash p\\Rightarrow\\Gamma\\vdash p.\n\\]</span></p>\n<h1 id=\"命题演算的其他课题\">命题演算的其他课题</h1>\n<h2 id=\"等值公式\">等值公式</h2>\n<p><span class=\"math inline\">\\(p\\)</span>与<span class=\"math inline\">\\(q\\)</span>等值，是指<span class=\"math inline\">\\(p\\leftrightarrow q\\)</span>为永真式。</p>\n<h2 id=\"子公式等值可替换性\">子公式等值可替换性</h2>\n<p>设<span class=\"math inline\">\\(q\\)</span>是<span class=\"math inline\">\\(p\\)</span>的子公式：<span class=\"math inline\">\\(p=\\cdots q\\cdots\\)</span>，用公式<span class=\"math inline\">\\(q&#39;\\)</span>替换<span class=\"math inline\">\\(p\\)</span>中的子公式<span class=\"math inline\">\\(q\\)</span>（一处替换）所得结果记为<span class=\"math inline\">\\(p&#39;=\\cdots q&#39;\\cdots\\)</span>，那么 <span class=\"math display\">\\[\n\\vDash q\\leftrightarrow q&#39;\\Rightarrow\\vDash p\\leftrightarrow p&#39;.\n\\]</span></p>\n<h2 id=\"公式的对偶\">公式的对偶</h2>\n<p>设公式<span class=\"math inline\">\\(p\\)</span>已被写成只含有命题变元和运算<span class=\"math inline\">\\(\\neg,\\vee,\\wedge\\)</span>的形式。把<span class=\"math inline\">\\(p\\)</span>中的命题变元全部改为各自的否定，把<span class=\"math inline\">\\(\\vee\\)</span>全改为<span class=\"math inline\">\\(\\wedge\\)</span>，把<span class=\"math inline\">\\(\\wedge\\)</span>全改为<span class=\"math inline\">\\(\\vee\\)</span>，这样得到的公式<span class=\"math inline\">\\(p^*\\)</span>叫做公式<span class=\"math inline\">\\(p\\)</span>的对偶。</p>\n<h2 id=\"对偶律\">对偶律</h2>\n<p><span class=\"math display\">\\[\n\\vDash p^*\\leftrightarrow\\neg p,\n\\]</span></p>\n<p>其中<span class=\"math inline\">\\(p^*\\)</span>是<span class=\"math inline\">\\(p\\)</span>的对偶。</p>\n<h2 id=\"基本析取式与基本合取式\">基本析取式与基本合取式</h2>\n<p>形为<span class=\"math inline\">\\(y_1\\vee y_2\\vee\\cdots\\vee y_n\\)</span>和形为<span class=\"math inline\">\\(y_1\\wedge y_2\\wedge\\cdots\\wedge y_n\\)</span>的公式分别叫做基本析取式和基本合取式。其中每一个<span class=\"math inline\">\\(y_i\\)</span>是命题变元或命题变元的否定。</p>\n<h2 id=\"析取范式与合取范式\">析取范式与合取范式</h2>\n<p>形为<span class=\"math inline\">\\(\\vee_{i=1}^m(\\wedge_{j=1}^{n_i}y_{ij})\\)</span>的公式叫做析取范式，形为<span class=\"math inline\">\\(\\wedge_{i=1}^m(\\vee_{j=1}^{n_i}y_{ij})\\)</span>的公式叫做合取范式，其中每一个<span class=\"math inline\">\\(y_{ij}\\)</span>是某个命题变元<span class=\"math inline\">\\(x_k\\)</span>或它的否定<span class=\"math inline\">\\(\\neg x_k\\)</span>。</p>\n<h2 id=\"主析取范式与主合取范式\">主析取范式与主合取范式</h2>\n<p><span class=\"math inline\">\\(L(X)\\)</span>中的主析取范式是这样的析取范式，在它的每个析取支中，每个命题变元<span class=\"math inline\">\\(x_1,\\cdots,x_n\\)</span>（带否定号或不带否定号）按下标由小到大的次序都出现且只出现一次。<span class=\"math inline\">\\(L(X)\\)</span>中的主合取范式是这样的合取范式，在它的每个合取支中，每个命题变元<span class=\"math inline\">\\(x_1,\\cdots,x_n\\)</span>（带否定号或不带否定号）按下标由小到大的次序都出现且只出现一次。</p>\n<h2 id=\"非永假式的范式\">非永假式的范式</h2>\n<p>每个非永假式必有与它等值的主析取范式。</p>\n<h2 id=\"非永真式的范式\">非永真式的范式</h2>\n<p>每个非永真式必有与它等值的主合取范式。</p>\n<h2 id=\"运算的完全组\">运算的完全组</h2>\n<p><span class=\"math inline\">\\(\\mathbb Z_2\\)</span>上的一些运算构成完全组，是指任一真值函数都可用该运算组中的运算表示出来。</p>\n<h2 id=\"与非运算和或非运算\">“与非”运算和“或非”运算</h2>\n<p>与非运算用算符“<span class=\"math inline\">\\(|\\)</span>”表示，或非运算用算符“<span class=\"math inline\">\\(\\downarrow\\)</span>”表示；它们的定义式分别是 <span class=\"math display\">\\[\nv_1|v_2=\\neg(v_1\\wedge v_2),\n\\]</span></p>\n<p><span class=\"math display\">\\[\nv_1\\downarrow v_2=\\neg(v_1\\vee v_2).\n\\]</span></p>\n","categories":["Mathematics"],"tags":["Mathematical Logic"]},{"title":"Random Variables and Probability Distributions","url":"/2021/10/28/Random-Variables-and-Probability-Distributions/","content":"<p>简单地说，随机变量是指随机事件的数量表现。</p>\n<span id=\"more\"></span>\n<h1 id=\"一维随机变量\">一维随机变量</h1>\n<h2 id=\"随机变量的概率函数\">随机变量的概率函数</h2>\n<p>设<span class=\"math inline\">\\(X\\)</span>为离散型随机变量，其全部可能值为<span class=\"math inline\">\\(\\{a_1,a_2,\\cdots\\}\\)</span>，则 <span class=\"math display\">\\[\np_i=P(X=a_i)    (i=1,2,\\cdots)\n\\]</span> 称为的概率函数。</p>\n<h2 id=\"随机变量的分布函数\">随机变量的分布函数</h2>\n<p>设<span class=\"math inline\">\\(X\\)</span>为一随机变量，则函数 <span class=\"math display\">\\[\nP(X\\leqslant x)=F(X)(-\\infty&lt;x&lt;\\infty)\n\\]</span> 称为的分布函数。</p>\n<h2 id=\"随机变量的概率密度函数\">随机变量的概率密度函数</h2>\n<p>设连续型随机变量<span class=\"math inline\">\\(X\\)</span>的概率分布函数<span class=\"math inline\">\\(F(x)\\)</span>，则<span class=\"math inline\">\\(F(X)\\)</span>的导数<span class=\"math inline\">\\(f(x)=F&#39;(x)\\)</span>称为<span class=\"math inline\">\\(X\\)</span>的概率密度函数。</p>\n<h2 id=\"poisson-分布\">Poisson 分布</h2>\n<p>若随机变量<span class=\"math inline\">\\(X\\)</span>的可能取值为<span class=\"math inline\">\\(0,1,2,\\cdots\\)</span>，且概率分布为 <span class=\"math display\">\\[\nP(X+i)=e^{-\\lambda}\\frac{\\lambda^i}{i!}\n\\]</span> ，则称服从Poisson分布，常记为。此处，是某一常数。</p>\n<h2 id=\"正态分布\">正态分布</h2>\n<p>如果一个随机变量<span class=\"math inline\">\\(X\\)</span>具有概率密度函数 <span class=\"math display\">\\[\nf(x)=\\frac{1}{\\sqrt{2\\pi}\\sigma}e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}}(-\\infty&lt;x&lt;\\infty)\n\\]</span> ，则称<span class=\"math inline\">\\(X\\)</span>为正态随机变量，并记为<span class=\"math inline\">\\(X\\sim N(\\mu,\\sigma^2)\\)</span>。</p>\n<h2 id=\"指数分布\">指数分布</h2>\n<p>若随机变量<span class=\"math inline\">\\(X\\)</span>有概率密度函数 <span class=\"math display\">\\[\nf(x)=\\lambda e^{-\\lambda x},当x&gt;0时;0,当x\\leqslant0时\n\\]</span> ，则称<span class=\"math inline\">\\(X\\)</span>服从指数分布。其中，<span class=\"math inline\">\\(\\lambda&gt;0\\)</span>为参数。</p>\n<h2 id=\"均匀分布\">均匀分布</h2>\n<p>设随机变量<span class=\"math inline\">\\(X\\)</span>有概率密度函数 <span class=\"math display\">\\[\nf(x)=\\frac{1}{b-a},当a\\leqslant x\\leqslant b时;0,其他\n\\]</span> ，则称<span class=\"math inline\">\\(X\\)</span>服从区间<span class=\"math inline\">\\([a,b]\\)</span>上的均匀分布，并常记为<span class=\"math inline\">\\(X\\sim R(a,b)\\)</span>。这里，<span class=\"math inline\">\\(a,b\\)</span>都是常数，<span class=\"math inline\">\\(-\\infty&lt;a&lt;b&lt;\\infty\\)</span>。</p>\n<h1 id=\"多维随机变量随机向量\">多维随机变量（随机向量）</h1>\n<h2 id=\"随机向量的概率函数\">随机向量的概率函数</h2>\n<p>以<span class=\"math inline\">\\(\\{a_{i1},a_{i2}.\\cdots\\}\\)</span>记<span class=\"math inline\">\\(X_i\\)</span>的全部可能值<span class=\"math inline\">\\((i=1,2,\\cdots)\\)</span>，则事件 <span class=\"math display\">\\[\n\\{X_1=a_{1j_1},X_2=a_{2j_2},\\cdots,X_n=a_{nj_n}\\}\n\\]</span> 的概率 <span class=\"math display\">\\[\np(j_1,j_2,\\cdots,j_n)=P(X_1=a_{1j_1},X_2=a_{2j_2},\\cdots,X_n=a_{nj_n})(j_1=1,2,\\cdots;j_2=1,2,\\cdots;\\cdots;j_n=1,2,\\cdots)\n\\]</span> 称为随机向量的概率函数或概率分布，概率函数应满足条件 <span class=\"math display\">\\[\np(j_1,j_2,\\cdots,j_n)\\geqslant0,\\sum\\limits_{j_n}\\cdots\\sum\\limits_{j_2}\\sum\\limits_{j_1}p(j_1,j_2,\\cdots,j_n)=1\n\\]</span></p>\n<h2 id=\"随机向量的概率密度函数\">随机向量的概率密度函数</h2>\n<p>若<span class=\"math inline\">\\(f(x_1,\\cdots,x_n)\\)</span>是定义在<span class=\"math inline\">\\(\\mathbb{R}^n\\)</span>的非负函数，使对<span class=\"math inline\">\\(\\mathbb{R}^n\\)</span>中的任何集合<span class=\"math inline\">\\(A\\)</span>，有 <span class=\"math display\">\\[\nP(X\\in A)=\\mathop{\\int\\cdots\\int}\\limits_Af(x_1,\\cdots,x_n)\\mathrm{d}x_1\\cdots \\mathrm{d}x_n\n\\]</span> ，则称<span class=\"math inline\">\\(f\\)</span>是<span class=\"math inline\">\\(X\\)</span>的（概率）密度函数。</p>\n<h2 id=\"随机向量的边缘分布\">随机向量的边缘分布</h2>\n<p>设<span class=\"math inline\">\\(X=(X_1,\\cdots,X_n)\\)</span>为一个<span class=\"math inline\">\\(n\\)</span>维的随机变量，<span class=\"math inline\">\\(X\\)</span>有一定的分布<span class=\"math inline\">\\(F\\)</span>，这是一个<span class=\"math inline\">\\(n\\)</span>维分布，因为<span class=\"math inline\">\\(X\\)</span>的每个分量<span class=\"math inline\">\\(X_i\\)</span>都是一维随机变量，故它们都有各自的分布<span class=\"math inline\">\\(F_i(i=1,\\cdots,n)\\)</span>这些都是一维分布，称为随机向量<span class=\"math inline\">\\(X\\)</span>或分布<span class=\"math inline\">\\(F\\)</span>的“边缘分布”。</p>\n<h2 id=\"多项分布\">多项分布</h2>\n<p>设<span class=\"math inline\">\\(A_1,A_2,\\cdots,A_n\\)</span>是某一试验之下的完备事件群。分别以<span class=\"math inline\">\\(p_1,p_2,\\cdots,p_n\\)</span>记事件<span class=\"math inline\">\\(A_1,A_2,\\cdots,A_n\\)</span>的概率，则<span class=\"math inline\">\\(p_i\\geqslant0,p_1+p_2+\\cdots+p_n=1\\)</span>。现将试验独立地重复<span class=\"math inline\">\\(N\\)</span>次，而以<span class=\"math inline\">\\(X_i\\)</span>记在这<span class=\"math inline\">\\(N\\)</span>次试验中事件<span class=\"math inline\">\\(A_i\\)</span>出现的次数<span class=\"math inline\">\\(X=(X_1,\\cdots,X_n)\\)</span>为一个<span class=\"math inline\">\\(n\\)</span>维随机向量。<span class=\"math inline\">\\(X\\)</span>的概率分布就叫多项分布，有时记为<span class=\"math inline\">\\(M(N;p_1,\\cdots,p_n)\\)</span>。 <span class=\"math display\">\\[\nP(X_1=k_1,X_2=k_2,\\cdots,X_n=k_n)=\\frac{N!}{k_1!k_2!\\cdots k_n!}p_1^{k_1}p_2^{k_2}\\cdots p_n^{k_n}(k_i为非负整数,k_1+k_2+\\cdots+k_n=N)\n\\]</span></p>\n<h2 id=\"二维正态分布\">二维正态分布</h2>\n<p>其概率密度函数有形式 <span class=\"math display\">\\[\nf(x_1,x_2)=\\frac{1}{2\\pi\\sigma_1\\sigma_2\\sqrt{1-\\rho^2}}e^{-\\frac{1}{2(1-\\rho^2)}(\\frac{(x_1-a)^2}{\\sigma_1^2}-\\frac{2\\rho(x_1-a)(x_2-b)}{\\sigma_1\\sigma_2}+\\frac{(x_2-b)^2}{\\sigma_2^2})}\n\\]</span></p>\n<h1 id=\"条件概率分布与随机变量的独立性\">条件概率分布与随机变量的独立性</h1>\n<h2 id=\"离散型随机变量的条件概率分布\">离散型随机变量的条件概率分布</h2>\n<p>设<span class=\"math inline\">\\((X_1,X_2)\\)</span>为一个二维离散型随机向量，<span class=\"math inline\">\\(X_1\\)</span>的全部可能值为<span class=\"math inline\">\\(a_1,a_2,\\cdots\\)</span>；的全部可能值为<span class=\"math inline\">\\(b_1,b_2,\\cdots\\)</span>；而<span class=\"math inline\">\\((X_1,X_2)\\)</span>的联合概率分布为 <span class=\"math display\">\\[\np_{ij}=P(X_1=a_i,X_2=b_j)(i,j=1,2,\\cdots).\n\\]</span> 现在考虑<span class=\"math inline\">\\(X_1\\)</span>在给定的条件<span class=\"math inline\">\\(X_2=b\\)</span>下的条件分布，那无非是要找条件概率<span class=\"math inline\">\\(P(X_1=a|X_2=b_j)\\)</span>。依条件概率的定义，有 <span class=\"math display\">\\[\nP(X_1=a|X_2=b_j)=\\frac{P(X_1=a_i,X_2=b_j)}{P(X_2=b_j)}=\\frac{p_{ij}}{\\sum\\limits_kp_{kj}}.\n\\]</span></p>\n<h2 id=\"连续型随机变量的条件概率分布\">连续型随机变量的条件概率分布</h2>\n<p>设二维随机变量<span class=\"math inline\">\\(X=(X_1,X_2)\\)</span>在概率密度函数<span class=\"math inline\">\\(f(x_1,x_2)\\)</span>，我们先来考虑在限定<span class=\"math inline\">\\(a\\leqslant x_2\\leqslant b\\)</span>的条件下<span class=\"math inline\">\\(X_1\\)</span>的条件分布，有 <span class=\"math display\">\\[\nP(X_1\\leqslant x_1|a\\leqslant x_2\\leqslant b)=\\frac{P(X_1\\leqslant x_1,a\\leqslant x_2\\leqslant b)}{P(a\\leqslant x_2\\leqslant b)}\n\\]</span></p>\n<p><span class=\"math display\">\\[\n=\\frac{\\int_{-\\infty}^{x_1}\\mathrm{d}t_1\\int_a^bf(t_1,t_2)\\mathrm{d}t_2}{\\int_a^bf_2(t_2)\\mathrm{d}t_2}\n\\]</span></p>\n<p>对<span class=\"math inline\">\\(x_1\\)</span>求导数，得到条件密度函数为 <span class=\"math display\">\\[\nf_1(x_1|a\\leqslant x_2\\leqslant b)=\\frac{\\int_a^bf(x_1,t_2)\\mathrm{d}t_2}{\\int_a^bf_2(t_2)\\mathrm{d}t_2}\n\\]</span></p>\n<h2 id=\"离散型随机变量的独立性\">离散型随机变量的独立性</h2>\n<p>设<span class=\"math inline\">\\(X_1,\\cdots,X_n\\)</span>都是离散型随机变量，若对任何常数<span class=\"math inline\">\\(a_1,\\cdots,a_n\\)</span>，都有 <span class=\"math display\">\\[\nP(X_1=a_1,\\cdots,X_n=a_n)=P(X_1=a_1)\\cdots P(X_n=a_n),\n\\]</span> 则称<span class=\"math inline\">\\(X_1,\\cdots,X_n\\)</span>相互独立。</p>\n<h2 id=\"连续型随机变量的独立性\">连续型随机变量的独立性</h2>\n<p>设<span class=\"math inline\">\\(n\\)</span>维随机变量<span class=\"math inline\">\\((X_1,\\cdots ,X_n)\\)</span>的联合密度函数为<span class=\"math inline\">\\(f(x_1,\\cdots,x_n)\\)</span>，而<span class=\"math inline\">\\(X_i\\)</span>的边缘密度函数为<span class=\"math inline\">\\(f_i(x_i)(i=1,\\cdots,n)\\)</span>。如果 <span class=\"math display\">\\[\nf(x_1,\\cdots,x_n)=f(x_1)\\cdots f(x_n),\n\\]</span> 则称随机变量<span class=\"math inline\">\\(X_1,\\cdots,X_n\\)</span>相互独立，或简称独立。</p>\n<h2 id=\"事件的独立性\">事件的独立性</h2>\n<p>如果连续变量<span class=\"math inline\">\\(X_1,\\cdots ,X_n\\)</span>独立，则对任何<span class=\"math inline\">\\(a_i&lt;b_i(i=1,\\cdots,n)\\)</span>，由<span class=\"math inline\">\\(A_i=\\{a_i\\leqslant X_i\\leqslant b_i\\}(i=1,\\cdots n)\\)</span>定义的<span class=\"math inline\">\\(n\\)</span>个事件<span class=\"math inline\">\\(A_1,\\cdots,A_n\\)</span>也独立。反之，若对任何<span class=\"math inline\">\\(a_i&lt;b_i(i=1,\\cdots,n)\\)</span>，事件<span class=\"math inline\">\\(A_1,\\cdots,A_n\\)</span>独立，则变量<span class=\"math inline\">\\(X_1,\\cdots,X_n\\)</span>也独立。</p>\n<h2 id=\"随机向量分量的独立性\">随机向量分量的独立性</h2>\n<p>若连续型随机向量<span class=\"math inline\">\\((X_1,\\cdots,X_n)\\)</span>的概率密度函数可表为<span class=\"math inline\">\\(n\\)</span>个函数<span class=\"math inline\">\\(g_1(x),\\cdots,g_n(x)\\)</span>之积，其中<span class=\"math inline\">\\(g_i(x)\\)</span>只依赖于<span class=\"math inline\">\\(x_i\\)</span>，即 <span class=\"math display\">\\[\nf(x_1,\\cdots,x_n)=g_1(x_1)\\cdots g_n(x_n)\n\\]</span> 则<span class=\"math inline\">\\(X_1,\\cdots ,X_n\\)</span>相互独立，且<span class=\"math inline\">\\(X_i\\)</span>的边缘密度函数<span class=\"math inline\">\\(f_i(x_i)\\)</span>与<span class=\"math inline\">\\(g_i(x_i)\\)</span>只相差一个常数因子。</p>\n<h2 id=\"随机变量函数的独立性\">随机变量函数的独立性</h2>\n<p>若<span class=\"math inline\">\\(X_1,\\cdots,X_n\\)</span>相互独立，而 <span class=\"math display\">\\[\nY_1=g_1(X_1,\\cdots,X_m),Y_2=g_2(X_{m+1},\\cdots,X_n),\n\\]</span> 则<span class=\"math inline\">\\(Y_i\\)</span>和<span class=\"math inline\">\\(Y_2\\)</span>独立。</p>\n<h1 id=\"随机变量的函数的概率分布\">随机变量的函数的概率分布</h1>\n<h2 id=\"连续型随机变量的函数的概率分布\">连续型随机变量的函数的概率分布</h2>\n<p>设<span class=\"math inline\">\\(X\\)</span>有密度函数<span class=\"math inline\">\\(f(x)\\)</span>，设<span class=\"math inline\">\\(Y=g(x)\\)</span>，<span class=\"math inline\">\\(g\\)</span>严格单调，则<span class=\"math inline\">\\(Y\\)</span>的分布函数 <span class=\"math display\">\\[\nP(Y\\leqslant y)=P(g(X)\\leqslant Y)=P(X\\leqslant g^{-1}(y))=\\int_{-\\infty}^{h(y)}f(t)\\mathrm{d}t,\n\\]</span> 或 <span class=\"math display\">\\[\nP(Y\\leqslant y)=P(g(X)\\leqslant Y)=P(X\\geqslant g^{-1}(y))=\\int^\\infty_{h(y)}f(t)\\mathrm{d}t,\n\\]</span> 对<span class=\"math inline\">\\(y\\)</span>求导数，得<span class=\"math inline\">\\(Y\\)</span>的密度函数 <span class=\"math display\">\\[\nl(y)=f(g^{-1}(y))(g^{-1}(x))&#39;,\n\\]</span> 或 <span class=\"math display\">\\[\nl(y)=-f(g^{-1}(y))(g^{-1}(x))&#39;,\n\\]</span> 总有 <span class=\"math display\">\\[\nl(y)=f(g^{-1}(y))|(g^{-1}(x))&#39;|.\n\\]</span></p>\n<h2 id=\"连续型随机向量的函数的概率分布\">连续型随机向量的函数的概率分布</h2>\n<p>设<span class=\"math inline\">\\((X_1,X_2)\\)</span>的密度函数为<span class=\"math inline\">\\(f(x_1,x_2)\\)</span>， <span class=\"math display\">\\[\nY_1=g_1(X_1,X_2),Y_2=g_2(X_1,X_2)\n\\]</span> 都是<span class=\"math inline\">\\((X_1,X_2)\\)</span>的函数。假设<span class=\"math inline\">\\(g_1,g_2\\)</span>是一一对应变换，因而有逆变换<span class=\"math inline\">\\(h_1,h_2\\)</span>，再假定<span class=\"math inline\">\\(g_1,g_2,h_1,h_2\\)</span>都有一阶偏导数，则变换的Jacobi行列式为 <span class=\"math display\">\\[\nJ(y1,y2)=\\frac{\\partial h_1}{\\partial y_1}\\frac{\\partial h_2}{\\partial y_2}-\\frac{\\partial h_1}{\\partial y_2}\\frac{\\partial h_2}{\\partial y_1}\n\\]</span> 则<span class=\"math inline\">\\((Y_1,Y_2)\\)</span>的密度函数为 <span class=\"math display\">\\[\nl(y_1,y_2)=f(h_1(y_1,y_2),h_2(y_1,y_2))|J(y_1,y_2)|.\n\\]</span></p>\n<h2 id=\"随机变量和的密度函数\">随机变量和的密度函数</h2>\n<p>设<span class=\"math inline\">\\((X_1,X_2)\\)</span>的联合密度函数为<span class=\"math inline\">\\(f(x_1,x_2)\\)</span>，则<span class=\"math inline\">\\(Y=X_1+X_2\\)</span>的密度函数为 <span class=\"math display\">\\[\nl(y)=\\int_{-\\infty}^\\infty f_1(x)f_2(y-x)\\mathrm{d}x.\n\\]</span></p>\n<h2 id=\"随机变量商的密度函数\">随机变量商的密度函数</h2>\n<p>设<span class=\"math inline\">\\((X_1,X_2)\\)</span>的联合密度函数为<span class=\"math inline\">\\(f(x_1,x_2)\\)</span>，<span class=\"math inline\">\\(X_1\\)</span>只取正值，则<span class=\"math inline\">\\(Y=\\frac{X_2}{X_1}\\)</span>的密度函数为 <span class=\"math display\">\\[\nl(y)=\\int_0^\\infty x_1f(x_1,yx_1)\\mathrm{d}x_1.\n\\]</span></p>\n<h1 id=\"统计三大分布\">统计三大分布</h1>\n<h2 id=\"卡方分布\">卡方分布</h2>\n<h3 id=\"定义\">定义</h3>\n<p>若 <span class=\"math display\">\\[\nX_1,\\cdots,X_n\\ \\mathrm{iid.},\\sim N(0,1).\n\\]</span> 则 <span class=\"math display\">\\[\nY=X_1^2+\\cdots,X_n^2\n\\]</span> 服从自由度为<span class=\"math inline\">\\(n\\)</span>的卡方分布<span class=\"math inline\">\\(\\chi_n^2\\)</span>。</p>\n<h3 id=\"可加性\">可加性</h3>\n<p>如果<span class=\"math inline\">\\(X\\sim\\chi_{n_1}^2,Y\\sim\\chi_{n_2}^2\\)</span>，并且<span class=\"math inline\">\\(X,Y\\)</span>相互独立，则 <span class=\"math display\">\\[\nX+Y\\sim\\chi_{n_1+n_2}^2.\n\\]</span></p>\n<h3 id=\"期望与方差\">期望与方差</h3>\n<p>若<span class=\"math inline\">\\(X\\sim\\chi_n^2\\)</span>，则<span class=\"math inline\">\\(EX=n,D(X)=2n\\)</span>。</p>\n<h2 id=\"t分布\">t分布</h2>\n<h3 id=\"定义-1\">定义</h3>\n<p>设随机变量<span class=\"math inline\">\\(X\\)</span>与<span class=\"math inline\">\\(Y\\)</span>相互独立，且<span class=\"math inline\">\\(X\\sim N(0,1)，Y\\sim \\chi_n^2\\)</span>，则称统计量<span class=\"math inline\">\\(T=\\frac X {\\sqrt\\frac Y n}\\)</span>服从自由度为<span class=\"math inline\">\\(n\\)</span>的<span class=\"math inline\">\\(t\\)</span>分布，记作<span class=\"math inline\">\\(T\\sim t_n\\)</span>。</p>\n<h2 id=\"f分布\">F分布</h2>\n<h3 id=\"定义-2\">定义</h3>\n<p>若<span class=\"math inline\">\\(U\\sim \\chi_{n_1}^2,V\\sim \\chi_{n_2}^2\\)</span>，且<span class=\"math inline\">\\(u\\)</span>与<span class=\"math inline\">\\(V\\)</span>相互独立，则称统计量<span class=\"math inline\">\\(\\frac {\\frac U {n_1}} {\\frac V {n_2}}\\)</span>服从自由度为<span class=\"math inline\">\\((n_1,n_2)\\)</span>的<span class=\"math inline\">\\(F\\)</span>分布，记为<span class=\"math inline\">\\(F_{n_1,n_2}\\)</span>。</p>\n<h3 id=\"性质\">性质</h3>\n<p>若<span class=\"math inline\">\\(F\\sim F_{n_1,n_2}\\)</span>，则<span class=\"math inline\">\\(\\frac 1 F\\sim F_{n_2,n_1}\\)</span>。</p>\n<p>若<span class=\"math inline\">\\(t\\sim t_n\\)</span>，则<span class=\"math inline\">\\(t^2\\sim F_{1,n}\\)</span>。</p>\n","categories":["Mathematics"],"tags":["Probability Theory"]},{"title":"Register File","url":"/2021/11/22/Register-File/","content":"<p>数字电路实验报告《寄存器堆》：</p>\n<span id=\"more\"></span>\n<p>移动端点击链接下载查看；</p>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/computer09.pdf\">Register File</a></p>\n<p>PC端支持在线预览。</p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/computer09.pdf\" data-height=\"600px\"></div>\n","categories":["Computer Science"],"tags":["Digital Circuit"]},{"title":"Residue and Its Applications","url":"/2021/12/07/Residue-and-Its-Applications/","content":"<h1 id=\"留数及其应用\">留数及其应用</h1>\n<p>留数是复变函数中的一个重要概念，它有着广泛的应用。本章先讲述留数的一般理论，然后介绍它的一些应用，特别是在计算某些类型的定积分中的应用。</p>\n<span id=\"more\"></span>\n<h2 id=\"留数定理\">留数定理</h2>\n<h3 id=\"留数定理-1\">留数定理</h3>\n<p>如果函数<span class=\"math inline\">\\(f(z)\\)</span>在闭路<span class=\"math inline\">\\(C\\)</span>上解析，在<span class=\"math inline\">\\(C\\)</span>的内部除去<span class=\"math inline\">\\(n\\)</span>个孤立奇点<span class=\"math inline\">\\(a_1,a_2,\\cdots,a_n\\)</span>外也解析，则 <span class=\"math display\">\\[\n\\int\\limits_Cf(z)\\mathrm dz=2\\pi\\mathrm i\\sum\\limits_{k=1}^nRes[f(z),a_k].\n\\]</span></p>\n<h3 id=\"极点的留数\">极点的留数</h3>\n<p>设<span class=\"math inline\">\\(a\\)</span>是<span class=\"math inline\">\\(f(z)\\)</span>的<span class=\"math inline\">\\(m\\)</span>级极点，则 <span class=\"math display\">\\[\nRes[f(z),a]=\\frac 1{(m-1)!}\\lim\\limits_{z\\to a}\\frac{\\mathrm d^{m-1}}{\\mathrm dz^{m-1}}[(z-a)^mf(z)].\n\\]</span></p>\n<h2 id=\"定积分的计算\">定积分的计算</h2>\n<h3 id=\"引理1\">引理1</h3>\n<p>如果当<span class=\"math inline\">\\(R\\)</span>充分大时，<span class=\"math inline\">\\(f(z)\\)</span>在圆弧<span class=\"math inline\">\\(C_R:z=Re^{i\\theta}(\\alpha\\leqslant\\theta\\leqslant\\beta)\\)</span>上连续，且 <span class=\"math display\">\\[\n\\lim\\limits_{z\\to\\infty}zf(z)=0,\n\\]</span> 则 <span class=\"math display\">\\[\n\\lim\\limits_{R\\to+\\infty}\\int\\limits_{C_R}f(z)\\mathrm dz=0.\n\\]</span></p>\n<h3 id=\"引理2\">引理2</h3>\n<p>如果当<span class=\"math inline\">\\(\\rho\\)</span>充分小时，<span class=\"math inline\">\\(f(z)\\)</span>在圆弧 <span class=\"math display\">\\[\nC_\\rho:z=a+\\rho e^{\\mathrm i\\theta}(\\alpha\\leqslant\\theta\\leqslant\\beta)\n\\]</span> 上连续，且 <span class=\"math display\">\\[\n\\lim\\limits_{z\\to a}(z-a)f(z)=k,\n\\]</span> 则 <span class=\"math display\">\\[\n\\lim\\limits_{\\rho\\to0}\\int\\limits_{C_\\rho}f(z)\\mathrm dz=\\mathrm  i(\\beta-\\alpha)k.\n\\]</span></p>\n<h3 id=\"若尔当引理\">若尔当引理</h3>\n<p>如果<span class=\"math inline\">\\(R\\)</span>充分大时，<span class=\"math inline\">\\(g(z)\\)</span>在圆弧 <span class=\"math display\">\\[\nC_R:|z|=R,\\Im z&gt;-a(a&gt;0)\n\\]</span> 上连续，且 <span class=\"math display\">\\[\n\\lim\\limits_{z\\to\\infty}g(z)=0,\n\\]</span> 则对任何正数<span class=\"math inline\">\\(\\lambda\\)</span>，都有 <span class=\"math display\">\\[\n\\lim\\limits_{R\\to+\\infty}\\int\\limits_{C_R}g(z)e^{\\mathrm i\\lambda z}\\mathrm dz=0.\n\\]</span></p>\n","categories":["Mathematics"],"tags":["Complex Function"]},{"title":"Reveal Yourself","url":"/2021/12/12/Reveal-Yourself/","content":"<h1 id=\"reveal-yourself\">Reveal Yourself</h1>\n<p>Experiment Report to ICS Lab4.</p>\n<span id=\"more\"></span>\n<h2 id=\"tasks\">Tasks</h2>\n<p>I ever met such a situation that your disk is broken and data is lost.</p>\n<p>OK, in this lab, my task is to find out the missing bit in a program.</p>\n<h3 id=\"task-1\">task 1</h3>\n<p>In the first part, 4 bits in the code are missing. I need to find out the missing bits. Before the program starts, values in the registers(except PC) are 0. At the end of the program, the register status is as follow.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">R0 = 5, R1 = 0, R2 = 300f, R3 = 0</span><br><span class=\"line\">R4 = 0, R5 = 0, R6 = 0, R7 = 3003</span><br></pre></td></tr></table></figure>\n<h3 id=\"task-2\">task 2</h3>\n<p>The second part of the program is used to calculate the remainder. 15 bits int the code are missing. For 2,4,6,8 the remainder is easy to calculate, but for 7 the remainder needs some skills. Here is a quicker way to do the remainder for 7.</p>\n<h2 id=\"methods\">Methods</h2>\n<h3 id=\"task1\">task1</h3>\n<ol type=\"1\">\n<li>The 1st x is easy to guess. If it is 0, the line is useless. So it is 1.</li>\n<li>The 2nd x can be also guessed. The line used to add 1 into R2, so It is 0.</li>\n<li>The 3rd x is easy to guess, too. In the programme, R1 is used, but R5 is not used. So it is 0.</li>\n<li>The last x is easy to guess as well. If it is 1, the opcode is <code>LDR</code> , to load data in R2 into R7 , and a <code>RET</code> is in the next line, so it is 1.</li>\n</ol>\n<h3 id=\"task2\">task2</h3>\n<ol type=\"1\">\n<li><p>The 4~6th x's are all 1, because if some of them are 0's, the programme will go to where before <code>x3000</code>,as is wrong.</p></li>\n<li><p>The 3rd and 9th x's are 1, because of language grammar.</p></li>\n<li><p>Other x's is hard to guess, but through read throughout and understand the programme, I know that the core of the programme is used the following equation:</p>\n<p><span class=\"math display\">\\[\n8k+m\\equiv k+m(\\mod 7).\n\\]</span></p>\n<p>And the main part of the programme is used to check whether k+m is less than 7, and put it into R1; the branch of the programme is used to get k by dividing R1 by 8. So the 10~12nd x's are 011 representing R3, used to multiply R3 2 times, and the last 3 x's are 100, to cycle branch whether R3 is left-overflowed.</p></li>\n<li><p>Going Back to main part, we can see that there are also 2 groups of x's. The 1st and 2nd x's are 01, used to check whether to call branch. The 7th and 8th x's are also 01, used to check whether to minus 7 from R1, by checking R0, which stores R1-7, whether is larger than 7 or not, or not. (just 2 'or not' 's✌️)</p></li>\n</ol>\n<h2 id=\"gains\">Gains</h2>\n<ol type=\"1\">\n<li>The machine language codes given have no comments, so it is hard to be read by other programmers. I learned the importance of writing comments for codes.</li>\n<li>No pains, no gains!</li>\n</ol>\n","categories":["Computer Science"],"tags":["Computing System"]},{"title":"Riddle","url":"/2021/12/12/Riddle/","content":"<h1 id=\"riddle\">Riddle</h1>\n<p>Experiment Report to ICS Lab5</p>\n<span id=\"more\"></span>\n<h2 id=\"task\">Task</h2>\n<p>For this experiment I need to functionally reproduce a c++ programs. Program A:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">int judge(int r0) &#123;</span><br><span class=\"line\">    int i = 2;</span><br><span class=\"line\">    r1 = 1;</span><br><span class=\"line\">    while (i * i &lt;= r0) &#123;</span><br><span class=\"line\">        if (r0 % i == 0) &#123;</span><br><span class=\"line\">            r1 = 0;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        i++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    return r1;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>My program should follow a specific framework:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">.ORIG x3000</span><br><span class=\"line\">... ; TO BE DONE</span><br><span class=\"line\">HALT</span><br><span class=\"line\">JUDGE ... ; TO BE DONE</span><br><span class=\"line\">... ; TO BE DONE</span><br><span class=\"line\">RET</span><br><span class=\"line\">... ; TO BE DONE</span><br><span class=\"line\">.END</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>r0(an integer, ) is given before program executes(just like lab1), and store the final result in r1. (no need to print out with TRAP)</p>\n<h2 id=\"methods\">Methods</h2>\n<p>There are two significant parts of the assembly programme:</p>\n<ol type=\"1\">\n<li><code>i*i</code> was realized by what was used in lab1l. If I wanted to get a faster one, I can use what was used in lab1p.</li>\n<li><code>r0%i</code> was realized by subtracting <code>r0</code> until it turned not positive. Because I just needed to know whether it is zero or not, this simple function is OK.</li>\n</ol>\n<h2 id=\"debugging\">Debugging</h2>\n<p>With last 4 labs, I can write assembly codes more efficiently, so I just met one bug.</p>\n<ol type=\"1\">\n<li><p>When I wrote</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">BREAK AND R1,R1,#0</span><br></pre></td></tr></table></figure>\n<p>, I carelessly made <code>R1</code> <code>R2</code>. So a bug appeared. I used <code>step over</code> in LC-3 tools and found it finally.</p></li>\n</ol>\n<h2 id=\"gains\">Gains</h2>\n<ol type=\"1\">\n<li>When I saw the C code, I think the programme was very easy. But as I translated it into assembly, it was more complex than I thought. I can feel advantage of advanced programming language over assembly Also, I knew how a C programme executive, of which I was confused in my fresh year.</li>\n<li>Mo pains, no gains!</li>\n</ol>\n","categories":["Computer Science"],"tags":["Computing System"]},{"title":"Ring and Field","url":"/2021/07/03/Ring-and-Field/","content":"<p>环和域笔记：</p>\n<span id=\"more\"></span>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/math18.pdf\">移动端点击链接下载查看</a></p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/math18.pdf\" data-height=\"600px\"></div>\n","categories":["Mathematics"],"tags":["Algebra Structure"]},{"title":"Searching List","url":"/2021/12/29/Searching-List/","content":"<p>查找表ADT的逻辑结构、存储结构及基本操作：</p>\n<span id=\"more\"></span>\n<h1 id=\"逻辑结构\">逻辑结构</h1>\n<h2 id=\"静态查找表\">静态查找表</h2>\n<p>ADT StaticSearchTable{</p>\n<p>数据对象D：D是具有相同特性的数据元素的集合，各个数据元素均含有类型相同，可唯一标识数据元素的关键字。</p>\n<p>数据关系R：数据元素同属一个集合。</p>\n<p>基本操作P：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">Create(&amp;ST,n);</span><br><span class=\"line\">Destroy(&amp;ST);</span><br><span class=\"line\">Search(ST,key);</span><br><span class=\"line\">Traverse(ST,Visit());</span><br></pre></td></tr></table></figure>\n<p>}ADT StaticSearchTable</p>\n<h2 id=\"动态查找表\">动态查找表</h2>\n<p>ADT DynamicSearchTable{</p>\n<p>数据对象D：D是具有相同特性的数据元素的集合，各个数据元素均含有类型相同，可唯一标识数据元素的关键字。</p>\n<p>数据关系R：数据元素同属一个集合。</p>\n<p>基本操作P：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">InitDSTable(&amp;DT);</span><br><span class=\"line\">DestroyDSTable(&amp;DT);</span><br><span class=\"line\">SearchDSTable(DT,key);</span><br><span class=\"line\">InsertDSTable(&amp;DT,e);</span><br><span class=\"line\">DeleteDSTable(&amp;DT,key);</span><br><span class=\"line\">TraverseDSTable(DT,Visit());</span><br></pre></td></tr></table></figure>\n<p>}ADT StaticSearchTable</p>\n<h1 id=\"存储结构\">存储结构</h1>\n<h2 id=\"静态查找表的顺序存储结构\">静态查找表的顺序存储结构</h2>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">    ElemType* elem;</span><br><span class=\"line\">    <span class=\"type\">int</span> length;</span><br><span class=\"line\">&#125;SSTable;</span><br></pre></td></tr></table></figure>\n<h2 id=\"二叉排序树的存储结构\">二叉排序树的存储结构</h2>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">BSTNode</span>&#123;</span></span><br><span class=\"line\">    ElemType data;</span><br><span class=\"line\">    <span class=\"type\">int</span> bf;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">BSTNode</span> *<span class=\"title\">lchild</span>,*<span class=\"title\">rchild</span>;</span></span><br><span class=\"line\">&#125;BSTNode,*BSTree;</span><br></pre></td></tr></table></figure>\n<h2 id=\"b-树的存储结构\">B-树的存储结构</h2>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> m 3;</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">BTNode</span>&#123;</span></span><br><span class=\"line\">    <span class=\"type\">int</span> keynum;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">BTNode</span> *<span class=\"title\">parent</span>;</span></span><br><span class=\"line\">    KeyType key[m+<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">BTNode</span> *<span class=\"title\">ptr</span>[<span class=\"title\">m</span>+1];</span></span><br><span class=\"line\">    Record *recptr[m+<span class=\"number\">1</span>];</span><br><span class=\"line\">&#125;BTNode,*BTree;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">    BTNode *pt;</span><br><span class=\"line\">    <span class=\"type\">int</span> i;</span><br><span class=\"line\">    <span class=\"type\">int</span> tag;</span><br><span class=\"line\">&#125;Result;</span><br></pre></td></tr></table></figure>\n<h2 id=\"键树的孩子兄弟链表存储结构\">键树的孩子兄弟链表存储结构</h2>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MAXKEYLEN 16</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> &#123;</span></span><br><span class=\"line\">    <span class=\"type\">char</span> ch[MAXKEYLEN];</span><br><span class=\"line\">    <span class=\"type\">int</span> num;</span><br><span class=\"line\">&#125;KeysType;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">enum</span> &#123;</span></span><br><span class=\"line\">    LEAF,</span><br><span class=\"line\">    BRANCH</span><br><span class=\"line\">&#125;NodeKind;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">DLTNode</span>&#123;</span></span><br><span class=\"line\">    <span class=\"type\">char</span> symbol;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">DLTNode</span> *<span class=\"title\">next</span>;</span></span><br><span class=\"line\">    NodeKind kind;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">union</span>&#123;</span></span><br><span class=\"line\">        Record* infoptr;</span><br><span class=\"line\">        <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">DLTNode</span> *<span class=\"title\">first</span>;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;DLTNode,*DLTree;</span><br></pre></td></tr></table></figure>\n<h2 id=\"键树的多重链表存储结构\">键树的多重链表存储结构</h2>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">TrieNode</span>&#123;</span></span><br><span class=\"line\">    NodeKind kind;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">union</span> &#123;</span></span><br><span class=\"line\">        <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">            KeysType K;</span><br><span class=\"line\">            Record* infoptr;</span><br><span class=\"line\">        &#125;lf;</span><br><span class=\"line\">        <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">            TrieNode *ptr[<span class=\"number\">27</span>];</span><br><span class=\"line\">            <span class=\"type\">int</span> num;</span><br><span class=\"line\">        &#125;bh;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;TrieNode,*TrieTree;</span><br></pre></td></tr></table></figure>\n<h2 id=\"开放地址哈希表的存储结构\">开放地址哈希表的存储结构</h2>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> hashsize[]=&#123;<span class=\"number\">997</span>,...&#125;;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">    ElemType *elem;</span><br><span class=\"line\">    <span class=\"type\">int</span> count;</span><br><span class=\"line\">    <span class=\"type\">int</span> sizeindex;</span><br><span class=\"line\">&#125;HashTable;</span><br></pre></td></tr></table></figure>\n<h1 id=\"基本操作\">基本操作</h1>\n<h2 id=\"顺序查找表\">顺序查找表</h2>\n<h3 id=\"查找\">查找</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">Search_Seq</span><span class=\"params\">(SSTable ST,KeyType key)</span>&#123;</span><br><span class=\"line\">    ST.elem[<span class=\"number\">0</span>].key=key;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=ST.length;ST.elem[i].key!=key;--i)&#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> i;</span><br><span class=\"line\">&#125;<span class=\"comment\">//Search_Seq</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"有序表的折半查找\">有序表的折半查找</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">Search_Bin</span><span class=\"params\">(SSTable ST,KeyType key)</span>&#123;</span><br><span class=\"line\">    low=<span class=\"number\">1</span>;</span><br><span class=\"line\">    high=ST.length;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(low&lt;=high)&#123;</span><br><span class=\"line\">        mid=(low+high)/<span class=\"number\">2</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(key==ST.elem[mid].key)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> mid;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(key&lt;ST.elem[mid].key)</span><br><span class=\"line\">            high=mid<span class=\"number\">-1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> </span><br><span class=\"line\">            low=mid+<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;<span class=\"comment\">//while</span></span><br><span class=\"line\">&#125;<span class=\"comment\">//Search_Bin</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"分块查找\">分块查找</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">IndexType</span>&#123;</span></span><br><span class=\"line\">    keyType maxkey;</span><br><span class=\"line\">    <span class=\"type\">int</span> startpos;</span><br><span class=\"line\">&#125;Index;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">Block_search</span><span class=\"params\">(RecType ST[],Index ind[],KeyType key,<span class=\"type\">int</span> n,<span class=\"type\">int</span> b)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//在分块索引表中查找关键字为key的记录，表长为n，块数为k</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;b&amp;&amp;LT(ind[i].maxkey,key);++i)&#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(i&gt;b)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(j=ind[i].startpos;;j&lt;n&amp;&amp;LQ(ST[j].key,ind[i].maxkey))</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(EQ(ST[j].key,key))</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(j&gt;=n||!EQ(ST[j].key,key))</span><br><span class=\"line\">        j=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> j;</span><br><span class=\"line\">&#125;<span class=\"comment\">//Block_search</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"二叉排序树\">二叉排序树</h2>\n<h3 id=\"查找-1\">查找</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">SearchBST</span><span class=\"params\">(BiTree T,KeyType key,BitNode* f,BitNode* p)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!T)&#123;</span><br><span class=\"line\">        p=f;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> FALSE;</span><br><span class=\"line\">    &#125;<span class=\"comment\">//if</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(EQ(key,T-&gt;data.key))&#123;</span><br><span class=\"line\">        p=T;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> TRUE;</span><br><span class=\"line\">    &#125;<span class=\"comment\">//if</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(LT(key,T-&gt;data.key))&#123;</span><br><span class=\"line\">        f=T;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> SearchBST(T-&gt;lchild,key,f,p);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        f=T;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> SearchBST(T-&gt;rchild,key,f,p);</span><br><span class=\"line\">    &#125;<span class=\"comment\">//else</span></span><br><span class=\"line\">&#125;<span class=\"comment\">//SearchBST</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"插入新数据\">插入新数据</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">InsertBST</span><span class=\"params\">(BiTree &amp;T,ElemType e)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!SearchBST(T,e.key,<span class=\"literal\">NULL</span>,p))&#123;</span><br><span class=\"line\">        s=(BiTree)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(BiTNode));</span><br><span class=\"line\">        s-&gt;data=e;</span><br><span class=\"line\">        s-&gt;lchild=s-&gt;rchild=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!p)</span><br><span class=\"line\">            T=s;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(LT(e.key,p-&gt;data.key))</span><br><span class=\"line\">            p-&gt;lchild=s;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> </span><br><span class=\"line\">            p-&gt;rchild=s;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> TRUE;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> FALSE;</span><br><span class=\"line\">&#125;<span class=\"comment\">//InsertBST</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"平衡二叉树\">平衡二叉树</h2>\n<h3 id=\"平衡化旋转ll\">平衡化旋转（LL）</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">LL_rotate</span><span class=\"params\">(BSTNode *a)</span>&#123;</span><br><span class=\"line\">    b=a-&gt;lchild;</span><br><span class=\"line\">    a-&gt;lchild=b-&gt;rchild;</span><br><span class=\"line\">    b-&gt;rchild=a;</span><br><span class=\"line\">    a-&gt;bf=b-&gt;bf=<span class=\"number\">0</span>;</span><br><span class=\"line\">    a=b;</span><br><span class=\"line\">&#125;<span class=\"comment\">//LL_rotate</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"平衡化旋转lr\">平衡化旋转（LR）</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">LR_rotate</span><span class=\"params\">(BSTNode *a)</span>&#123;</span><br><span class=\"line\">    b=a-&gt;lchild;</span><br><span class=\"line\">    c=b-&gt;rchild;</span><br><span class=\"line\">    b-&gt;rchild=c-&gt;lchild;</span><br><span class=\"line\">    a-&gt;lchild=c-&gt;rchild;</span><br><span class=\"line\">    c-&gt;lchild=b;</span><br><span class=\"line\">    c-&gt;rchild=a;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(c-&gt;bf==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        a-&gt;bf=<span class=\"number\">-1</span>;</span><br><span class=\"line\">        b-&gt;bf=<span class=\"number\">0</span>;</span><br><span class=\"line\">        c-&gt;bf=<span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(c-&gt;bf==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        a-&gt;bf=<span class=\"number\">0</span>;</span><br><span class=\"line\">        b-&gt;bf=<span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        a-&gt;bf=<span class=\"number\">0</span>;</span><br><span class=\"line\">        b-&gt;bf=<span class=\"number\">1</span>;</span><br><span class=\"line\">        c-&gt;bf=<span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;<span class=\"comment\">//else </span></span><br><span class=\"line\">    a=c;</span><br><span class=\"line\">&#125;<span class=\"comment\">//LR_rotate</span></span><br></pre></td></tr></table></figure>\n","categories":["Computer Science"],"tags":["Data Structure"]},{"title":"Series Representation of Analytic Functions","url":"/2021/12/07/Series-Representation-of-Analytic-Functions/","content":"<h1 id=\"解析函数的级数表示\">解析函数的级数表示</h1>\n<p>级数是研究解析函数的另一个重要工具，本章要讨论解析函数的两种级数展开式，并以此为基础进一步研究解析函数。</p>\n<span id=\"more\"></span>\n<h2 id=\"幂级数\">幂级数</h2>\n<h3 id=\"收敛\">收敛</h3>\n<p>设有复数列<span class=\"math inline\">\\(\\{z_n=x_n+\\mathrm iy_n,n=1,2,\\cdots\\}\\)</span>，表达式 <span class=\"math display\">\\[\n\\sum\\limits_{k=1}^{+\\infty}z_k=z_1+z_2+\\cdots +z_k+\\cdots\n\\]</span> 称为复数项无穷级数。如果它的部分和数列 <span class=\"math display\">\\[\nS_n=z_1+z_2+\\cdots+z_n(n=1,2,\\cdots)\n\\]</span> 有极限<span class=\"math inline\">\\(\\lim\\limits_{n\\to+\\infty}S_n=S=a+ib\\)</span>（有限复数），则称级数 <span class=\"math display\">\\[\n\\sum\\limits_{k=1}^{+\\infty}z_k=z_1+z_2+\\cdots +z_k+\\cdots\n\\]</span> 是收敛的，<span class=\"math inline\">\\(S\\)</span>称为级数的和，记作 <span class=\"math display\">\\[\n\\sum\\limits_{k=1}^{+\\infty}z_k=S.\n\\]</span></p>\n<h3 id=\"收敛的充要条件\">收敛的充要条件</h3>\n<p>级数 <span class=\"math display\">\\[\n\\sum\\limits_{k=1}^{+\\infty}z_k=z_1+z_2+\\cdots +z_k+\\cdots\n\\]</span> 收敛（于<span class=\"math inline\">\\(S\\)</span>）的充分必要条件是实级数<span class=\"math inline\">\\(\\sum\\limits_{k=1}^{+\\infty}a_k\\)</span>收敛（于<span class=\"math inline\">\\(a\\)</span>）和<span class=\"math inline\">\\(\\sum\\limits_{k=1}^{+\\infty}b_k\\)</span>收敛（于<span class=\"math inline\">\\(b\\)</span>）。</p>\n<h3 id=\"绝对收敛\">绝对收敛</h3>\n<p>如果级数 <span class=\"math display\">\\[\n\\sum\\limits_{k=1}^{+\\infty}|z_k|=|z_1|+|z_2|+\\cdots+|z_k|+\\cdots\n\\]</span> 收敛，则称级数 <span class=\"math display\">\\[\n\\sum\\limits_{k=1}^{+\\infty}z_k=z_1+z_2+\\cdots +z_k+\\cdots\n\\]</span> 绝对收敛。</p>\n<h3 id=\"阿贝尔定理\">阿贝尔定理</h3>\n<ol type=\"1\">\n<li><p>如果幂级数 <span class=\"math display\">\\[\n\\sum\\limits_{n=0}^{+\\infty}a_n(z-a)^n=a_0+a_1(z-a)+a_2(z-a)^2+\\cdots\n\\]</span> 在某点<span class=\"math inline\">\\(z_0(z_0\\neq a)\\)</span>收敛，则它在圆<span class=\"math inline\">\\(|z-a|&lt;|z_0-a|\\)</span>内绝对收敛。</p></li>\n<li><p>如果幂级数 <span class=\"math display\">\\[\n\\sum\\limits_{n=0}^{+\\infty}a_n(z-a)^n=a_0+a_1(z-a)+a_2(z-a)^2+\\cdots\n\\]</span> 在某点<span class=\"math inline\">\\(z_1\\)</span>发散，则它在圆外域<span class=\"math inline\">\\(|z-a|&gt;|z_0-a|\\)</span>内处处发散。</p></li>\n</ol>\n<h3 id=\"复幂级数的收敛域\">复幂级数的收敛域</h3>\n<p>设幂级数 <span class=\"math display\">\\[\n\\sum\\limits_{n=0}^{+\\infty}|a_n|x^n\n\\]</span> 的收敛半径为<span class=\"math inline\">\\(R\\)</span>，则依不同的情况，有：</p>\n<ol type=\"1\">\n<li><p>若<span class=\"math inline\">\\(0&lt;R&lt;+\\infty\\)</span>，则级数 <span class=\"math display\">\\[\n\\sum\\limits_{n=0}^{+\\infty}a_n(z-a)^n=a_0+a_1(z-a)+a_2(z-a)^2+\\cdots\n\\]</span> 在圆<span class=\"math inline\">\\(D:|z-a|&lt;R\\)</span>内绝对收敛；在圆外域<span class=\"math inline\">\\(|z-a|&gt;R\\)</span>内处处发散；</p></li>\n<li><p>若<span class=\"math inline\">\\(R=+\\infty\\)</span>，则级数 <span class=\"math display\">\\[\n\\sum\\limits_{n=0}^{+\\infty}a_n(z-a)^n=a_0+a_1(z-a)+a_2(z-a)^2+\\cdots\n\\]</span> 在圈平面内收敛；</p></li>\n<li><p>若<span class=\"math inline\">\\(R=0\\)</span>，则级数 <span class=\"math display\">\\[\n\\sum\\limits_{n=0}^{+\\infty}a_n(z-a)^n=a_0+a_1(z-a)+a_2(z-a)^2+\\cdots\n\\]</span> 只在复平面内一点<span class=\"math inline\">\\(z=a\\)</span>收敛。</p></li>\n</ol>\n<h2 id=\"解析函数的泰勒展开\">解析函数的泰勒展开</h2>\n<h3 id=\"泰勒级数\">泰勒级数</h3>\n<p>设函数<span class=\"math inline\">\\(f(z)\\)</span>在<span class=\"math inline\">\\(a\\)</span>点解析，如果以<span class=\"math inline\">\\(a\\)</span>为中心作一个圆，并让圆的半径不断扩大，直到圆周碰上<span class=\"math inline\">\\(f(z)\\)</span>的奇点为止（如果<span class=\"math inline\">\\(f(z)\\)</span>在全平面上解析，这个圆的半径就是无限大），则在此圆域内部，<span class=\"math inline\">\\(f(z)\\)</span>可以展开成幂级数 <span class=\"math display\">\\[\nf(z)=\\sum\\limits_{n=0}^{+\\infty}a_n(z-a)^n\n\\]</span> 这里 <span class=\"math display\">\\[\na_n=\\frac{f^{(n)}(a)}{n!}(n=0,1,2,\\cdots).\n\\]</span></p>\n<h3 id=\"泰勒展开与解析\">泰勒展开与解析</h3>\n<p><span class=\"math inline\">\\(f(z)\\)</span>在区域<span class=\"math inline\">\\(D\\)</span>内解析的充分必要条件是<span class=\"math inline\">\\(f(z)\\)</span>在<span class=\"math inline\">\\(D\\)</span>内任一点<span class=\"math inline\">\\(a\\)</span>处可以展开成<span class=\"math inline\">\\(z-a\\)</span>的幂级数。</p>\n<h3 id=\"m级零点\">m级零点</h3>\n<p><span class=\"math inline\">\\(f(z)\\)</span>以<span class=\"math inline\">\\(z\\)</span>为<span class=\"math inline\">\\(m\\)</span>级零点的充要条件是</p>\n<p>在<span class=\"math inline\">\\(z_0\\)</span>点附近，有 <span class=\"math display\">\\[\nf(z)=(z-z_0)^mg(z),\n\\]</span> 这里<span class=\"math inline\">\\(g(z)\\)</span>在<span class=\"math inline\">\\(z_0\\)</span>点解析，且<span class=\"math inline\">\\(g(z_0)\\neq0\\)</span>;</p>\n<p>或 <span class=\"math display\">\\[\nf(z_0)=f&#39;(z_0)=\\cdots=f^{(m-1)}(z_0)=0,\n\\]</span> 而 <span class=\"math display\">\\[\nf^{(m)}(z_0)\\neq 0.\n\\]</span></p>\n<h2 id=\"解析函数的洛朗展开\">解析函数的洛朗展开</h2>\n<h3 id=\"洛朗级数\">洛朗级数</h3>\n<p>设<span class=\"math inline\">\\(f(z)\\)</span>在圆环域<span class=\"math inline\">\\(D:r&lt;|z-a|&lt;R\\)</span>中解析，则<span class=\"math inline\">\\(f(z)\\)</span>一定能在这个圆环中展开成洛朗级数，即 <span class=\"math display\">\\[\nf(z)=\\sum\\limits_{n=-\\infty}^{+\\infty}a_n(z-a)^n,\n\\]</span> 这里 <span class=\"math display\">\\[\na_n=\\frac{1}{2\\pi \\mathrm i}\\int\\limits_C\\frac{f(\\zeta)}{(\\zeta-a)^{n+!}}\\mathrm d\\zeta(n=0,\\pm1,\\pm2,\\cdots),\n\\]</span> 而<span class=\"math inline\">\\(C\\)</span>是<span class=\"math inline\">\\(D\\)</span>内围绕<span class=\"math inline\">\\(a\\)</span>的任意闭路。</p>\n<h3 id=\"孤立奇点\">孤立奇点</h3>\n<p>设<span class=\"math inline\">\\(f(z)\\)</span>在点<span class=\"math inline\">\\(a\\)</span>的某个去心邻域<span class=\"math inline\">\\(K:0&lt;|z-a|&lt;R\\)</span>内解析，但在点<span class=\"math inline\">\\(a\\)</span>不解析，则<span class=\"math inline\">\\(a\\)</span>称为<span class=\"math inline\">\\(f(z)\\)</span>的孤立奇点。</p>\n<p>如果<span class=\"math inline\">\\(f(z)\\)</span>在<span class=\"math inline\">\\(\\infty\\)</span>点的某邻域（即某个圆的外区域）<span class=\"math inline\">\\(R&lt;|z|&lt;+\\infty\\)</span>内解析，则<span class=\"math inline\">\\(\\infty\\)</span>称为<span class=\"math inline\">\\(f(z)\\)</span>的孤立奇点。</p>\n<h2 id=\"孤立奇点的分类\">孤立奇点的分类</h2>\n<h3 id=\"可去奇点\">可去奇点</h3>\n<p>设<span class=\"math inline\">\\(a\\)</span>为<span class=\"math inline\">\\(f(z)\\)</span>的孤立奇点，那么<span class=\"math inline\">\\(a\\)</span>是<span class=\"math inline\">\\(f(z)\\)</span>的可去奇点的充分必要条件是：存在某个正数<span class=\"math inline\">\\(\\rho\\)</span>，使得<span class=\"math inline\">\\(f(z)\\)</span>在环域<span class=\"math inline\">\\(0&lt;|z-a|&lt;\\rho\\)</span>内有界。</p>\n<h3 id=\"m级极点\">m级极点</h3>\n<p>设<span class=\"math inline\">\\(a\\)</span>为<span class=\"math inline\">\\(f(z)\\)</span>的孤立奇点，那么<span class=\"math inline\">\\(a\\)</span>是<span class=\"math inline\">\\(f(z)\\)</span>的<span class=\"math inline\">\\(m\\)</span>级极点充分必要条件是：</p>\n<p><span class=\"math inline\">\\(f(z)\\)</span>在某环域内可表示为 <span class=\"math display\">\\[\nf(z)=\\frac{\\varphi(z)}{(z-a)^m},\n\\]</span> 这里，<span class=\"math inline\">\\(\\varphi(z)\\)</span>在<span class=\"math inline\">\\(a\\)</span>点解析，且<span class=\"math inline\">\\(\\varphi(a)\\neq0\\)</span>；</p>\n<p>或<span class=\"math inline\">\\(a\\)</span>是函数<span class=\"math inline\">\\(g(z)=\\frac{1}{f(z)}\\)</span>的<span class=\"math inline\">\\(m\\)</span>级零点。</p>\n<h3 id=\"本性奇点\">本性奇点</h3>\n<p><span class=\"math inline\">\\(f(z)\\)</span>以<span class=\"math inline\">\\(a\\)</span>为本性奇点的充分必要条件是：不存在有限或无限的极限<span class=\"math inline\">\\(\\lim\\limits_{z\\to a}f(z)\\)</span>。</p>\n","categories":["Mathematics"],"tags":["Complex Function"]},{"title":"Set","url":"/2021/07/03/Set/","content":"<p>集合笔记：</p>\n<span id=\"more\"></span>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/math12.pdf\">移动端点击链接下载查看</a></p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/math12.pdf\" data-height=\"600px\"></div>\n","categories":["Mathematics"],"tags":["Algebra Structure"]},{"title":"Setting Sail","url":"/2019/11/05/Setting-Sail/","content":"<p>高中班刊征文之二——《启航》：</p>\n<span id=\"more\"></span>\n<p>都说哈三中是个梦开始的地方。</p>\n<p>她自己也这么说。古朴庄重的石狮红柱门对映的廊墙上，“梦想”二字为首，其下才为“年华”与“使命”呀。</p>\n<p>柏老师第一个月的三件事中，第一件也是梦想哈。</p>\n<p>多少望子成龙、望女成凤的家长劝勉小孩子：“去哈三中念书吧，在那里能更好地实现你的梦想。”</p>\n<p>于是，一级又一级的同学实现了可以实现梦想的梦想，走进了群英荟萃、人杰地灵的415号，怀揣独一无二的梦想，等待为之扬帆起航。</p>\n<p>梦想总被认为是美好的。梦想着拿年级第1名的人，如果一次不能成功，还能对自己说还有第2次、第3次。三年里大考试就有10余次，故像这样想着，还能鼓足干劲。可梦想拿国家金牌的人，一共只2~3次机会，错过某次便难弥补；梦想得到美好感情的人，失败恐怕就没有从头再来的机会。这些多是空想的人的经历，梦开始的地方，可不是上课睡觉的地方。</p>\n<p>渐渐地，甚至很快地，我们纷纷认识到了现实的骨感：没有行动的梦想终将泛白，只有敢行动，梦想才生动。于是便开始激昂斗志，挥洒青春的汗水。</p>\n<p>严肃又活跃的课堂里，有我们追求真理的青春；不小也不大的操场上，有我们争抢拼搏的青春。无论是夙兴夜寐，还是晨读晚写；无论是教学楼长走廊里的答疑，还是综合楼空教室中的自习，都展现着莘莘学子为无悔的青春奋战、为不灭的梦想启航的信念。</p>\n<p>有人讲，梦想能否实现不要紧，三年拼搏的青春才是最美丽的，可这句不过也是个梦想罢了。当你看到勤勤恳恳焚膏继晷的自己比不得嘻嘻哈哈上课游戏的别人时，当你看到游历多地刷书无数的自己比不得闲坐在家冥想提升的别人时，甚至当你看到有人不择手段与你竞争，如</p>\n<p>诗云：</p>\n<p>学车八人欢乐返，</p>\n<p>自发板书车始翻。</p>\n<p>多少实学真才者，</p>\n<p>怎比原题做考前？</p>\n<p>时，你还会不在意结果吗？</p>\n<p>无论在意与否，现实就在这里，冷得让人连说都不会话，残酷地展现出来，在我们许多人的青春道路上，添上浓墨重彩的一笔，甚至若干笔。不谙世事的我们难以理解社会残酷的一面——大家并非站在同一起跑线上起步，这是因为我们还在学校这个遮风挡雨、风平浪静的港湾里尚未启航、</p>\n<p>可是，无论我们是愿意与否、难舍也罢，都要带着三年内习得的一切扬帆起航，驶向深远蔚蓝、波涛汹涌的大海，去继续追求高远的梦想，恣意精彩的青春。</p>\n<p>今日写此文，沉重又轻松。距高考仅215日，不由令人心头一紧；但回头看看，以往2年时光精彩纷呈，也一阵欣慰。不光本人回头看，连学校也回头看。</p>\n<p>又诗云：</p>\n<p>五分之一回头看，</p>\n<p>原题重做不简单。</p>\n<p>右顾左盼均不敢，</p>\n<p>只得转身回头看。</p>\n<p>一笑罢了。但实际确应回头看看走过的路，吸取经验，为更好地前行。</p>\n<p>不管怎样，努力不会白费，三分天注定，七分靠打拼。</p>\n<p>我们拥有着美好的梦想；</p>\n<p>我们挥洒过无悔的青春；</p>\n<p>我们直面这深远的启航。</p>\n","categories":["Sociology"],"tags":["H3Z"]},{"title":"Simulation of Elevator Events","url":"/2021/10/30/Simulation-of-Elevator-events/","content":"<h1 id=\"数据结构离散事件的模拟大作业电梯模拟\">数据结构离散事件的模拟大作业——电梯模拟</h1>\n<h2 id=\"运行结果\">运行结果</h2>\n<p><img src=\"https://gsxgoldenlegendary.github.io/images/1.png\" /></p>\n<span id=\"more\"></span>\n<h2 id=\"项目环境\">项目环境</h2>\n<ul>\n<li>设备：Windows Surface Pro 7 Model 1866 i7</li>\n<li>操作系统：Windows 11 Pro Insider Preview 10.0.22483.1011</li>\n<li>集成开发环境：JetBrain CLion 2021.2.1</li>\n<li>编译器：MinGW 7.3.0 64-bit</li>\n</ul>\n<h2 id=\"elevator.h\">Elevator.h</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// Created by administrator Guo on 2021/9/28 12:32.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifndef</span> DATASTRUCTUREBHW1_ELEVATOR_H</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> DATASTRUCTUREBHW1_ELEVATOR_H</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;MyLinkList.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Student.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;string&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">enum</span> <span class=\"title class_\">ElevatorState</span> &#123;</span><br><span class=\"line\">    goingUp, goingDown, idle, preparing, opening, closing, enterOrLeave,</span><br><span class=\"line\">    acceleratingUp,acceleratingDown,deceleratingUp,deceleratingDown</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">//    bool enterOrLeave;  D1, whether man is entering or leaving elevator</span></span><br><span class=\"line\"><span class=\"comment\">//    bool idle;          D2, whether elevator has stayed for 300t</span></span><br><span class=\"line\"><span class=\"comment\">//    bool vainOpen;      D3, whether elevator door is open &amp; nobody goes through</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Elevator</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"type\">int</span> code;</span><br><span class=\"line\">    <span class=\"type\">int</span> currentFloor;               <span class=\"comment\">//current position of thr elevator</span></span><br><span class=\"line\">    ElevatorState state;            <span class=\"comment\">//current state of elevator</span></span><br><span class=\"line\">    MyLinkList passengers;  <span class=\"comment\">//use list to sort students in elevator</span></span><br><span class=\"line\">    <span class=\"type\">int</span> actionTime;                 <span class=\"comment\">//the time when next action of elevator occurs</span></span><br><span class=\"line\">    <span class=\"type\">int</span> station;                    <span class=\"comment\">//the next floor elevator need stop at</span></span><br><span class=\"line\">    <span class=\"type\">int</span> destination;                <span class=\"comment\">//the last floor where elevator end going up or down</span></span><br><span class=\"line\">    <span class=\"type\">bool</span> callCar[<span class=\"number\">5</span>];</span><br><span class=\"line\">    <span class=\"type\">int</span> distance[<span class=\"number\">5</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">Elevator</span>(<span class=\"type\">int</span>);</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">waitInFirstFloor</span><span class=\"params\">()</span></span>;    <span class=\"comment\">//E1, wait in the first currentFloor</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//realised in controller function in system class</span></span><br><span class=\"line\">    <span class=\"comment\">//void changeState();       E2, determine whether to change the state</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">openDoor</span><span class=\"params\">()</span></span>;            <span class=\"comment\">//E3, open the swing door</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">inAndOut</span><span class=\"params\">()</span></span>;            <span class=\"comment\">//E4, let students get in and out of the elevator1</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">closeDoor</span><span class=\"params\">()</span></span>;           <span class=\"comment\">//E5, shut the swing door</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">prepare</span><span class=\"params\">()</span></span>;             <span class=\"comment\">//E6, prepare for moving</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">upOneFloor</span><span class=\"params\">()</span></span>;          <span class=\"comment\">//E7, go up a currentFloor</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">downOneFloor</span><span class=\"params\">()</span></span>;        <span class=\"comment\">//E8, go down a currentFloor</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">startDecelerate</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">checkDistance</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//maybe it isn&#x27;t needed in this programme</span></span><br><span class=\"line\">    <span class=\"comment\">//void noAction();          E9, make D2 0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">std::string <span class=\"title\">getState</span><span class=\"params\">()</span> <span class=\"type\">const</span></span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span> <span class=\"comment\">//DATASTRUCTUREBHW1_ELEVATOR_H</span></span></span><br></pre></td></tr></table></figure>\n<h2 id=\"elevator.cpp\">Elevator.cpp</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// Created by administrator Guo on 2021/9/28 12:32.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Elevator.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;main.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">Elevator::<span class=\"built_in\">Elevator</span>(<span class=\"type\">int</span> i) &#123;</span><br><span class=\"line\">    code = i;</span><br><span class=\"line\">    currentFloor = <span class=\"number\">1</span>;           <span class=\"comment\">//when the programme starts, elevator is at floor 1</span></span><br><span class=\"line\">    state = idle;</span><br><span class=\"line\">    actionTime = <span class=\"number\">0</span>;</span><br><span class=\"line\">    station = <span class=\"number\">1</span>;</span><br><span class=\"line\">    destination = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i: callCar) &#123;</span><br><span class=\"line\">        callCar[i] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i: distance) &#123;</span><br><span class=\"line\">        distance[i] = <span class=\"number\">100</span>;      <span class=\"comment\">//100 means needn&#x27;t reach</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Elevator::waitInFirstFloor</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    destination = <span class=\"number\">1</span>;</span><br><span class=\"line\">    station = <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Elevator::inAndOut</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    state = enterOrLeave;</span><br><span class=\"line\">    <span class=\"comment\">//Students get off the elevator.</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> *iter = passengers.head-&gt;next; iter != <span class=\"literal\">nullptr</span>;) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (iter-&gt;outFloor == currentFloor) &#123;</span><br><span class=\"line\">            std::cout &lt;&lt; <span class=\"string\">&quot;\\tStudent &quot;</span> &lt;&lt; iter-&gt;number &lt;&lt; <span class=\"string\">&quot; gets off elevator &quot;</span> &lt;&lt; code &lt;&lt; <span class=\"string\">&quot; .\\n&quot;</span>;</span><br><span class=\"line\">            iter = passengers.<span class=\"built_in\">erase</span>(iter);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            iter = iter-&gt;next;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//Students get into the elevator</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!storey[currentFloor].callDown) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (; !storey[currentFloor].listDown.<span class=\"built_in\">empty</span>()</span><br><span class=\"line\">               &amp;&amp; passengers.<span class=\"built_in\">size</span>() != MAX_CAPACITY;) &#123;</span><br><span class=\"line\">            Student s = storey[currentFloor].listDown.<span class=\"built_in\">front</span>();</span><br><span class=\"line\">            std::cout &lt;&lt; <span class=\"string\">&quot;\\tStudent &quot;</span> &lt;&lt; s.number &lt;&lt; <span class=\"string\">&quot; gets into elevator &quot;</span> &lt;&lt; code &lt;&lt; <span class=\"string\">&quot; .\\n&quot;</span>;</span><br><span class=\"line\">            passengers.<span class=\"built_in\">push_back</span>(s);</span><br><span class=\"line\">            callCar[s.outFloor] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            storey[currentFloor].listDown.<span class=\"built_in\">pop_front</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!storey[currentFloor].callUp) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (; !storey[currentFloor].listUp.<span class=\"built_in\">empty</span>()</span><br><span class=\"line\">               &amp;&amp; passengers.<span class=\"built_in\">size</span>() != MAX_CAPACITY;) &#123;</span><br><span class=\"line\">            Student s = storey[currentFloor].listUp.<span class=\"built_in\">front</span>();</span><br><span class=\"line\">            std::cout &lt;&lt; <span class=\"string\">&quot;\\tStudent &quot;</span> &lt;&lt; s.number &lt;&lt; <span class=\"string\">&quot; gets into elevator &quot;</span> &lt;&lt; code &lt;&lt; <span class=\"string\">&quot; .\\n&quot;</span>;</span><br><span class=\"line\">            passengers.<span class=\"built_in\">push_back</span>(s);</span><br><span class=\"line\">            callCar[s.outFloor] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            storey[currentFloor].listUp.<span class=\"built_in\">pop_front</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    actionTime = currentTime + ENTER_OR_LEAVE_TIME;</span><br><span class=\"line\">    system1.hasChanged = <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Elevator::openDoor</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//if elevator will go up, callUP canceled in current floor</span></span><br><span class=\"line\">    <span class=\"comment\">//it occurs when elevator is going up, or idle, or it has reached destination of going down</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((state == deceleratingUp</span><br><span class=\"line\">         || state == idle</span><br><span class=\"line\">         || state == deceleratingDown</span><br><span class=\"line\">            &amp;&amp; destination == currentFloor)</span><br><span class=\"line\">        &amp;&amp; storey[currentFloor].callUp) &#123;</span><br><span class=\"line\">        storey[currentFloor].callUp = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">        <span class=\"comment\">//if elevator will go down, callDOWN canceled in current floor</span></span><br><span class=\"line\">        <span class=\"comment\">//it occurs when elevator is going down, or it has reached destination of going up</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ((state == deceleratingDown</span><br><span class=\"line\">              || state == idle</span><br><span class=\"line\">              || state == deceleratingUp</span><br><span class=\"line\">                 &amp;&amp; destination == currentFloor)</span><br><span class=\"line\">             &amp;&amp; storey[currentFloor].callDown) &#123;</span><br><span class=\"line\">        storey[currentFloor].callDown = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//cancel the button of current floor</span></span><br><span class=\"line\">    callCar[currentFloor] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    state = opening;</span><br><span class=\"line\">    actionTime = currentTime + OPEN_TIME;</span><br><span class=\"line\">    system1.hasChanged = <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Elevator::closeDoor</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    state = closing;</span><br><span class=\"line\">    actionTime = currentTime + CLOSE_TIME;</span><br><span class=\"line\">    system1.hasChanged = <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">std::string <span class=\"title\">Elevator::getState</span><span class=\"params\">()</span> <span class=\"type\">const</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (state) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> goingUp:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;GOING UP&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> goingDown:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;GOING DOWN&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> idle:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;IDLE&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> preparing:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;PREPARING&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> opening:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;OPENING&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> closing:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;CLOSING&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> enterOrLeave:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;ENTER OR LEAVE&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> acceleratingUp:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;ACCELERATING UP&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> acceleratingDown:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;ACCELERATING DOWN&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> deceleratingUp:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;DECELERATING UP&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> deceleratingDown:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;DECELERATING DOWN&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Elevator::upOneFloor</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    currentFloor++;</span><br><span class=\"line\">    actionTime += UP_TIME;</span><br><span class=\"line\">    state = goingUp;</span><br><span class=\"line\">    system1.hasChanged = <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Elevator::downOneFloor</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    currentFloor--;</span><br><span class=\"line\">    actionTime += DOWN_TIME;</span><br><span class=\"line\">    state = goingDown;</span><br><span class=\"line\">    system1.hasChanged = <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Elevator::prepare</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (destination &gt; currentFloor) &#123;</span><br><span class=\"line\">        state = acceleratingUp;</span><br><span class=\"line\">        actionTime = currentTime + UP_ACCELERATE_TIME;</span><br><span class=\"line\">        system1.hasChanged = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (destination &lt; currentFloor) &#123;</span><br><span class=\"line\">        state = acceleratingDown;</span><br><span class=\"line\">        actionTime = currentTime + DOWN_ACCELERATE_TIME;</span><br><span class=\"line\">        system1.hasChanged = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        state = idle;</span><br><span class=\"line\">        destination = currentFloor;</span><br><span class=\"line\">        station = currentFloor;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Elevator::startDecelerate</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (state == goingUp) &#123;</span><br><span class=\"line\">        state = deceleratingUp;</span><br><span class=\"line\">        actionTime = currentTime + UP_DECELERATE_TIME;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (state == goingDown) &#123;</span><br><span class=\"line\">        state = deceleratingDown;</span><br><span class=\"line\">        actionTime = currentTime + DOWN_DECELERATE_TIME;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    system1.hasChanged = <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Elevator::checkDistance</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> distance1 = <span class=\"number\">100</span>, distance2 = <span class=\"number\">100</span>, distance3 = <span class=\"number\">100</span>;</span><br><span class=\"line\">        <span class=\"comment\">//check callCar</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (callCar[i]) &#123;</span><br><span class=\"line\">            distance1 = <span class=\"built_in\">abs</span>(i - currentFloor);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//check callUp</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (storey[i].callUp) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (destination &gt;= currentFloor) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (i &gt;= currentFloor) &#123;</span><br><span class=\"line\">                    distance2 = i - currentFloor;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    distance2 = destination - i + destination - currentFloor;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (i &lt; destination) &#123;</span><br><span class=\"line\">                    distance2 = currentFloor - i;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    distance2 = i - destination + currentFloor - destination;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//check callDown</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (storey[i].callDown) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (destination &gt;= currentFloor) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (destination &gt;= i) &#123;</span><br><span class=\"line\">                    distance3 = destination - i + destination - currentFloor;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    distance3 = i - currentFloor;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (i &gt; currentFloor) &#123;</span><br><span class=\"line\">                    distance3 = i - destination + currentFloor - destination;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    distance3 = currentFloor - i;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        distance[i] = std::<span class=\"built_in\">min</span>(std::<span class=\"built_in\">min</span>(distance1, distance2), distance3);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"mylinklist.h\">MyLinkList.h</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// Created by administrator Guo on 2021/10/11 09:08.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifndef</span> DATASTRUCTUREBHW1_MYLINKLIST_H</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> DATASTRUCTUREBHW1_MYLINKLIST_H</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Student.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyLinkList</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    Student *head;</span><br><span class=\"line\">    Student *tail;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">MyLinkList</span>();</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">size</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">pop_front</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">push_back</span><span class=\"params\">(Student &amp;)</span></span>;</span><br><span class=\"line\">    <span class=\"function\">Student *<span class=\"title\">erase</span><span class=\"params\">(Student *)</span></span>;</span><br><span class=\"line\">    <span class=\"function\">Student <span class=\"title\">front</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">empty</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span> <span class=\"comment\">//DATASTRUCTUREBHW1_MYLINKLIST_H</span></span></span><br></pre></td></tr></table></figure>\n<h2 id=\"mylinklist.cpp\">MyLinkList.cpp</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// Created by administrator Guo on 2021/10/12 19:08.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;MyLinkList.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">MyLinkList::<span class=\"built_in\">MyLinkList</span>() &#123;</span><br><span class=\"line\">    head = <span class=\"keyword\">new</span> <span class=\"built_in\">Student</span>();</span><br><span class=\"line\">    head-&gt;next = <span class=\"literal\">nullptr</span>;</span><br><span class=\"line\">    tail = head;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">MyLinkList::size</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">auto</span> *p = head-&gt;next;</span><br><span class=\"line\">    <span class=\"type\">int</span> n = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (; p != <span class=\"literal\">nullptr</span>; p = p-&gt;next) &#123;</span><br><span class=\"line\">        n++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> n;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">MyLinkList::empty</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (head-&gt;next == <span class=\"literal\">nullptr</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">Student <span class=\"title\">MyLinkList::front</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"built_in\">empty</span>()) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (Student) (*(head-&gt;next));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">MyLinkList::push_back</span><span class=\"params\">(Student&amp; t)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">auto</span> *student=<span class=\"keyword\">new</span> <span class=\"built_in\">Student</span>(t);</span><br><span class=\"line\">    student-&gt;next = <span class=\"literal\">nullptr</span>;</span><br><span class=\"line\">    tail-&gt;next = student;</span><br><span class=\"line\">    tail = tail-&gt;next;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">MyLinkList::pop_front</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    Student *temp = head-&gt;next;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"built_in\">empty</span>()) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(tail==head-&gt;next)&#123;</span><br><span class=\"line\">            tail=head;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        head-&gt;next = head-&gt;next-&gt;next;</span><br><span class=\"line\">        <span class=\"keyword\">delete</span> temp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">Student *<span class=\"title\">MyLinkList::erase</span><span class=\"params\">(Student *t)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (Student *p = head; p != tail; p = p-&gt;next) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (p-&gt;next == t) &#123;</span><br><span class=\"line\">            p-&gt;next = p-&gt;next-&gt;next;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> p-&gt;next;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"storey.h\">Storey.h</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// Created by administrator Guo on 2021/9/28 12:34.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifndef</span> DATASTRUCTUREBHW1_STOREY_H</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> DATASTRUCTUREBHW1_STOREY_H</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;MyLinkList.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Student.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Storey</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"type\">int</span> floor;                      <span class=\"comment\">//the floor of the storey</span></span><br><span class=\"line\">    <span class=\"type\">bool</span> callUp;                    <span class=\"comment\">//up button at each storey</span></span><br><span class=\"line\">    <span class=\"type\">bool</span> callDown;                  <span class=\"comment\">//down button at each storey</span></span><br><span class=\"line\">    MyLinkList listUp;      <span class=\"comment\">//list of students going up, realised by list</span></span><br><span class=\"line\">    MyLinkList listDown;    <span class=\"comment\">//list of students going down, realised by list</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">explicit</span> <span class=\"title\">Storey</span><span class=\"params\">(<span class=\"type\">int</span>)</span></span>;</span><br><span class=\"line\">    <span class=\"comment\">//make a student in queue including listUp and listDown</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">enQueue</span><span class=\"params\">(Student &amp;)</span></span>;</span><br><span class=\"line\">    <span class=\"comment\">//check whether there is a student who wants to give up</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">checkGiveUp</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span> <span class=\"comment\">//DATASTRUCTUREBHW1_STOREY_H</span></span></span><br></pre></td></tr></table></figure>\n<h2 id=\"storey.cpp\">Storey.cpp</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// Created by administrator Guo on 2021/9/28 12:34.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Storey.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;main.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//Enqueue students into two lists distinguished by up or down</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Storey::enQueue</span><span class=\"params\">(Student &amp;student)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (student.outFloor &gt; floor) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (elevator1.state == enterOrLeave</span><br><span class=\"line\">            &amp;&amp; elevator1.currentFloor == floor</span><br><span class=\"line\">            &amp;&amp; elevator1.destination &gt;= elevator1.currentFloor) &#123;</span><br><span class=\"line\">            elevator1.<span class=\"built_in\">inAndOut</span>();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (elevator1.state == closing</span><br><span class=\"line\">                   &amp;&amp; elevator1.currentFloor == floor</span><br><span class=\"line\">                   &amp;&amp; elevator1.destination &gt;= elevator1.currentFloor) &#123;</span><br><span class=\"line\">            elevator1.<span class=\"built_in\">openDoor</span>();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (elevator2.state == enterOrLeave</span><br><span class=\"line\">                   &amp;&amp; elevator2.currentFloor == floor</span><br><span class=\"line\">                   &amp;&amp; elevator2.destination &gt;= elevator2.currentFloor) &#123;</span><br><span class=\"line\">            elevator2.<span class=\"built_in\">inAndOut</span>();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (elevator2.state == closing</span><br><span class=\"line\">                   &amp;&amp; elevator2.currentFloor == floor</span><br><span class=\"line\">                   &amp;&amp; elevator2.destination &gt;= elevator2.currentFloor) &#123;</span><br><span class=\"line\">            elevator2.<span class=\"built_in\">openDoor</span>();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (elevator1.state == opening</span><br><span class=\"line\">                   &amp;&amp; elevator1.currentFloor == floor</span><br><span class=\"line\">                   &amp;&amp; elevator1.destination &gt;= elevator1.currentFloor</span><br><span class=\"line\">                   || elevator2.state == opening</span><br><span class=\"line\">                      &amp;&amp; elevator2.currentFloor == floor</span><br><span class=\"line\">                      &amp;&amp; elevator2.destination &gt;= elevator2.currentFloor) &#123;</span><br><span class=\"line\">            listUp.<span class=\"built_in\">push_back</span>(student);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            listUp.<span class=\"built_in\">push_back</span>(student);</span><br><span class=\"line\">            callUp = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (student.outFloor &lt; floor) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (elevator1.state == enterOrLeave</span><br><span class=\"line\">            &amp;&amp; elevator1.currentFloor == floor</span><br><span class=\"line\">            &amp;&amp; elevator1.destination &lt;= elevator1.currentFloor) &#123;</span><br><span class=\"line\">            elevator1.<span class=\"built_in\">inAndOut</span>();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (elevator1.state == closing</span><br><span class=\"line\">                   &amp;&amp; elevator1.currentFloor == floor</span><br><span class=\"line\">                   &amp;&amp; elevator1.destination &lt;= elevator1.currentFloor) &#123;</span><br><span class=\"line\">            elevator1.<span class=\"built_in\">openDoor</span>();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (elevator2.state == enterOrLeave</span><br><span class=\"line\">                   &amp;&amp; elevator2.currentFloor == floor</span><br><span class=\"line\">                   &amp;&amp; elevator2.destination &lt;= elevator2.currentFloor) &#123;</span><br><span class=\"line\">            elevator2.<span class=\"built_in\">inAndOut</span>();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (elevator2.state == closing</span><br><span class=\"line\">                   &amp;&amp; elevator2.currentFloor == floor</span><br><span class=\"line\">                   &amp;&amp; elevator2.destination &lt;= elevator2.currentFloor) &#123;</span><br><span class=\"line\">            elevator2.<span class=\"built_in\">openDoor</span>();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (elevator1.state == opening</span><br><span class=\"line\">                   &amp;&amp; elevator1.currentFloor == floor</span><br><span class=\"line\">                   &amp;&amp; elevator1.destination &lt;= elevator1.currentFloor</span><br><span class=\"line\">                   || elevator2.state == opening</span><br><span class=\"line\">                      &amp;&amp; elevator2.currentFloor == floor</span><br><span class=\"line\">                      &amp;&amp; elevator2.destination &lt;= elevator2.currentFloor) &#123;</span><br><span class=\"line\">            listDown.<span class=\"built_in\">push_back</span>(student);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            listDown.<span class=\"built_in\">push_back</span>(student);</span><br><span class=\"line\">            callDown = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Storey::checkGiveUp</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> *x = listDown.head-&gt;next; x != <span class=\"literal\">nullptr</span>;) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (x-&gt;giveUpTime == currentTime) &#123;</span><br><span class=\"line\">            std::cout &lt;&lt; <span class=\"string\">&quot;\\tStudent &quot;</span> &lt;&lt; x-&gt;number &lt;&lt; <span class=\"string\">&quot; gives up at storey &quot;</span> &lt;&lt; floor &lt;&lt; <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">            x = listDown.<span class=\"built_in\">erase</span>(x);</span><br><span class=\"line\">            system1.hasChanged = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            x = x-&gt;next;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> *x = listUp.head-&gt;next; x != <span class=\"literal\">nullptr</span>;) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (x-&gt;giveUpTime == currentTime) &#123;</span><br><span class=\"line\">            std::cout &lt;&lt; <span class=\"string\">&quot;\\tStudent &quot;</span> &lt;&lt; x-&gt;number &lt;&lt; <span class=\"string\">&quot; gives up at storey &quot;</span> &lt;&lt; floor &lt;&lt; <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">            x = listUp.<span class=\"built_in\">erase</span>(x);</span><br><span class=\"line\">            system1.hasChanged = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            x = x-&gt;next;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Storey::<span class=\"built_in\">Storey</span>(<span class=\"type\">int</span> f) &#123;</span><br><span class=\"line\">    floor = f;</span><br><span class=\"line\">    callDown = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    callUp = <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"student.h\">Student.h</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// Created by administrator Guo on 2021/9/28 15:56.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifndef</span> DATASTRUCTUREBHW1_STUDENT_H</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> DATASTRUCTUREBHW1_STUDENT_H</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Student</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"type\">int</span> inFloor;        <span class=\"comment\">//the floor student gets into elevator</span></span><br><span class=\"line\">    <span class=\"type\">int</span> outFloor;       <span class=\"comment\">//the floor student gets off elevator</span></span><br><span class=\"line\">    <span class=\"type\">int</span> giveUpTime;     <span class=\"comment\">//the time when student give up waiting for elevator</span></span><br><span class=\"line\">    <span class=\"type\">int</span> interTime;      <span class=\"comment\">//the time when next student occurs</span></span><br><span class=\"line\">    <span class=\"type\">int</span> number;         <span class=\"comment\">//the sequence of student</span></span><br><span class=\"line\">    Student*next;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">Student</span>();</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">explicit</span> <span class=\"title\">Student</span><span class=\"params\">(<span class=\"type\">int</span>)</span></span>;         <span class=\"comment\">//M1, enter system, and prepare for next student&#x27;s appearance</span></span><br><span class=\"line\">    <span class=\"comment\">//realised in storey and elevator class</span></span><br><span class=\"line\"><span class=\"comment\">//    void enterAndWait()const;    M2, press button and wait</span></span><br><span class=\"line\"><span class=\"comment\">//    void queue();                M3, wait in queue</span></span><br><span class=\"line\"><span class=\"comment\">//    void giveUp();               M4, give up</span></span><br><span class=\"line\"><span class=\"comment\">//    void enterElevator();        M5, enter the elevator</span></span><br><span class=\"line\"><span class=\"comment\">//    void leave();                M6, leave</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span> <span class=\"comment\">//DATASTRUCTUREBHW1_STUDENT_H</span></span></span><br></pre></td></tr></table></figure>\n<h2 id=\"student.cpp\">Student.cpp</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// Created by administrator Guo on 2021/9/28 15:56.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Student.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;random&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;main.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;ctime&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">extern</span> <span class=\"string\">&quot;C&quot;</span> &#123; <span class=\"function\"><span class=\"type\">errno_t</span> <span class=\"title\">rand_s</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">int</span> *)</span></span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Student::<span class=\"built_in\">Student</span>(<span class=\"type\">int</span> number) &#123;</span><br><span class=\"line\">    Student::number = number;</span><br><span class=\"line\">    <span class=\"comment\">//although a seed is set, it is still not so randomly</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">static</span> std::mt19937_64 <span class=\"title\">engine</span><span class=\"params\">([]() -&gt; <span class=\"type\">unsigned</span> <span class=\"type\">int</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">        <span class=\"type\">unsigned</span> <span class=\"type\">int</span> number;</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">        rand_s(&amp;number);</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">        <span class=\"keyword\">return</span> number;</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">    &#125;())</span></span>;</span><br><span class=\"line\">    <span class=\"function\">std::uniform_real_distribution&lt;<span class=\"type\">double</span>&gt; <span class=\"title\">random</span><span class=\"params\">(<span class=\"number\">0</span>, <span class=\"number\">1</span>)</span></span>;</span><br><span class=\"line\">    inFloor = <span class=\"built_in\">int</span>(<span class=\"built_in\">random</span>(engine) * <span class=\"number\">5</span>);</span><br><span class=\"line\">    outFloor = <span class=\"built_in\">int</span>(<span class=\"built_in\">random</span>(engine) * <span class=\"number\">5</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (; inFloor == outFloor;) &#123;</span><br><span class=\"line\">        outFloor = <span class=\"built_in\">int</span>(<span class=\"built_in\">random</span>(engine) * <span class=\"number\">5</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    giveUpTime = currentTime + <span class=\"built_in\">int</span>(<span class=\"built_in\">random</span>(engine) * <span class=\"number\">100</span>) + <span class=\"number\">300</span>;</span><br><span class=\"line\">    interTime = <span class=\"built_in\">int</span>(<span class=\"built_in\">random</span>(engine) * <span class=\"number\">100</span>) + <span class=\"number\">1</span>;</span><br><span class=\"line\">    system1.hasChanged = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    next = <span class=\"literal\">nullptr</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Student::<span class=\"built_in\">Student</span>() &#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"system.h\">System.h</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// Created by administrator Guo on 2021/9/28 17:13.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifndef</span> DATASTRUCTUREBHW1_SYSTEM_H</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> DATASTRUCTUREBHW1_SYSTEM_H</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Elevator.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Student.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;list&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">System</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"type\">bool</span> hasChanged;                    <span class=\"comment\">//if the system has changed, it needs outputting.</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">System</span>();</span><br><span class=\"line\">    <span class=\"comment\">//static may result in bug</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">static</span> <span class=\"type\">void</span> <span class=\"title\">Controller</span><span class=\"params\">(Elevator &amp;)</span></span>; <span class=\"comment\">//control elevator</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">static</span> <span class=\"type\">void</span> <span class=\"title\">callElevator</span><span class=\"params\">()</span></span>;         <span class=\"comment\">//give elevator station and destination in time</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">static</span> <span class=\"type\">void</span> <span class=\"title\">outputState</span><span class=\"params\">()</span></span>;          <span class=\"comment\">//output state of the system</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">static</span> <span class=\"type\">void</span> <span class=\"title\">createStudent</span><span class=\"params\">(<span class=\"type\">int</span> &amp;)</span></span>;   <span class=\"comment\">//a student gets into the system</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span> <span class=\"comment\">//DATASTRUCTUREBHW1_SYSTEM_H</span></span></span><br></pre></td></tr></table></figure>\n<h2 id=\"system.cpp\">System.cpp</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// Created by administrator Guo on 2021/9/28 17:13.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;System.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;main.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">System::<span class=\"built_in\">System</span>() &#123;</span><br><span class=\"line\">    hasChanged = <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">System::Controller</span><span class=\"params\">(Elevator &amp;elevator)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//there are several circumstances when the door need opening,</span></span><br><span class=\"line\">    <span class=\"comment\">//it is elevator is going up, going down, or idle &amp; station equal to current floor,</span></span><br><span class=\"line\">    <span class=\"comment\">//&amp; button of current floor in elevator is on, or the direction of elevator is equal to</span></span><br><span class=\"line\">    <span class=\"comment\">//the button which is on in current floor, or elevator has reached destination,</span></span><br><span class=\"line\">    <span class=\"comment\">//or elevator is closing, but a student press button in current floor &amp; it is equal tp</span></span><br><span class=\"line\">    <span class=\"comment\">//the direction of elevator</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((currentTime == elevator.actionTime</span><br><span class=\"line\">         &amp;&amp; (elevator.state == deceleratingDown</span><br><span class=\"line\">             || elevator.state == deceleratingUp)</span><br><span class=\"line\">         || elevator.state == idle)</span><br><span class=\"line\">        &amp;&amp; ((elevator.currentFloor == elevator.station</span><br><span class=\"line\">             &amp;&amp; (elevator.callCar[elevator.currentFloor]</span><br><span class=\"line\">                 || elevator.state == deceleratingDown</span><br><span class=\"line\">                    &amp;&amp; storey[elevator.currentFloor].callDown</span><br><span class=\"line\">                 || elevator.state == deceleratingUp</span><br><span class=\"line\">                    &amp;&amp; storey[elevator.currentFloor].callUp))</span><br><span class=\"line\">            || (elevator.currentFloor == elevator.destination</span><br><span class=\"line\">                &amp;&amp; (storey[elevator.currentFloor].callUp</span><br><span class=\"line\">                    || storey[elevator.currentFloor].callDown)))</span><br><span class=\"line\">        || elevator.state == closing</span><br><span class=\"line\">           &amp;&amp; elevator.passengers.<span class=\"built_in\">size</span>() != MAX_CAPACITY</span><br><span class=\"line\">           &amp;&amp; (storey[elevator.currentFloor].callUp</span><br><span class=\"line\">               &amp;&amp; elevator.destination &gt; elevator.currentFloor</span><br><span class=\"line\">               || storey[elevator.currentFloor].callDown</span><br><span class=\"line\">                  &amp;&amp; elevator.destination &lt; elevator.currentFloor)) &#123;</span><br><span class=\"line\">        elevator.<span class=\"built_in\">openDoor</span>();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (currentTime == elevator.actionTime</span><br><span class=\"line\">               &amp;&amp; (goingUp == elevator.state</span><br><span class=\"line\">                   &amp;&amp; elevator.station &gt; elevator.currentFloor</span><br><span class=\"line\">                   || acceleratingUp == elevator.state)) &#123;</span><br><span class=\"line\">        elevator.<span class=\"built_in\">upOneFloor</span>();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (currentTime == elevator.actionTime</span><br><span class=\"line\">               &amp;&amp; (goingDown == elevator.state</span><br><span class=\"line\">                   &amp;&amp; elevator.station &lt; elevator.currentFloor</span><br><span class=\"line\">                   || acceleratingDown == elevator.state)) &#123;</span><br><span class=\"line\">        elevator.<span class=\"built_in\">downOneFloor</span>();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (currentTime == elevator.actionTime</span><br><span class=\"line\">               &amp;&amp; enterOrLeave == elevator.state) &#123;</span><br><span class=\"line\">        elevator.<span class=\"built_in\">closeDoor</span>();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (currentTime == elevator.actionTime</span><br><span class=\"line\">               &amp;&amp; opening == elevator.state) &#123;</span><br><span class=\"line\">        elevator.<span class=\"built_in\">inAndOut</span>();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (currentTime == elevator.actionTime</span><br><span class=\"line\">               &amp;&amp; closing == elevator.state</span><br><span class=\"line\">               || idle == elevator.state</span><br><span class=\"line\">                  &amp;&amp; elevator.destination != elevator.currentFloor</span><br><span class=\"line\">               || elevator.state == idle</span><br><span class=\"line\">               || (elevator.state == deceleratingUp</span><br><span class=\"line\">                   &amp;&amp; !elevator.callCar[elevator.currentFloor]</span><br><span class=\"line\">                   &amp;&amp; !storey[elevator.currentFloor].callDown</span><br><span class=\"line\">                   &amp;&amp; !storey[elevator.currentFloor].callUp)) &#123;</span><br><span class=\"line\">        elevator.<span class=\"built_in\">prepare</span>();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (currentTime == elevator.actionTime + IDLE_TIME) &#123;</span><br><span class=\"line\">        elevator.<span class=\"built_in\">waitInFirstFloor</span>();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (currentTime == elevator.actionTime</span><br><span class=\"line\">               &amp;&amp; elevator.passengers.<span class=\"built_in\">size</span>() != MAX_CAPACITY</span><br><span class=\"line\">               &amp;&amp; (goingDown == elevator.state</span><br><span class=\"line\">                   || goingUp == elevator.state)</span><br><span class=\"line\">               &amp;&amp; elevator.station == elevator.currentFloor) &#123;</span><br><span class=\"line\">        elevator.<span class=\"built_in\">startDecelerate</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//haven&#x27;t realized waiting in first floor</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">System::callElevator</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    elevator1.<span class=\"built_in\">checkDistance</span>();</span><br><span class=\"line\">    elevator2.<span class=\"built_in\">checkDistance</span>();</span><br><span class=\"line\">    <span class=\"type\">int</span> minDistance = <span class=\"number\">100</span>, <span class=\"type\">station_t</span> = elevator1.currentFloor;</span><br><span class=\"line\">    <span class=\"comment\">//set station of elevator 1</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (elevator1.state != acceleratingUp</span><br><span class=\"line\">        &amp;&amp; elevator1.state != deceleratingUp</span><br><span class=\"line\">        &amp;&amp; elevator1.state != acceleratingDown</span><br><span class=\"line\">        &amp;&amp; elevator1.state != deceleratingDown) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (elevator1.distance[i] &lt; minDistance</span><br><span class=\"line\">                &amp;&amp; !(i == elevator1.currentFloor</span><br><span class=\"line\">                     &amp;&amp; (elevator1.state == enterOrLeave</span><br><span class=\"line\">                         || elevator1.state == opening</span><br><span class=\"line\">                         || elevator1.state == closing))) &#123;</span><br><span class=\"line\">                minDistance = elevator1.distance[i];</span><br><span class=\"line\">                <span class=\"type\">station_t</span> = i;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        elevator1.station = <span class=\"type\">station_t</span>;</span><br><span class=\"line\">        <span class=\"comment\">//set destination of elevator 1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (elevator1.station &gt; elevator1.currentFloor</span><br><span class=\"line\">            || elevator1.station == elevator1.currentFloor</span><br><span class=\"line\">               &amp;&amp; elevator1.destination &gt; elevator1.currentFloor) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">4</span>; i &gt;= elevator1.station; i--) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (elevator1.callCar[i]</span><br><span class=\"line\">                    || storey[i].callDown</span><br><span class=\"line\">                    || storey[i].callUp) &#123;</span><br><span class=\"line\">                    elevator1.destination = i;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (elevator1.station &lt; elevator1.currentFloor</span><br><span class=\"line\">                   || elevator1.station == elevator1.currentFloor</span><br><span class=\"line\">                      &amp;&amp; elevator1.destination &lt; elevator1.currentFloor) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt;= elevator1.station; i++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (elevator1.callCar[i]</span><br><span class=\"line\">                    || storey[i].callDown</span><br><span class=\"line\">                    || storey[i].callUp) &#123;</span><br><span class=\"line\">                    elevator1.destination = i;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//set station of elevator 2</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (elevator1.state != acceleratingUp</span><br><span class=\"line\">        &amp;&amp; elevator1.state != deceleratingUp</span><br><span class=\"line\">        &amp;&amp; elevator1.state != acceleratingDown</span><br><span class=\"line\">        &amp;&amp; elevator1.state != deceleratingDown) &#123;</span><br><span class=\"line\">        minDistance = <span class=\"number\">100</span>, <span class=\"type\">station_t</span> = elevator2.currentFloor;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (elevator2.distance[i] &lt; minDistance</span><br><span class=\"line\">                &amp;&amp; !(i == elevator2.currentFloor</span><br><span class=\"line\">                     &amp;&amp; (elevator2.state == enterOrLeave</span><br><span class=\"line\">                         || elevator2.state == opening</span><br><span class=\"line\">                         || elevator2.state == closing))</span><br><span class=\"line\">                &amp;&amp; (elevator2.callCar[i]</span><br><span class=\"line\">                    || elevator1.currentFloor &lt;= elevator1.destination</span><br><span class=\"line\">                       &amp;&amp; i != elevator1.destination</span><br><span class=\"line\">                       &amp;&amp; (elevator1.currentFloor &gt; i</span><br><span class=\"line\">                           || i &gt; elevator1.destination</span><br><span class=\"line\">                           || storey[i].callDown)</span><br><span class=\"line\">                    || elevator1.currentFloor &gt; elevator1.destination</span><br><span class=\"line\">                       &amp;&amp; i != elevator1.destination</span><br><span class=\"line\">                       &amp;&amp; (elevator1.currentFloor &lt; i</span><br><span class=\"line\">                           || i &lt; elevator1.destination</span><br><span class=\"line\">                           || storey[i].callUp))) &#123;</span><br><span class=\"line\">                minDistance = elevator2.distance[i];</span><br><span class=\"line\">                <span class=\"type\">station_t</span> = i;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        elevator2.station = <span class=\"type\">station_t</span>;</span><br><span class=\"line\">        <span class=\"comment\">//set destination of elevator 2</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (elevator2.station &gt; elevator2.currentFloor</span><br><span class=\"line\">            || elevator2.station == elevator2.currentFloor</span><br><span class=\"line\">               &amp;&amp; elevator2.destination &gt; elevator2.currentFloor) &#123;</span><br><span class=\"line\">            elevator2.destination = <span class=\"number\">4</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">4</span>; i &gt;= elevator2.station; i--) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (elevator2.callCar[i]</span><br><span class=\"line\">                    || elevator2.station == i</span><br><span class=\"line\">                    || (storey[i].callDown</span><br><span class=\"line\">                        || storey[i].callUp)</span><br><span class=\"line\">                       &amp;&amp; (elevator1.currentFloor &lt;= elevator1.destination</span><br><span class=\"line\">                           &amp;&amp; i != elevator1.destination</span><br><span class=\"line\">                           &amp;&amp; (elevator1.currentFloor &gt; i</span><br><span class=\"line\">                               || i &gt; elevator1.destination</span><br><span class=\"line\">                               || storey[i].callDown)</span><br><span class=\"line\">                           || elevator1.currentFloor &gt; elevator1.destination</span><br><span class=\"line\">                              &amp;&amp; i != elevator1.destination</span><br><span class=\"line\">                              &amp;&amp; (elevator1.currentFloor &lt; i</span><br><span class=\"line\">                                  || i &lt; elevator1.destination</span><br><span class=\"line\">                                  || storey[i].callUp))) &#123;</span><br><span class=\"line\">                    elevator2.destination = i;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (elevator2.station &lt; elevator2.currentFloor</span><br><span class=\"line\">                   || elevator2.station == elevator2.currentFloor</span><br><span class=\"line\">                      &amp;&amp; elevator2.destination &lt; elevator2.currentFloor) &#123;</span><br><span class=\"line\">            elevator2.destination = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt;= elevator2.station; i++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (elevator2.callCar[i]</span><br><span class=\"line\">                    || elevator2.station == i</span><br><span class=\"line\">                    || (storey[i].callDown</span><br><span class=\"line\">                        || storey[i].callUp)</span><br><span class=\"line\">                       &amp;&amp; (elevator1.currentFloor &lt;= elevator1.destination</span><br><span class=\"line\">                           &amp;&amp; (elevator1.currentFloor &gt; i</span><br><span class=\"line\">                               || i &gt; elevator1.destination)</span><br><span class=\"line\">                           || elevator1.currentFloor &gt; elevator1.destination</span><br><span class=\"line\">                              &amp;&amp; (elevator1.currentFloor &lt; i</span><br><span class=\"line\">                                  || i &lt; elevator1.destination))) &#123;</span><br><span class=\"line\">                    elevator2.destination = i;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">System::outputState</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    std::cout &lt;&lt; <span class=\"string\">&quot;\\tCurrent time:\\t&quot;</span> &lt;&lt; currentTime</span><br><span class=\"line\">              &lt;&lt; <span class=\"string\">&quot;\\n\\tElevator1:\\t&quot;</span></span><br><span class=\"line\">              &lt;&lt; <span class=\"string\">&quot;At floor &quot;</span> &lt;&lt; elevator1.currentFloor</span><br><span class=\"line\">              &lt;&lt; <span class=\"string\">&quot;\\tState:\\t&quot;</span> &lt;&lt; elevator1.<span class=\"built_in\">getState</span>() &lt;&lt; <span class=\"string\">&quot;\\n\\t&quot;</span></span><br><span class=\"line\">              &lt;&lt; elevator1.passengers.<span class=\"built_in\">size</span>() &lt;&lt; <span class=\"string\">&quot; student in it.&quot;</span></span><br><span class=\"line\">              &lt;&lt; <span class=\"string\">&quot;\\tAction time:\\t&quot;</span> &lt;&lt; elevator1.actionTime</span><br><span class=\"line\">              &lt;&lt; <span class=\"string\">&quot;\\n\\tStation:\\t&quot;</span> &lt;&lt; elevator1.station</span><br><span class=\"line\">              &lt;&lt; <span class=\"string\">&quot;\\tDestination:\\t&quot;</span> &lt;&lt; elevator1.destination</span><br><span class=\"line\">              &lt;&lt; <span class=\"string\">&quot;\\n\\tElevator2:\\t&quot;</span></span><br><span class=\"line\">              &lt;&lt; <span class=\"string\">&quot;At floor &quot;</span> &lt;&lt; elevator2.currentFloor</span><br><span class=\"line\">              &lt;&lt; <span class=\"string\">&quot;\\tState:\\t&quot;</span> &lt;&lt; elevator2.<span class=\"built_in\">getState</span>() &lt;&lt; <span class=\"string\">&quot;\\n\\t&quot;</span></span><br><span class=\"line\">              &lt;&lt; elevator2.passengers.<span class=\"built_in\">size</span>() &lt;&lt; <span class=\"string\">&quot; student in it.&quot;</span></span><br><span class=\"line\">              &lt;&lt; <span class=\"string\">&quot;\\tAction time:\\t&quot;</span> &lt;&lt; elevator2.actionTime</span><br><span class=\"line\">              &lt;&lt; <span class=\"string\">&quot;\\n\\tStation:\\t&quot;</span> &lt;&lt; elevator2.station</span><br><span class=\"line\">              &lt;&lt; <span class=\"string\">&quot;\\tDestination:\\t&quot;</span> &lt;&lt; elevator2.destination;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">        std::cout &lt;&lt; <span class=\"string\">&quot;\\n\\tStorey&quot;</span> &lt;&lt; i &lt;&lt; <span class=\"string\">&quot;:\\t&quot;</span> &lt;&lt; storey[i].listUp.<span class=\"built_in\">size</span>() &lt;&lt; <span class=\"string\">&quot; student for up\\t&quot;</span></span><br><span class=\"line\">                  &lt;&lt; storey[i].listDown.<span class=\"built_in\">size</span>() &lt;&lt; <span class=\"string\">&quot; student for down&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//debugging used</span></span><br><span class=\"line\"><span class=\"comment\">//    putchar(&#x27;\\n&#x27;);</span></span><br><span class=\"line\"><span class=\"comment\">//    for (int i = 0; i &lt; 5; i++) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//        std::cout &lt;&lt; elevator1.distance[i] &lt;&lt; &quot; &quot;;</span></span><br><span class=\"line\"><span class=\"comment\">//    &#125;</span></span><br><span class=\"line\"><span class=\"comment\">//    for (int i = 0; i &lt; 5; i++) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//        std::cout &lt;&lt; elevator2.distance[i] &lt;&lt; &quot; &quot;;</span></span><br><span class=\"line\"><span class=\"comment\">//    &#125;</span></span><br><span class=\"line\">    std::cout &lt;&lt; <span class=\"string\">&quot;\\n\\n&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">System::createStudent</span><span class=\"params\">(<span class=\"type\">int</span> &amp;i)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\">Student <span class=\"title\">student</span><span class=\"params\">(i++)</span></span>;</span><br><span class=\"line\">    occurTime += student.interTime;</span><br><span class=\"line\">    storey[student.inFloor].<span class=\"built_in\">enQueue</span>(student);</span><br><span class=\"line\"><span class=\"comment\">//    Output the new student&#x27;s information</span></span><br><span class=\"line\">    std::cout &lt;&lt; <span class=\"string\">&quot;\\tstudent &quot;</span> &lt;&lt; student.number &lt;&lt; <span class=\"string\">&quot; appears!\\n&quot;</span></span><br><span class=\"line\">              &lt;&lt; <span class=\"string\">&quot;\\tFrom:\\t&quot;</span> &lt;&lt; student.inFloor</span><br><span class=\"line\">              &lt;&lt; <span class=\"string\">&quot;\\tTo:\\t&quot;</span> &lt;&lt; student.outFloor</span><br><span class=\"line\">              &lt;&lt; <span class=\"string\">&quot;\\n\\tGive up time:\\t&quot;</span> &lt;&lt; student.giveUpTime</span><br><span class=\"line\">              &lt;&lt; <span class=\"string\">&quot;\\tNext student time:&quot;</span> &lt;&lt; student.interTime + currentTime &lt;&lt; <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"main.h\">main.h</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// Created by administrator Guo on 2021/9/28 21:45.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifndef</span> DATASTRUCTUREBHW1_MAIN_H</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> DATASTRUCTUREBHW1_MAIN_H</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;System.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Storey.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Elevator.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> Time;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">extern</span> Storey storey[<span class=\"number\">5</span>];                        <span class=\"comment\">//definition of 5 storeys</span></span><br><span class=\"line\"><span class=\"keyword\">extern</span> System system1;                          <span class=\"comment\">//definition of the event system</span></span><br><span class=\"line\"><span class=\"keyword\">extern</span> Elevator elevator1;                      <span class=\"comment\">//definition of elevator 1</span></span><br><span class=\"line\"><span class=\"keyword\">extern</span> Elevator elevator2;                      <span class=\"comment\">//definition of elevator 1</span></span><br><span class=\"line\"><span class=\"keyword\">extern</span> Time currentTime,occurTime;               <span class=\"comment\">//global time &amp; current time</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">constexpr</span> <span class=\"type\">int</span> <span class=\"title\">MAX_CAPACITY</span><span class=\"params\">(<span class=\"number\">10</span>)</span></span>;                 <span class=\"comment\">//max capacity of an elevator</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">constexpr</span> <span class=\"type\">int</span> <span class=\"title\">UP_TIME</span><span class=\"params\">(<span class=\"number\">51</span>)</span></span>;                      <span class=\"comment\">//time of going up a floor</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">constexpr</span> <span class=\"type\">int</span> <span class=\"title\">DOWN_TIME</span><span class=\"params\">(<span class=\"number\">61</span>)</span></span>;                    <span class=\"comment\">//time of going down a floor</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">constexpr</span> <span class=\"type\">int</span> <span class=\"title\">CLOSE_TIME</span><span class=\"params\">(<span class=\"number\">20</span>)</span></span>;                   <span class=\"comment\">//time of closing door</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">constexpr</span> <span class=\"type\">int</span> <span class=\"title\">OPEN_TIME</span><span class=\"params\">(<span class=\"number\">20</span>)</span></span>;                    <span class=\"comment\">//time of opening door</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">constexpr</span> <span class=\"type\">int</span> <span class=\"title\">ENTER_OR_LEAVE_TIME</span><span class=\"params\">(<span class=\"number\">20</span>)</span></span>;          <span class=\"comment\">//time of the first time door open</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">constexpr</span> <span class=\"type\">int</span> <span class=\"title\">DURATION_TIME</span><span class=\"params\">(<span class=\"number\">1000</span>)</span></span>;              <span class=\"comment\">//time of all the events</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">constexpr</span> <span class=\"type\">int</span> <span class=\"title\">IDLE_TIME</span><span class=\"params\">(<span class=\"number\">300</span>)</span></span>;                   <span class=\"comment\">//if elevator isn&#x27;t used for such time, it&#x27;ll be set idle</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">constexpr</span> <span class=\"type\">int</span> <span class=\"title\">UP_ACCELERATE_TIME</span><span class=\"params\">(<span class=\"number\">15</span>)</span></span>;           <span class=\"comment\">//time of elevator accelerate up</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">constexpr</span> <span class=\"type\">int</span> <span class=\"title\">DOWN_ACCELERATE_TIME</span><span class=\"params\">(<span class=\"number\">15</span>)</span></span>;         <span class=\"comment\">//time of elevator accelerate down</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">constexpr</span> <span class=\"type\">int</span> <span class=\"title\">UP_DECELERATE_TIME</span><span class=\"params\">(<span class=\"number\">14</span>)</span></span>;           <span class=\"comment\">//time of elevator decelerate up</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">constexpr</span> <span class=\"type\">int</span> <span class=\"title\">DOWN_DECELERATE_TIME</span><span class=\"params\">(<span class=\"number\">23</span>)</span></span>;         <span class=\"comment\">//time of elevator decelerate down</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span> <span class=\"comment\">//DATASTRUCTUREBHW1_MAIN_H</span></span></span><br></pre></td></tr></table></figure>\n<h2 id=\"main.cpp\">main.cpp</h2>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;System.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;Storey.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;main.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> currentTime, occurTime;</span><br><span class=\"line\">Storey storey[<span class=\"number\">5</span>] = &#123;<span class=\"built_in\">Storey</span>(<span class=\"number\">0</span>), <span class=\"built_in\">Storey</span>(<span class=\"number\">1</span>), <span class=\"built_in\">Storey</span>(<span class=\"number\">2</span>), <span class=\"built_in\">Storey</span>(<span class=\"number\">3</span>), <span class=\"built_in\">Storey</span>(<span class=\"number\">4</span>)&#125;;</span><br><span class=\"line\">System system1;</span><br><span class=\"line\"><span class=\"function\">Elevator <span class=\"title\">elevator1</span><span class=\"params\">(<span class=\"number\">1</span>)</span></span>;</span><br><span class=\"line\"><span class=\"function\">Elevator <span class=\"title\">elevator2</span><span class=\"params\">(<span class=\"number\">2</span>)</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//it is main function, the main part of the programme</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//make CLion output when debugging</span></span><br><span class=\"line\">    <span class=\"built_in\">setbuf</span>(stdout, <span class=\"literal\">nullptr</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; currentTime &lt;= DURATION_TIME; currentTime++) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//check whether student giving up at each floor</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> &amp;x: storey) &#123;</span><br><span class=\"line\">            x.<span class=\"built_in\">checkGiveUp</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//If it is the time to create another student,then occur one and make one into the system</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (currentTime == occurTime) &#123;</span><br><span class=\"line\">            System::<span class=\"built_in\">createStudent</span>(i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//refresh state of elevator</span></span><br><span class=\"line\">        System::<span class=\"built_in\">callElevator</span>();</span><br><span class=\"line\">        <span class=\"comment\">//if it is time for an action to be taken, take action!</span></span><br><span class=\"line\">        System::<span class=\"built_in\">Controller</span>(elevator1);</span><br><span class=\"line\">        System::<span class=\"built_in\">Controller</span>(elevator2);</span><br><span class=\"line\">        <span class=\"comment\">//output state of system just when it has changed</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (system1.hasChanged) &#123;</span><br><span class=\"line\">            System::<span class=\"built_in\">outputState</span>();</span><br><span class=\"line\">            system1.hasChanged = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"comment\">//System::outputState();</span></span><br><span class=\"line\"><span class=\"comment\">//debugging used</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//it is a good habit</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","categories":["Computer Science"],"tags":["Data Structure"]},{"title":"Simulator","url":"/2021/12/12/Simulator/","content":"<h1 id=\"simulator\">Simulator</h1>\n<p>Experiment Report to ICS LabS.</p>\n<span id=\"more\"></span>\n<h2 id=\"tasks\">Tasks</h2>\n<ol type=\"1\">\n<li>learn how to use Cmake.</li>\n<li>read the code, understand the framework of the program, and train the ability to read the program.</li>\n<li>replace all TO BE DONE in the code with the correct code.</li>\n</ol>\n<h2 id=\"process\">Process</h2>\n<p>I tried use only vim to edit the code, but when the file is too long , efficiency went down. So I use CLion in Windows to edit the code, then use Ubuntu run the programme.</p>\n<p>I read the codes line by line, and complete all TO BE DONE one by one. Because the code is very clear and understandable, there were not many problems in this stage. But most time used in debugging.😂</p>\n<h2 id=\"debugging\">Debugging</h2>\n<p>I will write almost all bugs I met as follows.</p>\n<ol type=\"1\">\n<li>Sign extends function used to be written incorrectly. It should simulate what the machine do.</li>\n<li>I forgot all <code>break</code> in switch. What a stupid error!</li>\n</ol>\n<h2 id=\"gains\">Gains</h2>\n<ol type=\"1\">\n<li>Through this lab, I learned how to process command parameters, and how to set debug mode by TA's marvellous codes.👍</li>\n<li>After finishing the assembler, I understand machine language more deeply, and have known how it executives.</li>\n<li>Actually, I haven't use command to compile and run a single C++ programme. Thanks to lab A and lab S, I learned to do so.</li>\n<li>No pains, no gains!</li>\n</ol>\n","categories":["Computer Science"],"tags":["Computing System"]},{"title":"Solutions to Hard Problems of Mathematical Analysis","url":"/2021/07/17/Solutions-to-Hard-Problems-of-Mathematical-Analysis/","content":"<h1 id=\"中国科学技术大学2019-2020学年数学分析b2测试真题难题集萃\">中国科学技术大学2019-2020学年数学分析(B2)测试真题难题集萃</h1>\n<p>题解来源：5，13，14：叶升宇；11，15：陈景毅；12：刘枭男；9：陈卿（教授）。</p>\n<span id=\"more\"></span>\n<p>由<span class=\"math inline\">\\(\\LaTeX\\)</span>生成的PDF版本链接：<a href=\"https://gsxgoldenlegendary.github.io/files/math01.pdf\">Solutions to Hard Problems of Mathematical Analysis</a></p>\n<h2 id=\"向量场的微商\">向量场的微商</h2>\n<p>1.设<span class=\"math display\">\\[\\boldsymbol{v}=a\\boldsymbol{i}+b\\boldsymbol{j}+c\\boldsymbol{k}\\]</span>是常向量，<span class=\"math display\">\\[\\boldsymbol{r}=x\\boldsymbol{i}+y\\boldsymbol{j}+z\\boldsymbol{k}\\]</span>.求向量场<span class=\"math display\">\\[\\boldsymbol{v}\\times\\boldsymbol{r}\\]</span>的旋度。</p>\n<p>解： 利用向量外积公式<span class=\"math display\">\\[\\nabla\\times(\\boldsymbol{v}\\times\\boldsymbol{r})=-(\\nabla\\cdot\\boldsymbol{v})\\boldsymbol{r}+(\\nabla\\cdot\\boldsymbol{r})\\boldsymbol{v}=(\\nabla\\cdot\\boldsymbol{r})\\boldsymbol{v}=3\\boldsymbol{v}.\\]</span></p>\n<h2 id=\"二重积分\">二重积分</h2>\n<p>2.求积分<span class=\"math display\">\\[\\int_0^{\\frac{\\pi}{6}}dy\\int_y^\\frac{\\pi}{6}\\frac{\\cos x}{x}dx.\\]</span></p>\n<p>解： <span class=\"math display\">\\[\\int_0^{\\frac{\\pi}{6}}dy\\int_y^\\frac{\\pi}{6}\\frac{\\cos x}{x}dx=\\int_0^{\\frac{\\pi}{6}}dx\\int_0^x\\frac{\\cos x}{x}dy=\\int_0^\\frac{\\pi}{6}\\cos xdx=\\frac{1}{2}.\\]</span></p>\n<h2 id=\"二重积分的换元\">二重积分的换元</h2>\n<p>3.设<span class=\"math display\">\\[D=\\{(u.v)|u\\geqslant 0,v\\geqslant 0\\}\\]</span>为无界区域。求<span class=\"math display\">\\[\\iint_D e^{-u^2-v^2-2uv\\cos \\alpha}dudv,  \\]</span>其中<span class=\"math display\">\\[\\alpha \\in (0,\\frac{\\pi}{2})\\]</span>为常数。</p>\n<p>解： 做代换<span class=\"math display\">\\[t=u-v\\cos\\alpha,s=v\\sin \\alpha,\\]</span> 则参数范围<span class=\"math display\">\\[D&#39;=\\{(t,s)|0\\leqslant t,0\\leqslant s\\},\\]</span> 代换的Jacobi行列式<span class=\"math display\">\\[\\frac{\\partial(u,v)}{\\partial(t,s)}=\\frac{1}{\\sin\\alpha}.\\]</span> 原式变为<span class=\"math display\">\\[\\iint_{D^{&#39;}} e^{-s^2-t^2}|\\frac{1}{\\sin\\alpha}|dtds .\\]</span> 利用常用积分<span class=\"math display\">\\[\\int_{0}^{+\\infty} \\int_{0}^{+\\infty} e^{-x^2-y^2}dxdy=\\frac{\\sqrt{\\pi}}{2}, \\]</span> 得原积分为<span class=\"math display\">\\[\\frac{\\sqrt{\\pi}}{2\\sin\\alpha}.\\]</span></p>\n<h2 id=\"数量场在曲面上的积分\">数量场在曲面上的积分</h2>\n<p>4.设曲面<span class=\"math display\">\\[S=\\{(x,y,z)\\in\\mathbb{R}^2|x+y+z=1,x,y,z\\geqslant0\\}.\\]</span>求<span class=\"math display\">\\[\\iint_SxyzdS.\\]</span></p>\n<p>解： 使用<span class=\"math inline\">\\(x,y\\)</span>做参数，则对应的面积元<span class=\"math display\">\\[dS=\\sqrt{1+z_x^{&#39;2}+z_y^{&#39;2}}dxdy=\\sqrt{3}dxdy ,\\]</span> 参数范围<span class=\"math display\">\\[D=\\{(x,y)|x,y\\geqslant 0,x+y\\leqslant 1\\}.\\]</span> 原式变为<span class=\"math display\">\\[\\iint_Dxy(1-x-y)\\sqrt{3}dxdy=\\sqrt{3}\\int_{0}^{1}dx \\int_{0}^{1-x}(xy-x^2y-xy^2)dy=\\sqrt{3}\\int_{0}^{1}(\\frac{x(1-x)^2}{2}-\\frac{x^2(1-x)^2}{2}-\\frac{x(1-x)^3}{3})dx=\\frac{\\sqrt{3}}{120}.\\]</span></p>\n<p>5.求曲面<span class=\"math inline\">\\((x^2+y^2+z^2)^2=2xy(x,y\\geqslant 0)\\)</span>的面积。</p>\n<p>解： 换为球坐标,则参数曲面方程<span class=\"math display\">\\[\\boldsymbol{r}=p\\sin\\theta\\cos\\phi\\boldsymbol{i}+p\\sin\\theta\\sin\\phi\\boldsymbol{j}+p\\cos\\theta\\boldsymbol{k}\\]</span> 其中<span class=\"math display\">\\[p=\\sin\\theta \\sqrt{\\sin 2\\phi},0\\leqslant \\phi\\leqslant \\frac{\\pi}{2},0\\leqslant \\theta \\leqslant\\pi,\\]</span><span class=\"math display\">\\[p_\\theta^{&#39;}=\\cos\\theta\\sqrt{\\sin2\\phi},p_\\phi^{&#39;}=\\frac{\\sin\\theta\\cos2\\phi}{\\sqrt{\\sin2\\phi}}.\\]</span> 记<span class=\"math display\">\\[E=\\boldsymbol{r}_\\theta^{&#39;2}=\\cos^2\\phi(p\\cos\\theta+p_\\theta^{&#39;}\\sin\\theta)^2+\\sin^2\\phi(p\\cos\\theta+p_\\theta^{&#39;}\\sin\\theta)^2+(-p\\sin\\theta+p_\\theta^{&#39;}\\cos\\theta)^2=p^2+p_\\theta^{&#39;2};\\]</span><span class=\"math display\">\\[G=\\boldsymbol{r}_\\phi^{&#39;2}=\\sin^2\\theta(p_\\phi^{&#39;}\\cos\\phi-p\\sin\\phi)^2+\\sin^2\\theta(p_\\phi^{&#39;}\\sin\\phi+p\\cos\\phi)^2+\\cos^2\\theta p_\\phi^{&#39;2}=p^2\\sin^2\\theta+p_\\phi^{&#39;2};\\]</span><span class=\"math display\">\\[F=\\boldsymbol{r}_\\theta^{&#39;}\\cdot\\boldsymbol{r}_\\phi^{&#39;}=\\cos\\phi(p\\cos\\theta+p_\\theta^{&#39;}\\sin\\theta)\\sin\\theta(p_\\phi^{&#39;}\\cos\\phi-p\\sin\\phi)+\\sin\\phi(p\\cos\\theta+p_\\theta^{&#39;}\\sin\\theta)\\sin\\theta(p_\\phi^{&#39;}\\sin\\phi+p\\cos\\phi)+(-p\\sin\\theta+p_\\theta^{&#39;}\\cos\\theta)\\cos\\theta p_\\phi^{&#39;}=p_\\theta^{&#39;}p_\\phi^{&#39;}.\\]</span> 则面积元<span class=\"math display\">\\[dS=|\\boldsymbol{r}_\\theta^{&#39;2}\\times\\boldsymbol{r}_\\phi^{&#39;2}|d\\theta d\\phi=\\sqrt{EG-F^2}d\\theta d\\phi,=\\sqrt{(p^2+p_\\theta^{&#39;2})(p^2\\sin^2\\theta+p_\\phi^{&#39;2})-p_\\theta^{&#39;2}p_\\phi^{&#39;2}}d\\theta d\\phi=\\sqrt{(\\sin^2\\theta \\sin 2\\phi+\\cos^2\\theta\\sin2\\phi)(\\sin^2\\theta \\sin 2\\phi\\sin^2\\theta+\\frac{\\sin^2\\theta\\cos^22\\phi}{\\sin2\\phi})-\\cos^2\\theta\\sin2\\phi\\frac{\\sin^2\\theta\\cos^22\\phi}{\\sin2\\phi}}d\\theta d\\phi=\\sin^2\\theta d\\theta d\\phi.\\]</span> 曲面面积<span class=\"math display\">\\[\\iint_Sds=\\int_0^{\\frac{\\pi}{2}}d\\phi\\int_0^\\pi\\sin^2\\theta d\\theta=\\frac{\\pi^2}{4}.\\]</span></p>\n<h2 id=\"向量场在曲线上的积分\">向量场在曲线上的积分</h2>\n<p>6.设<span class=\"math display\">\\[f\\in C^1(\\mathbb{R}^2),\\]</span>满足<span class=\"math display\">\\[|\\nabla f|^2=(\\frac{\\partial f}{\\partial x})^2+(\\frac{\\partial f}{\\partial y})^2\\equiv 1.\\]</span> （1）证明：<span class=\"math display\">\\[\\forall \\boldsymbol{P},\\boldsymbol{Q} \\in \\mathbb{R}^2,|f(\\boldsymbol{Q})-f(\\boldsymbol{P})|\\leqslant|\\boldsymbol{P}-\\boldsymbol{Q}|;\\]</span> （2）设光滑曲线<span class=\"math inline\">\\(\\boldsymbol{r}(t)=x(t)\\boldsymbol{i}+y(t)\\boldsymbol{j}(t\\in[a,b])\\)</span>满足<span class=\"math display\">\\[\\frac{d\\boldsymbol{r}}{dt}=\\nabla f(\\boldsymbol{r}(t))=\\frac{\\partial f}{\\partial x}(x(t),y(t))\\boldsymbol{i}+\\frac{\\partial f}{\\partial y}(x(t),y(t))\\boldsymbol{j},\\]</span> 证明：<span class=\"math inline\">\\(\\boldsymbol{r}(t)\\)</span>是直线段。</p>\n<p>解： 记<span class=\"math display\">\\[\\boldsymbol{P}=(x_1,y_1),\\boldsymbol{Q}=(x_2,y_2).\\]</span> 由微分中值定理,存在<span class=\"math display\">\\[x&#39;,y&#39;\\]</span>有<span class=\"math display\">\\[|f(\\boldsymbol{Q})-f(\\boldsymbol{P})|=|(x_2-x_1)\\frac{\\partial f}{\\partial x}(x&#39;,y&#39;)+(y_2-y_1)\\frac{\\partial f}{\\partial y}(x&#39;,y&#39;)|\\]</span> 由柯西不等式<span class=\"math display\">\\[\\leqslant \\sqrt{(x_2-x_1)^2+(y_2-y_1)^2}\\sqrt{(\\frac{\\partial f}{\\partial x})^2+(\\frac{\\partial f}{\\partial y})^2}\\]</span> 由已知<span class=\"math display\">\\[=\\sqrt{(x_2-x_1)^2+(y_2-y_1)^2}\\]</span><span class=\"math display\">\\[=|\\boldsymbol{P}-\\boldsymbol{Q}|.\\]</span> 取<span class=\"math display\">\\[\\boldsymbol{P}=\\boldsymbol{r}(a),\\boldsymbol{Q}=\\boldsymbol{r}(b),\\]</span></p>\n<p>则<span class=\"math display\">\\[\\int_r |dr|=\\int_a^b |\\nabla f|dt=\\int_a^b dt=\\int_a^b \\nabla f\\cdot \\nabla fdt=\\int_r \\nabla f\\cdot d\\boldsymbol{r}=\\int_{\\boldsymbol{P}}^{\\boldsymbol{Q}}df=|f(\\boldsymbol{Q})-f(\\boldsymbol{P})|\\leqslant|\\boldsymbol{P}-\\boldsymbol{Q}|.\\]</span> 其中<span class=\"math display\">\\[\\int_r |dr|\\]</span>为<span class=\"math inline\">\\(\\boldsymbol{P},\\boldsymbol{Q}\\)</span>两点间的曲线长度，<span class=\"math inline\">\\(|\\boldsymbol{P}-\\boldsymbol{Q}|\\)</span>为<span class=\"math inline\">\\(\\boldsymbol{P},\\boldsymbol{Q}\\)</span>两点间的直线长度，表明两点间曲线长度不大于直线长度，只能说明该曲线是直线。</p>\n<p>7.设D是平面有界区域，<span class=\"math inline\">\\(L=\\partial D\\)</span>是光滑曲线，<span class=\"math inline\">\\(\\boldsymbol{n}\\)</span>是<span class=\"math inline\">\\(\\partial D\\)</span>的单位外法向量，<span class=\"math inline\">\\(\\boldsymbol{v}\\in C_1(D),\\boldsymbol{v}=P\\boldsymbol{i}+Q\\boldsymbol{j}.\\)</span> 用Green公式证明：<span class=\"math display\">\\[\\int_L(\\boldsymbol{v}\\cdot\\boldsymbol{n})ds=\\iint_D(\\frac{\\partial P}{\\partial x}+\\frac{\\partial Q}{\\partial y})dxdy.\\]</span></p>\n<p>解： 设单位外法向量<span class=\"math display\">\\[\\boldsymbol{n}=\\cos \\alpha \\boldsymbol{i}+\\cos \\beta \\boldsymbol{j},\\]</span> 则逆时针单位切向量<span class=\"math display\">\\[\\boldsymbol{\\tau}=-\\cos\\beta\\boldsymbol{i}+\\cos\\alpha\\boldsymbol{j}.\\]</span> 一方面<span class=\"math display\">\\[\\boldsymbol{\\tau}ds=-\\cos\\beta\\boldsymbol{i}ds+\\cos\\alpha\\boldsymbol{j}ds ,\\]</span> 另一方面<span class=\"math display\">\\[\\boldsymbol{\\tau}ds=\\boldsymbol{i}dx+\\boldsymbol{j}dy\\]</span> 故<span class=\"math display\">\\[dx=-\\cos\\beta ds ,\\,dy=cos\\alpha ds.\\]</span> 回到原式<span class=\"math display\">\\[\\int_L(\\boldsymbol{v}\\cdot\\boldsymbol{n})ds=\\int_L(P\\cos\\alpha ds+Q\\cos\\beta ds)\\]</span> 利用Green公式<span class=\"math display\">\\[=\\int_LPdy-Qdx=\\iint_D(\\frac{\\partial P}{\\partial x}+\\frac{\\partial Q}{\\partial y})dxdy.\\]</span></p>\n<h2 id=\"向量场在曲面上的积分\">向量场在曲面上的积分</h2>\n<p>8.设曲面<span class=\"math display\">\\[S=\\{(x,y,z)|x^2+y^2+z^2=1,z\\geqslant0\\},\\]</span>定向与z轴正向同侧。 设<span class=\"math display\">\\[f=\\frac{1+z}{1+x^2+y^2},g=xy+yz+zx.\\]</span>求积分<span class=\"math display\">\\[\\iint_S(\\nabla f\\times\\nabla g)\\cdot d\\boldsymbol{S}.\\]</span></p>\n<p>解： 取曲面<span class=\"math display\">\\[S&#39;=\\{(x,y,z)|x^2+y^2\\leqslant1,z=0\\},\\]</span> 定向与Z轴反向，则S与S'构成封闭曲面，定向向外。设其围城的区域为V。 由Gauss定理<span class=\"math display\">\\[\\iint_{S+S&#39;}(\\nabla f\\times\\nabla g)\\cdot  d\\boldsymbol{S}=\\iiint_V\\nabla\\cdot(\\nabla f\\times\\nabla g) dV= \\iiint_V(\\nabla f\\cdot\\nabla\\times\\nabla g)-\\nabla g\\cdot\\nabla\\times\\nabla f)\\,dV=0.\\]</span> <span class=\"math display\">\\[\\iint_{S&#39;}(\\nabla f\\times\\nabla g)\\cdot  d\\boldsymbol{S}=\\iint_{S&#39;}(\\frac{-2x}{(1+x^2+y^2)^2},\\frac{-2y}{(1+x^2+y^2)^2},\\frac{1}{1+x^2+y^2})\\times(y,x,x+y)\\cdot d\\boldsymbol{S}=\\iint_{S&#39;}\\frac{2y^2-2x^2}{(1+x^2+y^2)^2} dx dy=\\int_0^{2\\pi}-\\cos 2\\theta d\\theta\\int_0^1\\frac{r^2}{(1+r^2)^2} dr^2=0.\\]</span> 故<span class=\"math display\">\\[\\iint_S(\\nabla f\\times\\nabla g)\\cdot  d\\boldsymbol{S}=(\\iint_{S+S&#39;}-\\iint_{S&#39;})(\\nabla f\\times\\nabla g)\\cdot d\\boldsymbol{S}=0.\\]</span></p>\n<p>9.设<span class=\"math inline\">\\(\\Omega\\)</span>是<span class=\"math inline\">\\(\\mathbb{R}^3\\)</span>的有界区域，<span class=\"math inline\">\\(\\partial \\Omega\\)</span>是光滑曲面。</p>\n<p>（1）设<span class=\"math display\">\\[f,g\\in C^2(\\overline{\\Omega}),\\]</span>满足</p>\n<p><span class=\"math display\">\\[\\Delta f=\\Delta g,f|_{\\partial \\Omega} =g|_{\\partial \\Omega}\\]</span> 证明：<span class=\"math display\">\\[f=g.\\]</span> （2）设<span class=\"math inline\">\\(\\boldsymbol{v}_1,\\boldsymbol{v}_2\\)</span>是定义在<span class=\"math inline\">\\(\\overline{\\Omega}\\)</span>上的光滑向量场（二阶偏导数连续），满足 <span class=\"math display\">\\[\\nabla\\times\\boldsymbol{v}_1=\\nabla\\times\\boldsymbol{v}_2\\]</span> <span class=\"math display\">\\[\\nabla\\cdot\\boldsymbol{v}_1=\\nabla\\cdot\\boldsymbol{v}_2\\]</span> <span class=\"math display\">\\[\\boldsymbol{v}_1|_{\\partial\\Omega}=\\boldsymbol{v}_2|_{\\partial\\Omega}\\]</span> 证明： <span class=\"math display\">\\[\\boldsymbol{v}_1=\\boldsymbol{v}_2\\]</span></p>\n<p>解： 记<span class=\"math display\">\\[h=f-g,\\]</span> 则 <span class=\"math display\">\\[\\Delta h=0,h|_{\\partial \\Omega}=0,\\]</span> 要证<span class=\"math display\">\\[h=0.\\]</span> 利用Gauss定理 <span class=\"math display\">\\[0=\\iint_{\\partial\\Omega}h\\nabla h\\cdot\\,d\\boldsymbol{S} =\\iiint_\\Omega\\nabla\\cdot(h\\nabla h)\\,dV=  \\iiint_\\Omega((\\nabla h)^2+h\\Delta h)\\,dV=\\iiint_\\Omega(\\nabla h)^2\\,dV.\\]</span> 故<span class=\"math display\">\\[\\nabla h=\\boldsymbol{0}.\\]</span> 这样<span class=\"math inline\">\\(h\\)</span>为常数，又 <span class=\"math display\">\\[h|_{\\partial D}=0\\]</span></p>\n<p>得<span class=\"math inline\">\\(h=0\\)</span>。 设<span class=\"math display\">\\[\\boldsymbol{u}=\\boldsymbol{v}_1-\\boldsymbol{v}_2=(P,Q,R),\\]</span> 则</p>\n<p><span class=\"math display\">\\[\\nabla\\times\\boldsymbol{u}=\\boldsymbol{0},\\nabla\\cdot\\boldsymbol{u}=0,\\boldsymbol{u}|_{\\partial \\Omega}=0.\\]</span></p>\n<p>即<span class=\"math display\">\\[\\frac{\\partial Q}{\\partial z}=\\frac{\\partial R}{\\partial y},\\frac{\\partial R}{\\partial x}=\\frac{\\partial P}{\\partial z},\\frac{\\partial P}{\\partial y}=\\frac{\\partial Q}{\\partial x},\\frac{\\partial P}{\\partial x}+\\frac{\\partial Q}{\\partial y}+\\frac{\\partial R}{\\partial z}=0.\\]</span> 求导得<span class=\"math display\">\\[\\frac{\\partial^2 R}{\\partial xz}=\\frac{\\partial^2 P}{\\partial z^2},\\frac{\\partial^2 P}{\\partial y^2}=\\frac{\\partial^2 Q}{\\partial xy},\\frac{\\partial^2 P}{\\partial x^2}+\\frac{\\partial^2 Q}{\\partial xy}+\\frac{\\partial^2 R}{\\partial xz}=0.\\]</span> 得到<span class=\"math display\">\\[\\Delta P=0.\\]</span> 由（1）知<span class=\"math display\">\\[P=0.\\]</span> 同理<span class=\"math display\">\\[Q=0,R=0,\\]</span> 即<span class=\"math display\">\\[\\boldsymbol{u}=(0,0,0)=\\boldsymbol{0}.\\]</span></p>\n<h2 id=\"函数的fourier级数\">函数的Fourier级数</h2>\n<p>10.求函数<span class=\"math display\">\\[y=|x|,x\\in[-\\pi,\\pi]\\]</span>的Fourier级数。</p>\n<p>解： <span class=\"math display\">\\[a_0=\\frac{2}{\\pi}\\int_0^{\\pi}xdx=\\pi,\\]</span><span class=\"math display\">\\[a_n=\\frac{2}{\\pi}\\int_0^{\\pi}x\\cos nxdx=\\frac{\\cos n\\pi-1}{n^2\\pi}.\\]</span><span class=\"math display\">\\[y\\sim \\frac{\\pi}{2}+\\frac{2}{\\pi}\\sum_{n = 0}^{\\infty}\\frac{(\\cos n\\pi-1)\\cos nx}{n^2}=\\frac{\\pi}{2}-\\frac{4}{\\pi}\\sum_{n=1}^\\infty \\frac{\\cos ((2n+1)x)}{(2n+1)^2},x\\in[-\\pi,\\pi] \\]</span></p>\n<p>11.求和：<span class=\"math display\">\\[\\frac{4}{\\pi}\\sum_{n=0}^\\infty\\frac{\\sin ((2n+1)x)}{(2n+1)^3},x\\in[-\\pi,\\pi]\\]</span></p>\n<p>解： 因为<span class=\"math inline\">\\(f(x)\\)</span>在<span class=\"math inline\">\\([-\\pi,\\pi]\\)</span>上连续且<span class=\"math inline\">\\(f(-\\pi)=f(\\pi)\\)</span>，故由Dirichlet定理，<span class=\"math display\">\\[\\frac{\\pi}{2}+\\frac{4}{\\pi}\\sum_{n=1}^\\infty \\frac{\\cos ((2n+1)x)}{(2n+1)^2}\\]</span>在<span class=\"math inline\">\\([-\\pi,\\pi]\\)</span>上一致收敛， 且有<span class=\"math display\">\\[\\frac{\\pi}{2}-\\frac{4}{\\pi}\\sum_{n=1}^\\infty \\frac{\\cos ((2n+1)x)}{(2n+1)^2}=x.\\]</span> 在<span class=\"math inline\">\\([0,\\pi)\\)</span>上两边积分<span class=\"math display\">\\[\\frac{\\pi}{2}x-\\frac{4}{\\pi}\\sum_{n=1}^\\infty \\frac{\\sin ((2n+1)x)}{(2n+1)^3}=\\frac{x^2}{2}+C.\\]</span> 取<span class=\"math inline\">\\(x=0\\)</span>得<span class=\"math inline\">\\(C=0\\)</span>。 由原式是奇函数，故</p>\n<p><span class=\"math display\">\\[\\frac{4}{\\pi}\\sum_{n=0}^\\infty\\frac{\\sin ((2n+1)x)}{(2n+1)^3}=\\begin{aligned}\\frac{\\pi}{2}-\\frac{x^2}{2},x\\in[-\\pi,0];\\frac{\\pi}{2}+\\frac{x^2}{2}.\\in(0,-\\pi].\\end{aligned}\\]</span></p>\n<p>12.设<span class=\"math inline\">\\(\\{b_n\\}\\)</span> 是单调下降且非负数列，且级数 <span class=\"math display\">\\[\\sum_{n=1}^\\infty b_n\\sin nx\\]</span>在<span class=\"math inline\">\\([-\\pi,\\pi]\\)</span>一致收敛。证明：<span class=\"math display\">\\[\\lim_{n\\to \\infty}nb_n=0.\\]</span></p>\n<p>解： 由Cauchy收敛准则，对<span class=\"math inline\">\\(\\forall \\epsilon&gt;0,\\exists N,\\)</span>当n，m&gt;N时（不妨设n&gt;m），对<span class=\"math inline\">\\(\\forall x\\)</span>, 总有<span class=\"math display\">\\[|b_m\\sin mx+\\cdots +b_n\\sin nx|&lt;\\epsilon.\\]</span> 取<span class=\"math inline\">\\(x=\\frac{\\pi}{4m},n=2m-1\\)</span>, 则利用<span class=\"math inline\">\\(b_n\\)</span>的单调递减性有<span class=\"math display\">\\[mb_{2m}\\sin \\frac{\\pi}{4}&lt;b_m \\sin \\frac{\\pi}{4}+\\cdots +b_{2m-1}\\sin \\frac{2m-1}{4m}\\pi&lt;\\epsilon.\\]</span> 得到对<span class=\"math inline\">\\(\\forall \\epsilon&gt;0\\)</span>，都存在N使得对<span class=\"math inline\">\\(\\forall 2m&gt;2N\\)</span>,<span class=\"math inline\">\\(2mb_{2m}&lt;\\frac{\\epsilon}{\\sqrt{2}}\\)</span>， 即<span class=\"math display\">\\[\\lim_{n\\to \\infty}nb_n=0.\\]</span></p>\n<h2 id=\"含参变量的反常积分\">含参变量的反常积分</h2>\n<p>13.设<span class=\"math display\">\\[F(t)=\\int_0^{+\\infty}\\frac{\\sin tx}{1+x^2}\\,dx.\\]</span>求证： （1）<span class=\"math inline\">\\(F(t)\\)</span>在<span class=\"math inline\">\\((0,+\\infty)\\)</span>上连续； （2）<span class=\"math inline\">\\(F(t)\\)</span>在<span class=\"math inline\">\\((0,+\\infty)\\)</span>上可导； （3）<span class=\"math inline\">\\(F(t)\\)</span>在<span class=\"math inline\">\\((0,+\\infty)\\)</span>上二阶可导且满足方程<span class=\"math inline\">\\(F^{&#39;&#39;}(t)-F(t)=-\\frac{1}{t}\\)</span>。</p>\n<p>解： 因为<span class=\"math display\">\\[|\\int_0^{+\\infty}\\frac{\\sin tx}{1+x^2}dx|&lt;\\int_0^{+\\infty}\\frac{1}{1+x^2}dx=\\frac{\\pi}{2},\\]</span> 由Weierstrass判别法知<span class=\"math display\">\\[\\int_0^{+\\infty}\\frac{\\sin tx}{1+x^2}dx\\]</span>关于t一致收敛，故<span class=\"math inline\">\\(F(t)\\)</span>连续。 对于<span class=\"math display\">\\[\\int_0^{+\\infty}\\frac{x\\cos tx}{1+x^2}dx,\\]</span><span class=\"math inline\">\\(x=0\\)</span>不是瑕点，所以只需考虑<span class=\"math display\">\\[\\int_1^{+\\infty}\\frac{x\\cos tx}{1+x^2}dx\\]</span>关于t在t&gt;0上的一致收敛性即可。 由于<span class=\"math display\">\\[|\\int_0^{+\\infty}\\cos txdx|&lt;\\frac{2}{t}\\leqslant2,\\]</span> 对每个固定的t，<span class=\"math display\">\\[\\frac{x}{1+x^2}\\]</span>是x的单调函数，且关于t一致趋于0，由Dirichlet判别法知<span class=\"math display\">\\[\\int_1^{+\\infty}\\frac{x\\cos tx}{1+x^2}dx\\]</span>一致收敛。 又<span class=\"math display\">\\[\\int_0^{+\\infty}\\frac{\\sin tx}{1+x^2}dx\\]</span>收敛，<span class=\"math display\">\\[\\frac{\\sin tx}{1+x^2},\\frac{x\\cos tx}{1+x^2}\\]</span>在<span class=\"math inline\">\\((0,+\\infty)\\times(0,+\\infty)\\)</span>上连续，所以<span class=\"math inline\">\\(F(t)\\)</span>可导，且有<span class=\"math display\">\\[F^{&#39;}(t)=\\int_0^{+\\infty}\\frac{x\\cos tx}{1+x^2}dx=\\frac{1}{t}\\int_0^{+\\infty}\\frac{x}{1+x^2}d(\\sin tx)=\\frac{1}{t}\\frac{x\\sin tx}{1+x^2}|_0^{+\\infty}-\\frac{1}{t}\\int_0^{+\\infty}\\sin txd(\\frac{x}{1+x^2})=\\frac{1}{t}\\int_0^{+\\infty}\\frac{x^2-1}{(1+x^2)^2}\\sin txdx=\\frac{F(t)}{t}-\\frac{2}{t}\\int_0^{+\\infty}\\frac{\\sin tx}{(1+x^2)^2}dx.\\]</span> 即<span class=\"math display\">\\[tF^{&#39;}(t)=F(t)-2\\int_0^{+\\infty}\\frac{\\sin tx}{(1+x^2)^2}dx,\\]</span> 由于<span class=\"math display\">\\[|\\int_0^{+\\infty}\\sin tx\\,dx|&lt;\\frac{2}{t},\\]</span><span class=\"math display\">\\[\\frac{1}{(1+x^2)^2}\\]</span>单调趋于0，由Dirichlet判别法知<span class=\"math display\">\\[\\int_1^{+\\infty}\\frac{\\sin tx}{(1+x^2)^2}dx\\]</span>收敛。 对于<span class=\"math display\">\\[\\int_0^{+\\infty}\\frac{x\\cos tx}{(1+x^2)^2}dx,\\]</span><span class=\"math inline\">\\(x=0\\)</span>不是瑕点，所以只需考虑<span class=\"math display\">\\[\\int_1^{+\\infty}\\frac{x\\cos tx}{(1+x^2)^2}dx\\]</span>关于t在<span class=\"math inline\">\\(t&gt;0\\)</span>上的一致收敛性即可。 由于<span class=\"math display\">\\[|\\int_0^{+\\infty}\\cos tx\\,dx|&lt;\\frac{2}{t}\\leqslant2,\\]</span>对每个固定的t，<span class=\"math display\">\\[\\frac{x}{(1+x^2)^2}\\]</span>是x的单调函数，且关于t一致趋于0，由Dirichlet判别法知<span class=\"math display\">\\[\\int_1^{+\\infty}\\frac{x\\cos tx}{(1+x^2)^2}dx\\]</span>一致收敛。 又<span class=\"math display\">\\[\\frac{\\sin tx}{(1+x^2)^2},\\frac{x\\cos tx}{(1+x^2)^2}\\]</span>在<span class=\"math inline\">\\((0,+\\infty)\\times(0,+\\infty)\\)</span>上连续，所以<span class=\"math inline\">\\(F(t)\\)</span>可导。 两边求导得<span class=\"math display\">\\[tF^{&#39;&#39;}(t)+F^{&#39;}(t)=F^{&#39;}(t)-2\\int_0^{+\\infty}\\frac{x\\cos tx}{(1+x^2)^2}dx=F^{&#39;}(t)+\\int_0^{+\\infty}\\cos txd(\\frac{1}{1+x^2})\\]</span><span class=\"math display\">\\[=F^{&#39;}(t)+\\cos tx\\frac{1}{1+x^2}|_0^{+\\infty}+t\\int_0^{+\\infty}\\frac{\\sin tx}{1+x^2}\\,dx=-1+tF(t).\\]</span>即<span class=\"math display\">\\[tF^{&#39;&#39;}(t)=-1+tF(t),\\]</span>得<span class=\"math display\">\\[F^{&#39;&#39;}(t)-F(t)=-\\frac{1}{t}.\\]</span></p>\n<p>14.设<span class=\"math inline\">\\(|\\alpha|\\neq 1\\)</span>，证明积分<span class=\"math display\">\\[\\int_0^{+\\infty}\\frac{\\sin x\\sin \\alpha x}{x}dx\\]</span>收敛，并求其值。</p>\n<p>解： 由于<span class=\"math inline\">\\(x=0\\)</span>是可去瑕点，故只需将原积分视为无穷积分。 注意到<span class=\"math display\">\\[|\\int_a^b\\sin x\\sin \\alpha x| dx=\\frac{1}{2}|\\int_a^b\\cos (1-\\alpha)x-\\cos (1+\\alpha)x|\\leqslant|\\frac{1}{1-\\alpha}|+|\\frac{1}{1+\\alpha}|,\\]</span> 又<span class=\"math inline\">\\(\\frac{1}{x}\\)</span>单调趋于0，由Dirichlet判别法知原积分收敛。 引入积分因子，并记<span class=\"math display\">\\[I(\\beta)=\\int_0^{+\\infty}e^{-\\beta x}\\frac{\\sin x\\sin \\alpha x}{x}dx.\\]</span> 在<span class=\"math inline\">\\(\\beta&gt;\\beta_0&gt;0\\)</span>时，<span class=\"math display\">\\[|I(\\beta)|&lt;|\\int_0^{+\\infty}e^{-\\beta x}{x}dx |,\\]</span> 而<span class=\"math display\">\\[\\int_a^b e^{-\\beta x}dx \\]</span>一致有界。 对固定的<span class=\"math inline\">\\(\\beta\\)</span>, <span class=\"math display\">\\[\\frac{1}{x} \\]</span>单调一致趋于0。 由Dirlichlet判别法知<span class=\"math display\">\\[\\int_0^{+\\infty}e^{-\\beta x}{x}dx\\]</span>一致收敛。 由比较判别法知<span class=\"math inline\">\\(I(\\beta)\\)</span>收敛。 由于<span class=\"math display\">\\[|\\int_0^{+\\infty}-e^{-\\beta x}\\sin x\\sin \\alpha x\\,dx|&lt;\\int_0^{+\\infty}e^{-\\beta x}dx =1,\\]</span> 故由比较判别法知<span class=\"math display\">\\[\\int_0^{+\\infty}-e^{-\\beta x}\\sin x\\sin \\alpha xdx\\]</span>一致收敛。 又由<span class=\"math display\">\\[e^{-\\beta x}\\frac{\\sin x\\sin \\alpha x}{x},-e^{-\\beta x}\\sin x\\sin \\alpha x\\]</span> 在<span class=\"math inline\">\\((0,+\\infty)\\times(\\beta_0,+\\infty)\\)</span>上连续， 故<span class=\"math inline\">\\(I(\\beta)\\)</span>可导，且有<span class=\"math display\">\\[I^{&#39;}(\\beta)=\\int_0^{+\\infty}-e^{-\\beta x}\\sin x\\sin \\alpha xdx=-\\frac{1}{2}\\int_0^{+\\infty}e^{-\\beta x}(\\cos(1-\\alpha )x-\\cos(1+\\alpha)x)dx=-\\frac{1}{2}\\frac{\\beta}{\\beta^2+(\\alpha-1)^2}+\\frac{1}{2}\\frac{\\beta}{\\beta^2+(\\alpha+1)^2}.\\]</span> 积分得<span class=\"math display\">\\[I(\\beta)=\\frac{1}{4}\\ln \\frac{(\\alpha +1)^2+\\beta^2}{(\\alpha -1)^2+\\beta^2}+C.\\]</span>当<span class=\"math inline\">\\(\\beta\\to\\infty\\)</span>时，<span class=\"math inline\">\\(I(\\beta)\\to C\\)</span>。 另一方面由<span class=\"math display\">\\[\\int_0^{+\\infty}e^{-\\beta x}\\frac{\\sin x\\sin \\alpha x}{x}dx\\]</span>的连续性知<span class=\"math inline\">\\(I(\\beta)\\to0,\\)</span> 故<span class=\"math inline\">\\(C=0\\)</span>。 这样<span class=\"math display\">\\[\\int_0^{+\\infty}\\frac{\\sin x\\sin \\alpha x}{x}dx=I(\\beta)|_{\\beta=0}=\\frac{1}{2}\\ln \\frac{|\\alpha+1|}{|\\alpha-1|}.\\]</span></p>\n<h2 id=\"euler积分\">Euler积分</h2>\n<p>15.计算无穷积分<span class=\"math display\">\\[I=\\int_1^{+\\infty}t^2e^{t(2-t)}dt.\\]</span></p>\n<p>解： <span class=\"math display\">\\[I=\\int_1^{+\\infty}t^2e^{t(2-t)}dt=\\int_0^{+\\infty}(1+s)^2e^{1-s^2}ds=e\\int_0^{+\\infty}e^{-s^2}ds+e\\int_0^{+\\infty}e^{-s^2}ds^2+\\frac{e}{2}\\Gamma(\\frac{1}{2})=e+\\frac{3\\sqrt{\\pi}e}{4}.\\]</span></p>\n","categories":["Mathematics"],"tags":["Mathematical Analysis"]},{"title":"Soduko by Java","url":"/2021/05/21/Soduko-by-Java/","content":"<h1 id=\"实现结果\">实现结果</h1>\n<figure>\n<img src=\"https://img-blog.csdnimg.cn/2021061314460359.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MjA3NTIxOQ==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\" /><figcaption>在这里插入图片描述</figcaption>\n</figure>\n<span id=\"more\"></span>\n<h1 id=\"功能介绍\">功能介绍</h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Welcome to my sudoku world!</span><br><span class=\"line\">usage:</span><br><span class=\"line\">1.Enter <span class=\"string\">&quot;exit&quot;</span> or press <span class=\"string\">&quot;Exit&quot;</span> to quit programme <span class=\"keyword\">in</span> 5 minutes.</span><br><span class=\"line\">2.Enter <span class=\"string\">&quot;print&quot;</span> or press <span class=\"string\">&quot;Print&quot;</span> to <span class=\"built_in\">print</span> current sudoku state. 0 filled <span class=\"keyword\">for</span> vacancy. </span><br><span class=\"line\">3.press <span class=\"string\">&quot;Input&quot;</span> to input a soduku. Cement format shown <span class=\"keyword\">then</span>.</span><br><span class=\"line\">4.Enter or press <span class=\"string\">&quot;generate&quot;</span> to generate a sudoku <span class=\"built_in\">which</span> has 17 non-zero at least numbers at random.</span><br><span class=\"line\">5.Enter <span class=\"string\">&quot;DFS&quot;</span> or press <span class=\"string\">&quot;Solve(DFS)&quot;</span> to solve surrent sudoku by depth-first search method.</span><br><span class=\"line\">6.Enter <span class=\"string\">&quot;IDDFS&quot;</span> or press <span class=\"string\">&quot;Solve(IDDFS)&quot;</span> to solve surrent sudoku by iterative deepening depth-first search method.</span><br><span class=\"line\">7.Enter <span class=\"string\">&quot;A*&quot;</span> or press <span class=\"string\">&quot;Solve(A*)&quot;</span> to solve surrent sudoku by heuristically search method.</span><br><span class=\"line\">8.Enter <span class=\"string\">&quot;put x y z&quot;</span> or choose number by mouse to put z into x row y column.Array counted from 0. </span><br><span class=\"line\">9.Enter <span class=\"string\">&quot;hint&quot;</span> or press <span class=\"string\">&quot;Hint&quot;</span> to get a hint cell.</span><br><span class=\"line\">10.Press <span class=\"string\">&quot;Save&quot;</span> to save current sudoku. Operation following shown <span class=\"keyword\">then</span>.</span><br><span class=\"line\">11.Enter <span class=\"string\">&quot;show&quot;</span> or press <span class=\"string\">&quot;Show&quot;</span> to view saved game. Operation following shown <span class=\"keyword\">then</span>.</span><br><span class=\"line\">12.Enter <span class=\"string\">&quot;usage&quot;</span> or press <span class=\"string\">&quot;Usage&quot;</span> to get usage.</span><br><span class=\"line\">13.Enter <span class=\"string\">&quot;BT&quot;</span> or press <span class=\"string\">&quot;BT&quot;</span> to solve surrent sudoku by back-tracking method.</span><br><span class=\"line\"></span><br><span class=\"line\">Error list:</span><br><span class=\"line\">Error1:syntax error</span><br><span class=\"line\">Error2:data range exceed</span><br><span class=\"line\">Error3:illegal location</span><br><span class=\"line\">Error4:illegal, the line x column y has the same number</span><br><span class=\"line\">Error5:there is already a number <span class=\"keyword\">in</span> this position</span><br><span class=\"line\">Error6:No Answer</span><br><span class=\"line\">Error7:file existed</span><br><span class=\"line\"></span><br><span class=\"line\">Have fun!</span><br></pre></td></tr></table></figure>\n<h1 id=\"组织架构\">组织架构</h1>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudoku</span><br><span class=\"line\">\t.vscode</span><br><span class=\"line\">\t\tsettings.json</span><br><span class=\"line\">\tlib\t\t\t\t\t//javafx 11</span><br><span class=\"line\">\t\tjavafx-swt.jar</span><br><span class=\"line\">\t\tjavafx.base.jar</span><br><span class=\"line\">\t\tjavafx.controls.jar</span><br><span class=\"line\">\t\tjavafx.fxml.jar</span><br><span class=\"line\">\t\tjavafx.graphics.jar</span><br><span class=\"line\">\t\tjavafx.properties</span><br><span class=\"line\">\t\tjavafx.swing.jar</span><br><span class=\"line\">\t\tjavafx.web.jar</span><br><span class=\"line\">\t\tsrc.zip</span><br><span class=\"line\">\tsrc</span><br><span class=\"line\">\t\tbackEnd</span><br><span class=\"line\">\t\t\tdata</span><br><span class=\"line\">\t\t\t\tcache.txt</span><br><span class=\"line\">\t\t\t\tData.java</span><br><span class=\"line\">\t\t\t\tusage.txt</span><br><span class=\"line\">\t\t\tfuntion</span><br><span class=\"line\">\t\t\t\tFindAll.java</span><br><span class=\"line\">\t\t\t\tGenerate.java</span><br><span class=\"line\">\t\t\t\tHint.java</span><br><span class=\"line\">\t\t\t\tInput.java</span><br><span class=\"line\">\t\t\t\tIsOK.java</span><br><span class=\"line\">\t\t\t\tPrint.java</span><br><span class=\"line\">\t\t\t\tPut.java</span><br><span class=\"line\">\t\t\t\tSave.java</span><br><span class=\"line\">\t\t\t\tShow.java</span><br><span class=\"line\">\t\t\t\tSolve.java</span><br><span class=\"line\">\t\tforeEnd</span><br><span class=\"line\">\t\t\tframe</span><br><span class=\"line\">\t\t\t\tFramework.java</span><br><span class=\"line\">\t\t\t\tGameField.java</span><br><span class=\"line\">\t\t\t\tMyTHread.java</span><br><span class=\"line\">\t\t\t\tSelectNumFrame.java</span><br><span class=\"line\">\t\t\t\tSudokuCell.java</span><br><span class=\"line\">\t\t\t\tSuperTextArea.java</span><br><span class=\"line\">\t\t\t\tTerminal.java</span><br><span class=\"line\">\t\t\tmenu</span><br><span class=\"line\">\t\t\t\tMenuExit.java</span><br><span class=\"line\">\t\t\t\tMenuFindAll.java</span><br><span class=\"line\">\t\t\t\tMenuGenerate.java</span><br><span class=\"line\">\t\t\t\tMenuHint.java</span><br><span class=\"line\">\t\t\t\tMenuInput.java</span><br><span class=\"line\">\t\t\t\tMenuPrint.java</span><br><span class=\"line\">\t\t\t\tMenuPut.java</span><br><span class=\"line\">\t\t\t\tMenuSave.java</span><br><span class=\"line\">\t\t\t\tMenuShow.java</span><br><span class=\"line\">\t\t\t\tMenuSolve.java</span><br><span class=\"line\">\t\t\t\tMenuSolve2.java</span><br><span class=\"line\">\t\t\t\tMenuSolve3.java</span><br><span class=\"line\">\t\t\t\tMenuSolve4.java</span><br><span class=\"line\">\t\t\t\tMenuUsage.java</span><br><span class=\"line\">\t\tmain</span><br><span class=\"line\">\t\t\tMain.java</span><br></pre></td></tr></table></figure>\n<h1 id=\"实验报告\">实验报告</h1>\n<p>移动端点击链接下载查看；</p>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/computer02.pdf\">Diagonal Sudoku Programme</a></p>\n<p>PC端支持在线预览。</p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/computer02.pdf\" data-height=\"600px\"></div>\n<h1 id=\"具体代码\">具体代码</h1>\n<h2 id=\"backend\">BackEnd</h2>\n<h3 id=\"data\">Data</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> backEnd.data;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Data</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span>[][] cells = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[<span class=\"number\">9</span>][<span class=\"number\">9</span>];</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">boolean</span>[][] isPut = <span class=\"keyword\">new</span> <span class=\"title class_\">boolean</span>[<span class=\"number\">9</span>][<span class=\"number\">9</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"findall\">FindAll</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> backEnd.function;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> backEnd.data.Data;</span><br><span class=\"line\"><span class=\"keyword\">import</span> foreEnd.frame.Framework;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">FindAll</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">int</span> num;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">boolean</span>[][] isPut;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SuperThread</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Thread</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span>[][] tempArr;</span><br><span class=\"line\">        <span class=\"type\">int</span> m, n;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"title function_\">SuperThread</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> y, <span class=\"type\">int</span>[][] upper)</span> &#123;</span><br><span class=\"line\">            m = x;</span><br><span class=\"line\">            n = y;</span><br><span class=\"line\">            tempArr = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[<span class=\"number\">9</span>][<span class=\"number\">9</span>];</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">9</span>; i++)</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; <span class=\"number\">9</span>; j++)</span><br><span class=\"line\">                    tempArr[i][j] = upper[i][j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">temp</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"number\">9</span> == m &amp;&amp; <span class=\"number\">0</span> == n) &#123;</span><br><span class=\"line\">                num++;</span><br><span class=\"line\">                <span class=\"type\">String</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>();</span><br><span class=\"line\">                str += <span class=\"string\">&quot;The&quot;</span> + num + <span class=\"string\">&quot;solution\\n&quot;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">9</span>; i++) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; <span class=\"number\">9</span>; j++)</span><br><span class=\"line\">                        str += tempArr[i][j] + <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">                    str += <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                Framework.textArea.append(str);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"number\">0</span> &lt;= m &amp;&amp; m &lt; <span class=\"number\">9</span> &amp;&amp; <span class=\"number\">0</span> &lt;= n &amp;&amp; n &lt; <span class=\"number\">9</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (!isPut[m][n]) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (temp = tempArr[m][n] + <span class=\"number\">1</span>; temp &lt;= <span class=\"number\">9</span>; temp++) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (isOK(m, n, temp, tempArr)) &#123;</span><br><span class=\"line\">                            tempArr[m][n] = temp;</span><br><span class=\"line\">                            <span class=\"keyword\">if</span> (<span class=\"number\">8</span> == n)</span><br><span class=\"line\">                                <span class=\"keyword\">new</span> <span class=\"title class_\">SuperThread</span>(m + <span class=\"number\">1</span>, <span class=\"number\">0</span>, tempArr).start();</span><br><span class=\"line\">                            <span class=\"keyword\">else</span></span><br><span class=\"line\">                                <span class=\"keyword\">new</span> <span class=\"title class_\">SuperThread</span>(m, n + <span class=\"number\">1</span>, tempArr).start();</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (; m &lt; <span class=\"number\">9</span> &amp;&amp; isPut[m][n];)</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (<span class=\"number\">8</span> == n) &#123;</span><br><span class=\"line\">                            m++;</span><br><span class=\"line\">                            n = <span class=\"number\">0</span>;</span><br><span class=\"line\">                        &#125; <span class=\"keyword\">else</span></span><br><span class=\"line\">                            n++;</span><br><span class=\"line\">                    <span class=\"keyword\">new</span> <span class=\"title class_\">SuperThread</span>(m, n, tempArr).start();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">findall</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        num = <span class=\"number\">0</span>;</span><br><span class=\"line\">        isPut = <span class=\"keyword\">new</span> <span class=\"title class_\">boolean</span>[<span class=\"number\">9</span>][<span class=\"number\">9</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">9</span>; i++)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; <span class=\"number\">9</span>; j++)</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (Data.cells[i][j] != <span class=\"number\">0</span>)</span><br><span class=\"line\">                    isPut[i][j] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">SuperThread</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, Data.cells).start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isOK</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> y, <span class=\"type\">int</span> value, <span class=\"type\">int</span>[][] sodu)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"number\">0</span> == value)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">9</span>; i++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (i != x &amp;&amp; value == sodu[i][y])</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (i != y &amp;&amp; value == sodu[x][i])</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> x - x % <span class=\"number\">3</span>; i &lt;= x + <span class=\"number\">2</span> - x % <span class=\"number\">3</span>; i++)</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> y - y % <span class=\"number\">3</span>; j &lt;= y + <span class=\"number\">2</span> - y % <span class=\"number\">3</span>; j++)</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!(i == x &amp;&amp; j == y) &amp;&amp; value == sodu[i][j])</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (x == y)</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">9</span>; i++)</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (i != x &amp;&amp; value == sodu[i][i])</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (x + y == <span class=\"number\">8</span>)</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">9</span>; i++)</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (i != x &amp;&amp; value == sodu[i][<span class=\"number\">8</span> - i])</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"generate\">Generate</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> backEnd.function;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> backEnd.data.Data;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Generate</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">generate</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> temp[][] = &#123; &#123; <span class=\"number\">5</span>, <span class=\"number\">8</span>, <span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">7</span>, <span class=\"number\">6</span>, <span class=\"number\">9</span>, <span class=\"number\">3</span> &#125;, &#123; <span class=\"number\">3</span>, <span class=\"number\">7</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">9</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span> &#125;, &#123; <span class=\"number\">9</span>, <span class=\"number\">6</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">8</span>, <span class=\"number\">4</span>, <span class=\"number\">7</span>, <span class=\"number\">5</span> &#125;,</span><br><span class=\"line\">                &#123; <span class=\"number\">6</span>, <span class=\"number\">2</span>, <span class=\"number\">9</span>, <span class=\"number\">3</span>, <span class=\"number\">8</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">4</span>, <span class=\"number\">1</span> &#125;, &#123; <span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">9</span>, <span class=\"number\">6</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">8</span> &#125;, &#123; <span class=\"number\">8</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">7</span>, <span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">9</span> &#125;,</span><br><span class=\"line\">                &#123; <span class=\"number\">4</span>, <span class=\"number\">1</span>, <span class=\"number\">8</span>, <span class=\"number\">7</span>, <span class=\"number\">5</span>, <span class=\"number\">2</span>, <span class=\"number\">9</span>, <span class=\"number\">3</span>, <span class=\"number\">6</span> &#125;, &#123; <span class=\"number\">2</span>, <span class=\"number\">9</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>, <span class=\"number\">1</span>, <span class=\"number\">8</span>, <span class=\"number\">7</span> &#125;, &#123; <span class=\"number\">7</span>, <span class=\"number\">3</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>, <span class=\"number\">1</span>, <span class=\"number\">9</span>, <span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">4</span> &#125; &#125;;</span><br><span class=\"line\">        Data.cells = temp.clone();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">9</span>; i++)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; <span class=\"number\">9</span>; j++) &#123;</span><br><span class=\"line\">                Data.isPut[i][j] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"number\">10</span> * Math.random() &gt; <span class=\"number\">5</span>) &#123;</span><br><span class=\"line\">                    Data.cells[i][j] = <span class=\"number\">0</span>;</span><br><span class=\"line\">                    Data.isPut[i][j] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span></span><br><span class=\"line\">                    Data.isPut[i][j] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        Print.print();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"hint\">Hint</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> backEnd.function;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Color;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> backEnd.data.Data;</span><br><span class=\"line\"><span class=\"keyword\">import</span> foreEnd.frame.Framework;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Hint</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">hint</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">m</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>, n = <span class=\"number\">0</span>;</span><br><span class=\"line\">        Solve.sodu = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[<span class=\"number\">9</span>][<span class=\"number\">9</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">9</span>; i++)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; <span class=\"number\">9</span>; j++)</span><br><span class=\"line\">                Solve.sodu[i][j] = Data.cells[i][j];</span><br><span class=\"line\">        A: <span class=\"keyword\">for</span> (m = <span class=\"number\">0</span>; m &lt; <span class=\"number\">9</span>; m++)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (n = <span class=\"number\">0</span>; n &lt; <span class=\"number\">9</span>; n++)</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"number\">0</span> == Data.cells[m][n])</span><br><span class=\"line\">                    <span class=\"keyword\">break</span> A;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"literal\">true</span> == Solve.dfs_sudoku(m, n)) &#123;</span><br><span class=\"line\">            Framework.gamefield.cellbuttons[m][n].setText(<span class=\"string\">&quot;&quot;</span> + Solve.sodu[m][n]);</span><br><span class=\"line\">            Framework.gamefield.cellbuttons[m][n].setBackground(Color.green);</span><br><span class=\"line\">            Data.cells[m][n] = Solve.sodu[m][n];</span><br><span class=\"line\">            Print.print();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span></span><br><span class=\"line\">            Framework.textArea.append(<span class=\"string\">&quot;Error6:No Answer\\n&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"input\">Input</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> backEnd.function;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> backEnd.data.Data;</span><br><span class=\"line\"><span class=\"keyword\">import</span> foreEnd.frame.Framework;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Input</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">input</span><span class=\"params\">(String s)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (s.length() &gt; <span class=\"number\">167</span>) &#123;</span><br><span class=\"line\">            Framework.textArea.append(<span class=\"string\">&quot;Error1:syntax error\\nWait for command\\n&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>, k = <span class=\"number\">6</span>; i &lt; <span class=\"number\">9</span>; i++)</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; <span class=\"number\">9</span>; k++)</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (<span class=\"number\">0</span> == k % <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (IsOK.isOK(i, j, s.charAt(k) - <span class=\"string\">&#x27;0&#x27;</span>)) &#123;</span><br><span class=\"line\">                            Data.cells[i][j] = s.charAt(k) - <span class=\"string\">&#x27;0&#x27;</span>;</span><br><span class=\"line\">                            j++;</span><br><span class=\"line\">                        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"number\">0</span> &gt; s.charAt(k) || s.charAt(k) &gt; <span class=\"number\">9</span>) &#123;</span><br><span class=\"line\">                            Framework.textArea.append(<span class=\"string\">&quot;Error1:syntax error\\nWait for command\\n&quot;</span>);</span><br><span class=\"line\">                            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"number\">1</span> == k % <span class=\"number\">2</span> &amp;&amp; s.charAt(k) != <span class=\"string\">&#x27; &#x27;</span>) &#123;</span><br><span class=\"line\">                        Framework.textArea.append(<span class=\"string\">&quot;Error1:syntax error\\nWait for command\\n&quot;</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">            Framework.textArea.append(<span class=\"string\">&quot;Accept your input.\\n&quot;</span>);</span><br><span class=\"line\">            Print.print();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"isok\">IsOK</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> backEnd.function;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> backEnd.data.Data;</span><br><span class=\"line\"><span class=\"keyword\">import</span> foreEnd.frame.Framework;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">IsOK</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isOK</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> y, <span class=\"type\">int</span> value)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"number\">0</span> &gt;= value || value &gt; <span class=\"number\">9</span>) &#123;</span><br><span class=\"line\">            Framework.textArea.append(<span class=\"string\">&quot;Error2:data range exceed\\n&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (x &lt; <span class=\"number\">0</span> || x &gt;= <span class=\"number\">9</span> || y &lt; <span class=\"number\">0</span> || y &gt;= <span class=\"number\">9</span>) &#123;</span><br><span class=\"line\">            Framework.textArea.append(<span class=\"string\">&quot;Error3:illegal location\\n&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"literal\">true</span> == Data.isPut[x][y]) &#123;</span><br><span class=\"line\">            Framework.textArea.append(<span class=\"string\">&quot;Error5:there is already a number in this position\\n&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">9</span>; i++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (i != x &amp;&amp; value == Data.cells[i][y]) &#123;</span><br><span class=\"line\">                    Framework.textArea</span><br><span class=\"line\">                            .append(<span class=\"string\">&quot;Error4:illegal, the line &quot;</span> + i + <span class=\"string\">&quot; column &quot;</span> + y + <span class=\"string\">&quot; has the same number\\n&quot;</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (i != y &amp;&amp; value == Data.cells[x][i]) &#123;</span><br><span class=\"line\">                    Framework.textArea</span><br><span class=\"line\">                            .append(<span class=\"string\">&quot;Error4:illegal, the line &quot;</span> + x + <span class=\"string\">&quot; column &quot;</span> + i + <span class=\"string\">&quot; has the same number\\n&quot;</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> x - x % <span class=\"number\">3</span>; i &lt;= x + <span class=\"number\">2</span> - x % <span class=\"number\">3</span>; i++)</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> y - y % <span class=\"number\">3</span>; j &lt;= y + <span class=\"number\">2</span> - y % <span class=\"number\">3</span>; j++)</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!(i == x &amp;&amp; j == y) &amp;&amp; value == Data.cells[i][j]) &#123;</span><br><span class=\"line\">                        Framework.textArea</span><br><span class=\"line\">                                .append(<span class=\"string\">&quot;Error4:illegal, the line &quot;</span> + i + <span class=\"string\">&quot; column &quot;</span> + j + <span class=\"string\">&quot; has the same number\\n&quot;</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (x == y) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">9</span>; i++)</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (i != x &amp;&amp; value == Data.cells[i][i]) &#123;</span><br><span class=\"line\">                        Framework.textArea</span><br><span class=\"line\">                                .append(<span class=\"string\">&quot;Error4:illegal, the line &quot;</span> + i + <span class=\"string\">&quot; column &quot;</span> + i + <span class=\"string\">&quot; has the same number\\n&quot;</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"number\">8</span> == x + y) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">9</span>; i++)</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (i != x &amp;&amp; value == Data.cells[i][<span class=\"number\">8</span> - i]) &#123;</span><br><span class=\"line\">                        Framework.textArea.append(<span class=\"string\">&quot;Error4:illegal, the line &quot;</span> + i + <span class=\"string\">&quot; column &quot;</span> + (<span class=\"type\">int</span>) (<span class=\"number\">8</span> - i)</span><br><span class=\"line\">                                + <span class=\"string\">&quot; has the same number\\n&quot;</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"print\">Print</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> backEnd.function;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Color;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> backEnd.data.Data;</span><br><span class=\"line\"><span class=\"keyword\">import</span> foreEnd.frame.Framework;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Print</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">print</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        Framework.textArea.append(<span class=\"string\">&quot;Current sudoku state is:\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">         * for (int i = 0; i &lt; 9; i++) for (int j = 0; j &lt; 9; j++)</span></span><br><span class=\"line\"><span class=\"comment\">         * Framework.gamefield.cellbuttons[i][j].setBackground(Color.black);</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">9</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; <span class=\"number\">9</span>; j++) &#123;</span><br><span class=\"line\">                Framework.textArea.append(<span class=\"string\">&quot; &quot;</span> + Data.cells[i][j]);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"number\">0</span> != Data.cells[i][j]) &#123;</span><br><span class=\"line\">                    Framework.gamefield.cellbuttons[i][j].setText(<span class=\"string\">&quot;&quot;</span> + Data.cells[i][j]);</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (Data.isPut[i][j]) &#123;</span><br><span class=\"line\">                        Framework.gamefield.cellbuttons[i][j].setBackground(Color.blue);</span><br><span class=\"line\">                        Framework.gamefield.cellbuttons[i][j].setEnabled(<span class=\"literal\">false</span>);</span><br><span class=\"line\">                        Framework.gamefield.cellbuttons[i][j].removeMouseListener(Framework.gamefield);</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (Color.green != Framework.gamefield.cellbuttons[i][j].getBackground())</span><br><span class=\"line\">                            Framework.gamefield.cellbuttons[i][j].setBackground(Color.orange);</span><br><span class=\"line\">                        Framework.gamefield.cellbuttons[i][j].setEnabled(<span class=\"literal\">true</span>);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!Framework.gamefield.cellbuttons[i][j].isEnabled())</span><br><span class=\"line\">                        Framework.gamefield.cellbuttons[i][j].addMouseListener(Framework.gamefield);</span><br><span class=\"line\">                    Framework.gamefield.cellbuttons[i][j].setText(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">                    Framework.gamefield.cellbuttons[i][j].setEnabled(<span class=\"literal\">true</span>);</span><br><span class=\"line\">                    Framework.gamefield.cellbuttons[i][j].setBackground(Color.black);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            Framework.textArea.append(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Framework.textArea.append(<span class=\"string\">&quot;Wait for command:\\n&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"put\">Put</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> backEnd.function;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Color;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> backEnd.data.Data;</span><br><span class=\"line\"><span class=\"keyword\">import</span> foreEnd.frame.Framework;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Put</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">put</span><span class=\"params\">(String s)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> x, y, value = <span class=\"number\">0</span>;</span><br><span class=\"line\">        x = s.charAt(<span class=\"number\">4</span>) - <span class=\"string\">&#x27;0&#x27;</span>;</span><br><span class=\"line\">        y = s.charAt(<span class=\"number\">6</span>) - <span class=\"string\">&#x27;0&#x27;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s.charAt(<span class=\"number\">3</span>) != <span class=\"string\">&#x27; &#x27;</span> || s.charAt(<span class=\"number\">4</span>) &lt; <span class=\"string\">&#x27;0&#x27;</span> || s.charAt(<span class=\"number\">4</span>) &gt; <span class=\"string\">&#x27;9&#x27;</span>)</span><br><span class=\"line\">                Framework.textArea.append(<span class=\"string\">&quot;Error1:syntax error\\n&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s.charAt(<span class=\"number\">5</span>) &gt;= <span class=\"string\">&#x27;0&#x27;</span> &amp;&amp; s.charAt(<span class=\"number\">5</span>) &lt;= <span class=\"string\">&#x27;9&#x27;</span>)</span><br><span class=\"line\">                Framework.textArea.append(<span class=\"string\">&quot;Error3:illegal location\\n&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s.charAt(<span class=\"number\">5</span>) != <span class=\"string\">&#x27; &#x27;</span> || s.charAt(<span class=\"number\">6</span>) &lt; <span class=\"string\">&#x27;0&#x27;</span> || s.charAt(<span class=\"number\">6</span>) &gt; <span class=\"string\">&#x27;9&#x27;</span>)</span><br><span class=\"line\">                Framework.textArea.append(<span class=\"string\">&quot;Error1:syntax error\\n&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s.charAt(<span class=\"number\">7</span>) &gt;= <span class=\"string\">&#x27;0&#x27;</span> &amp;&amp; s.charAt(<span class=\"number\">7</span>) &lt;= <span class=\"string\">&#x27;9&#x27;</span>)</span><br><span class=\"line\">                Framework.textArea.append(<span class=\"string\">&quot;Error3:illegal location\\n&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (IsOK.isOK(x, y, value = Integer.parseInt(s.substring(<span class=\"number\">8</span>)))) &#123;</span><br><span class=\"line\">                Data.cells[x][y] = value;</span><br><span class=\"line\">                Framework.gamefield.cellbuttons[x][y].setText(<span class=\"string\">&quot;&quot;</span> + value);</span><br><span class=\"line\">                Framework.gamefield.cellbuttons[x][y].setBackground(Color.orange);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (NumberFormatException e) &#123;</span><br><span class=\"line\">            Framework.textArea.append(<span class=\"string\">&quot;Error1:syntax error\\n&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"save\">Save</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> backEnd.function;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedWriter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileWriter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.PrintWriter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> backEnd.data.Data;</span><br><span class=\"line\"><span class=\"keyword\">import</span> foreEnd.frame.Framework;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Save</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">(String s)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">File</span> <span class=\"variable\">f</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">File</span>(</span><br><span class=\"line\">                <span class=\"string\">&quot;C:\\\\Users\\\\GoldenLengendWindows\\\\Desktop\\\\Important Files\\\\VSCodeJava\\\\Sudoku\\\\src\\\\backEnd\\\\data\\\\&quot;</span></span><br><span class=\"line\">                        + s + <span class=\"string\">&quot;.txt&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">Date</span> <span class=\"variable\">d</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (f.exists()) &#123;</span><br><span class=\"line\">            Framework.textArea.append(<span class=\"string\">&quot;Error7:file existed\\nInput your game record name again\\n&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">PrintWriter</span> <span class=\"variable\">pw1</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>, pw2 = <span class=\"literal\">null</span>;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                pw1 = <span class=\"keyword\">new</span> <span class=\"title class_\">PrintWriter</span>(</span><br><span class=\"line\">                        <span class=\"string\">&quot;C:\\\\Users\\\\GoldenLengendWindows\\\\Desktop\\\\Important Files\\\\VSCodeJava\\\\Sudoku\\\\src\\\\backEnd\\\\data\\\\&quot;</span></span><br><span class=\"line\">                                + s + <span class=\"string\">&quot;.txt&quot;</span>);</span><br><span class=\"line\">                pw2 = <span class=\"keyword\">new</span> <span class=\"title class_\">PrintWriter</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">BufferedWriter</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">FileWriter</span>(</span><br><span class=\"line\">                        <span class=\"string\">&quot;C:\\\\Users\\\\GoldenLengendWindows\\\\Desktop\\\\Important Files\\\\VSCodeJava\\\\Sudoku\\\\src\\\\backEnd\\\\data\\\\cache.txt&quot;</span>,</span><br><span class=\"line\">                        <span class=\"literal\">true</span>)));</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">9</span>; i++)</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; <span class=\"number\">9</span>; j++)</span><br><span class=\"line\">                    pw1.print(Data.cells[i][j] + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">            pw1.print(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">9</span>; i++)</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; <span class=\"number\">9</span>; j++)</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (<span class=\"literal\">true</span> == Data.isPut[i][j])</span><br><span class=\"line\">                        pw1.print(<span class=\"string\">&quot;1 &quot;</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">else</span></span><br><span class=\"line\">                        pw1.print(<span class=\"string\">&quot;0 &quot;</span>);</span><br><span class=\"line\">            pw2.println(s + <span class=\"string\">&quot;\\n&quot;</span> + d);</span><br><span class=\"line\">            pw1.close();</span><br><span class=\"line\">            pw2.close();</span><br><span class=\"line\">            Framework.textArea.append(<span class=\"string\">&quot;Game state recorded successfully\\n&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"show\">Show</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> backEnd.function;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileNotFoundException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> backEnd.data.Data;</span><br><span class=\"line\"><span class=\"keyword\">import</span> foreEnd.frame.Framework;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Show</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> FileReader in;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> FileReader in2;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> BufferedReader reader;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> BufferedReader reader2;</span><br><span class=\"line\">    String[] cache;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">show</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">line</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        String str;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            in = <span class=\"keyword\">new</span> <span class=\"title class_\">FileReader</span>(</span><br><span class=\"line\">                    <span class=\"string\">&quot;C:\\\\Users\\\\GoldenLengendWindows\\\\Desktop\\\\Important Files\\\\VSCodeJava\\\\Sudoku\\\\src\\\\backEnd\\\\data\\\\cache.txt&quot;</span>);</span><br><span class=\"line\">            reader = <span class=\"keyword\">new</span> <span class=\"title class_\">BufferedReader</span>(in);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (FileNotFoundException e) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> ((str = reader.readLine()) != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (str.length() &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (<span class=\"number\">0</span> == line % <span class=\"number\">2</span>)</span><br><span class=\"line\">                        Framework.textArea.append(line / <span class=\"number\">2</span> + <span class=\"string\">&quot;-&quot;</span> + str);</span><br><span class=\"line\">                    <span class=\"keyword\">else</span></span><br><span class=\"line\">                        Framework.textArea.append(<span class=\"string\">&quot; &quot;</span> + str + <span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">                    line++;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            Framework.textArea</span><br><span class=\"line\">                    .append(<span class=\"string\">&quot;Input the record code to load game\\nFormat:\\&quot;show num\\&quot;,num is a number showed\\n&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">show</span><span class=\"params\">(String s)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">line</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>, l = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            l = Integer.parseInt(s.substring(<span class=\"number\">5</span>));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (NumberFormatException e) &#123;</span><br><span class=\"line\">            Framework.textArea.append(<span class=\"string\">&quot;Error1:syntax error\\n&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>();</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            in = <span class=\"keyword\">new</span> <span class=\"title class_\">FileReader</span>(</span><br><span class=\"line\">                    <span class=\"string\">&quot;C:\\\\Users\\\\GoldenLengendWindows\\\\Desktop\\\\Important Files\\\\VSCodeJava\\\\Sudoku\\\\src\\\\backEnd\\\\data\\\\cache.txt&quot;</span>);</span><br><span class=\"line\">            reader = <span class=\"keyword\">new</span> <span class=\"title class_\">BufferedReader</span>(in);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (FileNotFoundException e) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> ((str = reader.readLine()) != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (line == <span class=\"number\">2</span> * l)</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                line++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            in2 = <span class=\"keyword\">new</span> <span class=\"title class_\">FileReader</span>(</span><br><span class=\"line\">                    <span class=\"string\">&quot;C:\\\\Users\\\\GoldenLengendWindows\\\\Desktop\\\\Important Files\\\\VSCodeJava\\\\Sudoku\\\\src\\\\backEnd\\\\data\\\\&quot;</span></span><br><span class=\"line\">                            + str + <span class=\"string\">&quot;.txt&quot;</span>);</span><br><span class=\"line\">            reader2 = <span class=\"keyword\">new</span> <span class=\"title class_\">BufferedReader</span>(in2);</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">9</span>; i++)</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; <span class=\"number\">9</span>; j++) &#123;</span><br><span class=\"line\">                    Data.cells[i][j] = reader2.read() - <span class=\"string\">&#x27;0&#x27;</span>;</span><br><span class=\"line\">                    reader2.read();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            reader2.read();</span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">temp</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">9</span>; i++)</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; <span class=\"number\">9</span>; j++) &#123;</span><br><span class=\"line\">                    temp = reader2.read();</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (<span class=\"string\">&#x27;0&#x27;</span> == temp)</span><br><span class=\"line\">                        Data.isPut[i][j] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"string\">&#x27;1&#x27;</span> == temp)</span><br><span class=\"line\">                        Data.isPut[i][j] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                    reader2.read();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Framework.textArea.append(<span class=\"string\">&quot;Last time suduko is\\n&quot;</span>);</span><br><span class=\"line\">        Print.print();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"solve\">Solve</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> backEnd.function;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Set;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.TreeSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Vector;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> backEnd.data.Data;</span><br><span class=\"line\"><span class=\"keyword\">import</span> foreEnd.frame.Framework;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javafx.util.Pair;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Solve</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">int</span>[][] sodu;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">boolean</span>[][][] possibility = <span class=\"keyword\">new</span> <span class=\"title class_\">boolean</span>[<span class=\"number\">9</span>][<span class=\"number\">9</span>][<span class=\"number\">9</span>];</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">int</span>[][] hash2 = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[<span class=\"number\">82</span>][<span class=\"number\">2</span>];</span><br><span class=\"line\">    <span class=\"keyword\">static</span> Vector&lt;Set&lt;Integer&gt;&gt; CandidaList;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Vector&lt;Pair&lt;Integer, Integer&gt;&gt; Coord;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">dfs_solve</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        sodu = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[<span class=\"number\">9</span>][<span class=\"number\">9</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">9</span>; i++)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; <span class=\"number\">9</span>; j++)</span><br><span class=\"line\">                sodu[i][j] = Data.cells[i][j];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dfs_sudoku(<span class=\"number\">0</span>, <span class=\"number\">0</span>) == <span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">9</span>; i++)</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; <span class=\"number\">9</span>; j++)</span><br><span class=\"line\">                    Data.cells[i][j] = sodu[i][j];</span><br><span class=\"line\">            Print.print();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span></span><br><span class=\"line\">            Framework.textArea.append(<span class=\"string\">&quot;Error6:no answer\\n&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">a_star_solve</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        sodu = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[<span class=\"number\">9</span>][<span class=\"number\">9</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">9</span>; i++)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; <span class=\"number\">9</span>; j++)</span><br><span class=\"line\">                sodu[i][j] = Data.cells[i][j];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (a_star_sudoku() == <span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">9</span>; i++)</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; <span class=\"number\">9</span>; j++)</span><br><span class=\"line\">                    Data.cells[i][j] = sodu[i][j];</span><br><span class=\"line\">            Print.print();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span></span><br><span class=\"line\">            Framework.textArea.append(<span class=\"string\">&quot;Error6:no answer\\n&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">bt_solve</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        sodu = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[<span class=\"number\">9</span>][<span class=\"number\">9</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">9</span>; i++)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; <span class=\"number\">9</span>; j++)</span><br><span class=\"line\">                sodu[i][j] = Data.cells[i][j];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (bt_sudoku() == <span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">9</span>; i++)</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; <span class=\"number\">9</span>; j++)</span><br><span class=\"line\">                    Data.cells[i][j] = sodu[i][j];</span><br><span class=\"line\">            Print.print();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span></span><br><span class=\"line\">            Framework.textArea.append(<span class=\"string\">&quot;Error6:no answer\\n&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">iddfs_solve</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        sodu = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[<span class=\"number\">9</span>][<span class=\"number\">9</span>];</span><br><span class=\"line\">        EnterAndInitial();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"literal\">true</span> == solve()) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">9</span>; i++)</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; <span class=\"number\">9</span>; j++)</span><br><span class=\"line\">                    Data.cells[i][j] = sodu[i][j];</span><br><span class=\"line\">            Print.print();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span></span><br><span class=\"line\">            Framework.textArea.append(<span class=\"string\">&quot;Error6:no answer\\n&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> Pair&lt;Integer, Integer&gt; <span class=\"title function_\">make_pair</span><span class=\"params\">(<span class=\"type\">int</span> i, <span class=\"type\">int</span> j)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Pair</span>&lt;Integer, Integer&gt;(i, j);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">Locat_Zero</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        Coord = <span class=\"keyword\">new</span> <span class=\"title class_\">Vector</span>&lt;Pair&lt;Integer, Integer&gt;&gt;();</span><br><span class=\"line\">        Coord.clear();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">9</span>; i++)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; <span class=\"number\">9</span>; j++)</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (sodu[i][j] == <span class=\"number\">0</span>)</span><br><span class=\"line\">                    Coord.add(make_pair(i, j));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">Compute_Cadida</span><span class=\"params\">(<span class=\"type\">int</span> Count)</span> &#123;</span><br><span class=\"line\">        CandidaList = <span class=\"keyword\">new</span> <span class=\"title class_\">Vector</span>&lt;Set&lt;Integer&gt;&gt;();</span><br><span class=\"line\">        CandidaList.clear();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; Count; i++) &#123;</span><br><span class=\"line\">            Set&lt;Integer&gt; Num = <span class=\"keyword\">new</span> <span class=\"title class_\">TreeSet</span>&lt;Integer&gt;();</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; <span class=\"number\">9</span>; j++)</span><br><span class=\"line\">                Num.add(j + <span class=\"number\">1</span>);</span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">x</span> <span class=\"operator\">=</span> Coord.elementAt(i).getKey();</span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">y</span> <span class=\"operator\">=</span> Coord.elementAt(i).getValue();</span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">x0</span> <span class=\"operator\">=</span> x / <span class=\"number\">3</span>, y0 = y / <span class=\"number\">3</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; <span class=\"number\">9</span>; ++j)</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (Num.contains(sodu[x][j]))</span><br><span class=\"line\">                    Num.remove(sodu[x][j]);</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">k</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; k &lt; <span class=\"number\">9</span>; ++k)</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (Num.contains(sodu[k][y]))</span><br><span class=\"line\">                    Num.remove(sodu[k][y]);</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">m</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; m &lt; <span class=\"number\">3</span>; ++m)</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">n</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; n &lt; <span class=\"number\">3</span>; ++n)</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (Num.contains(sodu[x0 * <span class=\"number\">3</span> + m][y0 * <span class=\"number\">3</span> + n]))</span><br><span class=\"line\">                        Num.remove(sodu[x0 * <span class=\"number\">3</span> + m][y0 * <span class=\"number\">3</span> + n]);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (x == y)</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">m</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; m &lt; <span class=\"number\">9</span>; m++)</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (Num.contains(sodu[m][m]))</span><br><span class=\"line\">                        Num.remove(sodu[m][m]);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (x + y == <span class=\"number\">8</span>)</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">m</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; m &lt; <span class=\"number\">9</span>; m++)</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (Num.contains(sodu[m][<span class=\"number\">8</span> - m]))</span><br><span class=\"line\">                        Num.remove(sodu[m][<span class=\"number\">8</span> - m]);</span><br><span class=\"line\">            CandidaList.add(Num);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> Pair&lt;Integer, Integer&gt; <span class=\"title function_\">Find_Min</span><span class=\"params\">(<span class=\"type\">int</span> Count)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">min</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>, min_index = -<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; Count; ++i) &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">temp</span> <span class=\"operator\">=</span> CandidaList.elementAt(i).size();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (temp &lt; min) &#123;</span><br><span class=\"line\">                min = temp;</span><br><span class=\"line\">                min_index = i;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> make_pair(min, min_index);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">boolean</span> <span class=\"title function_\">a_star_sudoku</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        Locat_Zero();</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">TotalCount</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>, Count = Coord.size();</span><br><span class=\"line\">        Vector&lt;Set&lt;Integer&gt;&gt; popCandidateList = <span class=\"keyword\">new</span> <span class=\"title class_\">Vector</span>&lt;Set&lt;Integer&gt;&gt;();</span><br><span class=\"line\">        Vector&lt;Pair&lt;Integer, Integer&gt;&gt; popCoordList = <span class=\"keyword\">new</span> <span class=\"title class_\">Vector</span>&lt;Pair&lt;Integer, Integer&gt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Count == <span class=\"number\">0</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (Count &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            Compute_Cadida(Count);</span><br><span class=\"line\">            Pair&lt;Integer, Integer&gt; temp = Find_Min(Count);</span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">Min</span> <span class=\"operator\">=</span> temp.getKey();</span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">MinIndex</span> <span class=\"operator\">=</span> temp.getValue();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (Min == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">while</span> (!popCandidateList.lastElement().isEmpty()) &#123;</span><br><span class=\"line\">                    <span class=\"type\">int</span> <span class=\"variable\">x</span> <span class=\"operator\">=</span> popCoordList.lastElement().getKey();</span><br><span class=\"line\">                    <span class=\"type\">int</span> <span class=\"variable\">y</span> <span class=\"operator\">=</span> popCoordList.lastElement().getValue();</span><br><span class=\"line\">                    sodu[x][y] = <span class=\"number\">0</span>;</span><br><span class=\"line\">                    ++Count;</span><br><span class=\"line\">                    Coord.add(popCoordList.lastElement());</span><br><span class=\"line\">                    popCoordList.remove(popCoordList.size() - <span class=\"number\">1</span>);</span><br><span class=\"line\">                    popCandidateList.remove(popCandidateList.size() - <span class=\"number\">1</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"type\">int</span> <span class=\"variable\">x</span> <span class=\"operator\">=</span> popCoordList.lastElement().getKey();</span><br><span class=\"line\">                <span class=\"type\">int</span> <span class=\"variable\">y</span> <span class=\"operator\">=</span> popCoordList.lastElement().getValue();</span><br><span class=\"line\">                sodu[x][y] = popCandidateList.lastElement().iterator().next();</span><br><span class=\"line\">                popCandidateList.lastElement().remove(sodu[x][y]);</span><br><span class=\"line\">                ++TotalCount;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"type\">int</span> <span class=\"variable\">x</span> <span class=\"operator\">=</span> Coord.elementAt(MinIndex).getKey();</span><br><span class=\"line\">                <span class=\"type\">int</span> <span class=\"variable\">y</span> <span class=\"operator\">=</span> Coord.elementAt(MinIndex).getValue();</span><br><span class=\"line\">                sodu[x][y] = CandidaList.elementAt(MinIndex).iterator().next();</span><br><span class=\"line\">                CandidaList.elementAt(MinIndex).remove(CandidaList.elementAt(MinIndex).iterator().next());</span><br><span class=\"line\">                popCandidateList.add(CandidaList.elementAt(MinIndex));</span><br><span class=\"line\">                CandidaList.removeElementAt(MinIndex);</span><br><span class=\"line\">                popCoordList.add(Coord.elementAt(MinIndex));</span><br><span class=\"line\">                Coord.removeElementAt(MinIndex);</span><br><span class=\"line\">                --Count;</span><br><span class=\"line\">                ++TotalCount;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (TotalCount != <span class=\"number\">0</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">boolean</span> <span class=\"title function_\">bt_sudoku</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">m</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>, n = <span class=\"number\">0</span>, temp = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (;;) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"number\">9</span> == m &amp;&amp; <span class=\"number\">0</span> == n)</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (-<span class=\"number\">1</span> == m &amp;&amp; <span class=\"number\">8</span> == n)</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (!Data.isPut[m][n]) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (temp = sodu[m][n] + <span class=\"number\">1</span>; temp &lt;= <span class=\"number\">9</span>; temp++) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (isOK(m, n, temp)) &#123;</span><br><span class=\"line\">                            sodu[m][n] = temp;</span><br><span class=\"line\">                            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (temp &gt; <span class=\"number\">9</span>) &#123;</span><br><span class=\"line\">                        sodu[m][n] = <span class=\"number\">0</span>;</span><br><span class=\"line\">                        <span class=\"keyword\">do</span> &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">if</span> (<span class=\"number\">0</span> == n) &#123;</span><br><span class=\"line\">                                m--;</span><br><span class=\"line\">                                n = <span class=\"number\">8</span>;</span><br><span class=\"line\">                            &#125; <span class=\"keyword\">else</span></span><br><span class=\"line\">                                n--;</span><br><span class=\"line\">                        &#125; <span class=\"keyword\">while</span> (Data.isPut[m][n] &amp;&amp; m &gt;= <span class=\"number\">0</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (<span class=\"number\">8</span> == n) &#123;</span><br><span class=\"line\">                            m++;</span><br><span class=\"line\">                            n = <span class=\"number\">0</span>;</span><br><span class=\"line\">                        &#125; <span class=\"keyword\">else</span></span><br><span class=\"line\">                            n++;</span><br><span class=\"line\">                        <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (<span class=\"number\">8</span> == n) &#123;</span><br><span class=\"line\">                        m++;</span><br><span class=\"line\">                        n = <span class=\"number\">0</span>;</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span></span><br><span class=\"line\">                        n++;</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">sudofind</span><span class=\"params\">(<span class=\"type\">int</span> m, <span class=\"type\">int</span> n, <span class=\"type\">int</span>[] b)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span>[] c = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[<span class=\"number\">10</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">9</span>; i++) &#123;</span><br><span class=\"line\">            c[sodu[i][n]]++;</span><br><span class=\"line\">            c[sodu[m][i]]++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> m - m % <span class=\"number\">3</span>; i &lt;= m + <span class=\"number\">2</span> - m % <span class=\"number\">3</span>; i++)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> n - n % <span class=\"number\">3</span>; j &lt;= n + <span class=\"number\">2</span> - n % <span class=\"number\">3</span>; j++)</span><br><span class=\"line\">                c[sodu[i][j]]++;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">k</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"number\">0</span> == c[i]) &#123;</span><br><span class=\"line\">                b[k] = i;</span><br><span class=\"line\">                k++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> k;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">boolean</span> <span class=\"title function_\">dfs_sudoku</span><span class=\"params\">(<span class=\"type\">int</span> m, <span class=\"type\">int</span> n)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"number\">8</span> == m &amp;&amp; <span class=\"number\">8</span> == n) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"number\">0</span> != sodu[m][n])</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"type\">int</span>[] b = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[<span class=\"number\">9</span>];</span><br><span class=\"line\">                sudofind(m, n, b);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"number\">0</span> != b[<span class=\"number\">0</span>]) &#123;</span><br><span class=\"line\">                    sodu[m][n] = b[<span class=\"number\">0</span>];</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span></span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"number\">0</span> == sodu[m][n]) &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span>[] b = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[<span class=\"number\">9</span>];</span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">end</span> <span class=\"operator\">=</span> sudofind(m, n, b);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"number\">0</span> == b[<span class=\"number\">0</span>])</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">k</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; k &lt; end; k++) &#123;</span><br><span class=\"line\">                    sodu[m][n] = b[k];</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (<span class=\"number\">8</span> != n) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (<span class=\"literal\">true</span> == dfs_sudoku(m, n + <span class=\"number\">1</span>))</span><br><span class=\"line\">                            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"number\">8</span> != m)</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (<span class=\"literal\">true</span> == dfs_sudoku(m + <span class=\"number\">1</span>, <span class=\"number\">0</span>))</span><br><span class=\"line\">                            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">                    sodu[m][n] = <span class=\"number\">0</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"number\">8</span> != n) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"literal\">true</span> == dfs_sudoku(m, n + <span class=\"number\">1</span>))</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"number\">8</span> != m)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"literal\">true</span> == dfs_sudoku(m + <span class=\"number\">1</span>, <span class=\"number\">0</span>))</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">EnterAndInitial</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">9</span>; i++)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; <span class=\"number\">9</span>; j++) &#123;</span><br><span class=\"line\">                sodu[i][j] = Data.cells[i][j];</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (sodu[i][j] != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">cnt3</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; cnt3 &lt; <span class=\"number\">9</span>; cnt3++)</span><br><span class=\"line\">                        possibility[i][j][cnt3] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                    possibility[i][j][sodu[i][j] - <span class=\"number\">1</span>] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span></span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">cnt3</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; cnt3 &lt; <span class=\"number\">9</span>; cnt3++)</span><br><span class=\"line\">                        possibility[i][j][cnt3] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">GetUniquity</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> temp1, temp2 = <span class=\"number\">0</span>, temp3 = <span class=\"number\">0</span>, x, y;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">9</span>; i++)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; <span class=\"number\">9</span>; j++) &#123;</span><br><span class=\"line\">                temp1 = <span class=\"number\">0</span>;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">cnt3</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; cnt3 &lt; <span class=\"number\">9</span>; cnt3++)</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (possibility[i][cnt3][j]) &#123;</span><br><span class=\"line\">                        temp1++;</span><br><span class=\"line\">                        temp2 = cnt3;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (temp1 == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                    sodu[i][temp2] = j + <span class=\"number\">1</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">cnt3</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; cnt3 &lt; <span class=\"number\">9</span>; cnt3++)</span><br><span class=\"line\">                        possibility[i][temp2][cnt3] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                    possibility[i][temp2][j] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">cnt1</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; cnt1 &lt; <span class=\"number\">9</span>; cnt1++)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">cnt2</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; cnt2 &lt; <span class=\"number\">9</span>; cnt2++) &#123;</span><br><span class=\"line\">                temp1 = <span class=\"number\">0</span>;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">cnt3</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; cnt3 &lt; <span class=\"number\">9</span>; cnt3++)</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (possibility[cnt3][cnt1][cnt2]) &#123;</span><br><span class=\"line\">                        temp1++;</span><br><span class=\"line\">                        temp2 = cnt3;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (temp1 == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                    sodu[temp2][cnt1] = cnt2 + <span class=\"number\">1</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">cnt3</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; cnt3 &lt; <span class=\"number\">9</span>; cnt3++)</span><br><span class=\"line\">                        possibility[temp2][cnt1][cnt3] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                    possibility[temp2][cnt1][cnt2] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (x = <span class=\"number\">0</span>; x &lt; <span class=\"number\">9</span>; x += <span class=\"number\">3</span>)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (y = <span class=\"number\">0</span>; y &lt; <span class=\"number\">9</span>; y += <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">cnt1</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; cnt1 &lt; <span class=\"number\">9</span>; cnt1++) &#123;</span><br><span class=\"line\">                    temp1 = <span class=\"number\">0</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">cnt2</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; cnt2 &lt; <span class=\"number\">3</span>; cnt2++)</span><br><span class=\"line\">                        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">cnt3</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; cnt3 &lt; <span class=\"number\">3</span>; cnt3++)</span><br><span class=\"line\">                            <span class=\"keyword\">if</span> (possibility[cnt2 + y][cnt3 + x][cnt1]) &#123;</span><br><span class=\"line\">                                temp1++;</span><br><span class=\"line\">                                temp2 = cnt2;</span><br><span class=\"line\">                                temp3 = cnt3;</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (temp1 == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                        sodu[temp2 + y][temp3 + x] = cnt1 + <span class=\"number\">1</span>;</span><br><span class=\"line\">                        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">cnt3</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; cnt3 &lt; <span class=\"number\">9</span>; cnt3++)</span><br><span class=\"line\">                            possibility[temp2 + y][temp3 + x][cnt3] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                        possibility[temp2 + y][temp3 + x][cnt1] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">DiminishPossibility</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> x, y;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">cnt1</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; cnt1 &lt; <span class=\"number\">9</span>; cnt1++)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">cnt2</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; cnt2 &lt; <span class=\"number\">9</span>; cnt2++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (sodu[cnt1][cnt2] != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (cnt1 &lt; <span class=\"number\">3</span>)</span><br><span class=\"line\">                        y = <span class=\"number\">0</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (cnt1 &lt; <span class=\"number\">6</span>)</span><br><span class=\"line\">                        y = <span class=\"number\">3</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">else</span></span><br><span class=\"line\">                        y = <span class=\"number\">6</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (cnt2 &lt; <span class=\"number\">3</span>)</span><br><span class=\"line\">                        x = <span class=\"number\">0</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (cnt2 &lt; <span class=\"number\">6</span>)</span><br><span class=\"line\">                        x = <span class=\"number\">3</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">else</span></span><br><span class=\"line\">                        x = <span class=\"number\">6</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">cnt3</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; cnt3 &lt; <span class=\"number\">9</span>; cnt3++) &#123;</span><br><span class=\"line\">                        possibility[cnt1][cnt3][sodu[cnt1][cnt2] - <span class=\"number\">1</span>] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                        possibility[cnt3][cnt2][sodu[cnt1][cnt2] - <span class=\"number\">1</span>] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">cnt3</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; cnt3 &lt; <span class=\"number\">3</span>; cnt3++)</span><br><span class=\"line\">                        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">cnt4</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; cnt4 &lt; <span class=\"number\">3</span>; cnt4++)</span><br><span class=\"line\">                            possibility[cnt3 + y][cnt4 + x][sodu[cnt1][cnt2] - <span class=\"number\">1</span>] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">NextState</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> amountOfPossibility;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">temp1</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">rest</span> <span class=\"operator\">=</span> <span class=\"number\">81</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">cnt1</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; cnt1 &lt; <span class=\"number\">9</span>; cnt1++)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">cnt2</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; cnt2 &lt; <span class=\"number\">9</span>; cnt2++) &#123;</span><br><span class=\"line\">                amountOfPossibility = <span class=\"number\">0</span>;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">cnt3</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; cnt3 &lt; <span class=\"number\">9</span>; cnt3++) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (possibility[cnt1][cnt2][cnt3]) &#123;</span><br><span class=\"line\">                        amountOfPossibility++;</span><br><span class=\"line\">                        temp1 = cnt3 + <span class=\"number\">1</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (amountOfPossibility == <span class=\"number\">1</span>)</span><br><span class=\"line\">                    sodu[cnt1][cnt2] = temp1;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (sodu[cnt1][cnt2] != <span class=\"number\">0</span>)</span><br><span class=\"line\">                    rest--;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> rest;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">boolean</span> <span class=\"title function_\">IsCalculatable</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">ptr</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">rest</span> <span class=\"operator\">=</span> <span class=\"number\">81</span>, lastStepRest = <span class=\"number\">81</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (rest &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            GetUniquity();</span><br><span class=\"line\">            DiminishPossibility();</span><br><span class=\"line\">            rest = NextState();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (lastStepRest != rest)</span><br><span class=\"line\">                lastStepRest = rest;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">cnt1</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; cnt1 &lt; <span class=\"number\">9</span>; cnt1++)</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">cnt2</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; cnt2 &lt; <span class=\"number\">9</span>; cnt2++)</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (sodu[cnt1][cnt2] == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                            hash2[ptr][<span class=\"number\">0</span>] = cnt1;</span><br><span class=\"line\">                            hash2[ptr++][<span class=\"number\">1</span>] = cnt2;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                hash2[ptr][<span class=\"number\">0</span>] = -<span class=\"number\">1</span>;</span><br><span class=\"line\">                hash2[ptr][<span class=\"number\">1</span>] = -<span class=\"number\">1</span>;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">boolean</span> <span class=\"title function_\">IsRational</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">9</span>; i++)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; <span class=\"number\">9</span>; j++)</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (!isOK(i, j, sodu[i][j]))</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isOK</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> y, <span class=\"type\">int</span> value)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"number\">0</span> == value)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">9</span>; i++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (i != x &amp;&amp; value == sodu[i][y])</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (i != y &amp;&amp; value == sodu[x][i])</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> x - x % <span class=\"number\">3</span>; i &lt;= x + <span class=\"number\">2</span> - x % <span class=\"number\">3</span>; i++)</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> y - y % <span class=\"number\">3</span>; j &lt;= y + <span class=\"number\">2</span> - y % <span class=\"number\">3</span>; j++)</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!(i == x &amp;&amp; j == y) &amp;&amp; value == sodu[i][j])</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (x == y)</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">9</span>; i++)</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (i != x &amp;&amp; value == sodu[i][i])</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (x + y == <span class=\"number\">8</span>)</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">9</span>; i++)</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (i != x &amp;&amp; value == sodu[i][<span class=\"number\">8</span> - i])</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">boolean</span> <span class=\"title function_\">DFS</span><span class=\"params\">(<span class=\"type\">int</span> depth)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (hash2[depth][<span class=\"number\">0</span>] == -<span class=\"number\">1</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">cnt1</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; cnt1 &lt;= <span class=\"number\">9</span>; cnt1++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (possibility[hash2[depth][<span class=\"number\">0</span>]][hash2[depth][<span class=\"number\">1</span>]][cnt1 - <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">                    sodu[hash2[depth][<span class=\"number\">0</span>]][hash2[depth][<span class=\"number\">1</span>]] = cnt1;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (IsRational() &amp;&amp; DFS(depth + <span class=\"number\">1</span>))</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">else</span></span><br><span class=\"line\">                        sodu[hash2[depth][<span class=\"number\">0</span>]][hash2[depth][<span class=\"number\">1</span>]] = <span class=\"number\">0</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">boolean</span> <span class=\"title function_\">solve</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (IsRational())</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (IsCalculatable() || DFS(<span class=\"number\">0</span>))</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"foreend\">ForeEnd</h2>\n<h3 id=\"framework\">Framework</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> foreEnd.frame;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.BorderLayout;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Container;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Timer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JFrame;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JLabel;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JMenu;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JMenuBar;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JScrollPane;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JTextField;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.ScrollPaneConstants;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> foreEnd.menu.MenuExit;</span><br><span class=\"line\"><span class=\"keyword\">import</span> foreEnd.menu.MenuFindAll;</span><br><span class=\"line\"><span class=\"keyword\">import</span> foreEnd.menu.MenuGenerate;</span><br><span class=\"line\"><span class=\"keyword\">import</span> foreEnd.menu.MenuHint;</span><br><span class=\"line\"><span class=\"keyword\">import</span> foreEnd.menu.MenuInput;</span><br><span class=\"line\"><span class=\"keyword\">import</span> foreEnd.menu.MenuPrint;</span><br><span class=\"line\"><span class=\"keyword\">import</span> foreEnd.menu.MenuSave;</span><br><span class=\"line\"><span class=\"keyword\">import</span> foreEnd.menu.MenuShow;</span><br><span class=\"line\"><span class=\"keyword\">import</span> foreEnd.menu.MenuSolve;</span><br><span class=\"line\"><span class=\"keyword\">import</span> foreEnd.menu.MenuSolve2;</span><br><span class=\"line\"><span class=\"keyword\">import</span> foreEnd.menu.MenuSolve3;</span><br><span class=\"line\"><span class=\"keyword\">import</span> foreEnd.menu.MenuSolve4;</span><br><span class=\"line\"><span class=\"keyword\">import</span> foreEnd.menu.MenuUsage;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Framework</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">JFrame</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">JMenuBar</span> <span class=\"variable\">menuBar</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JMenuBar</span>();</span><br><span class=\"line\">    <span class=\"type\">JMenu</span> <span class=\"variable\">file</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JMenu</span>(<span class=\"string\">&quot;File&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">JMenu</span> <span class=\"variable\">function</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JMenu</span>(<span class=\"string\">&quot;Function&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">MenuExit</span> <span class=\"variable\">menuExit</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MenuExit</span>();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">MenuPrint</span> <span class=\"variable\">menuPrint</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MenuPrint</span>();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">MenuInput</span> <span class=\"variable\">menuInput</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MenuInput</span>();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">MenuGenerate</span> <span class=\"variable\">menuGenerate</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MenuGenerate</span>();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">MenuSolve</span> <span class=\"variable\">menuSolve1</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MenuSolve</span>();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">MenuSolve2</span> <span class=\"variable\">menuSolve2</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MenuSolve2</span>();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">MenuSolve3</span> <span class=\"variable\">menuSolve3</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MenuSolve3</span>();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">MenuSolve4</span> <span class=\"variable\">menuSolve4</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MenuSolve4</span>();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">MenuFindAll</span> <span class=\"variable\">menuFindAll</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MenuFindAll</span>();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">MenuSave</span> <span class=\"variable\">menuSave</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MenuSave</span>();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">MenuHint</span> <span class=\"variable\">menuHint</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MenuHint</span>();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">MenuShow</span> <span class=\"variable\">menuShow</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MenuShow</span>();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">MenuUsage</span> <span class=\"variable\">menuUsage</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MenuUsage</span>();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">GameField</span> <span class=\"variable\">gamefield</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">GameField</span>();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">SuperTextArea</span> <span class=\"variable\">textArea</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SuperTextArea</span>(<span class=\"number\">14</span>, <span class=\"number\">30</span>);</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">JTextField</span> <span class=\"variable\">textField</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JTextField</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">    <span class=\"type\">Container</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> getContentPane();</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"variable\">v</span> <span class=\"operator\">=</span> ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"variable\">h</span> <span class=\"operator\">=</span> ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">JScrollPane</span> <span class=\"variable\">scrollPane</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JScrollPane</span>(textArea, v, h);</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">Terminal</span> <span class=\"variable\">terminal</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Terminal</span>();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> Timer userTimeAction;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Framework</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(<span class=\"string\">&quot;Sudoku&quot;</span>);</span><br><span class=\"line\">        textArea.setEditable(<span class=\"literal\">false</span>);</span><br><span class=\"line\">        MenuUsage.showUsage();</span><br><span class=\"line\">        textField.addActionListener(terminal);</span><br><span class=\"line\">        setLayout(<span class=\"keyword\">new</span> <span class=\"title class_\">BorderLayout</span>());</span><br><span class=\"line\">        setJMenuBar(menuBar);</span><br><span class=\"line\">        menuBar.add(file);</span><br><span class=\"line\">        menuBar.add(function);</span><br><span class=\"line\">        file.add(menuUsage);</span><br><span class=\"line\">        file.add(menuSave);</span><br><span class=\"line\">        file.add(menuShow);</span><br><span class=\"line\">        file.add(menuExit);</span><br><span class=\"line\">        function.add(menuPrint);</span><br><span class=\"line\">        function.add(menuInput);</span><br><span class=\"line\">        function.add(menuGenerate);</span><br><span class=\"line\">        function.add(menuSolve1);</span><br><span class=\"line\">        function.add(menuSolve2);</span><br><span class=\"line\">        function.add(menuSolve3);</span><br><span class=\"line\">        function.add(menuSolve4);</span><br><span class=\"line\">        function.add(menuFindAll);</span><br><span class=\"line\">        function.add(menuHint);</span><br><span class=\"line\">        c.add(<span class=\"string\">&quot;Center&quot;</span>, gamefield);</span><br><span class=\"line\">        c.add(<span class=\"string\">&quot;South&quot;</span>, terminal);</span><br><span class=\"line\">        terminal.add(<span class=\"string\">&quot;North&quot;</span>, scrollPane);</span><br><span class=\"line\">        terminal.add(<span class=\"string\">&quot;Center&quot;</span>, <span class=\"keyword\">new</span> <span class=\"title class_\">JLabel</span>(<span class=\"string\">&quot;Input&quot;</span>));</span><br><span class=\"line\">        terminal.add(<span class=\"string\">&quot;South&quot;</span>, textField);</span><br><span class=\"line\">        setSize(<span class=\"number\">550</span>, <span class=\"number\">900</span>);</span><br><span class=\"line\">        setLocation(<span class=\"number\">400</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class=\"line\">        setVisible(<span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"gamefield\">GameField</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> foreEnd.frame;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Color;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.MouseEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.MouseListener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JPanel;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.border.TitledBorder;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> backEnd.data.Data;</span><br><span class=\"line\"><span class=\"keyword\">import</span> backEnd.function.IsOK;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">GameField</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">JPanel</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">MouseListener</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> SudokuCell[][] cellbuttons;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> SelectNumFrame selectNum;</span><br><span class=\"line\"></span><br><span class=\"line\">    GameField() &#123;</span><br><span class=\"line\">        setBorder(<span class=\"keyword\">new</span> <span class=\"title class_\">TitledBorder</span>(<span class=\"string\">&quot;GameField&quot;</span>));</span><br><span class=\"line\">        setLayout(<span class=\"literal\">null</span>);</span><br><span class=\"line\">        cellbuttons = <span class=\"keyword\">new</span> <span class=\"title class_\">SudokuCell</span>[<span class=\"number\">9</span>][<span class=\"number\">9</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">9</span>; i++)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; <span class=\"number\">9</span>; j++) &#123;</span><br><span class=\"line\">                cellbuttons[i][j] = <span class=\"keyword\">new</span> <span class=\"title class_\">SudokuCell</span>();</span><br><span class=\"line\">                cellbuttons[i][j].setLocation(<span class=\"number\">20</span> + j * <span class=\"number\">50</span> + (j / <span class=\"number\">3</span>) * <span class=\"number\">5</span>, <span class=\"number\">20</span> + i * <span class=\"number\">50</span> + (i / <span class=\"number\">3</span>) * <span class=\"number\">5</span>);</span><br><span class=\"line\">                cellbuttons[i][j].x = i;</span><br><span class=\"line\">                cellbuttons[i][j].y = j;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"number\">0</span> != Data.cells[i][j]) &#123;</span><br><span class=\"line\">                    cellbuttons[i][j].setText(<span class=\"string\">&quot;&quot;</span> + Data.cells[i][j]);</span><br><span class=\"line\">                    cellbuttons[i][j].setEnabled(<span class=\"literal\">false</span>);</span><br><span class=\"line\">                    cellbuttons[i][j].setForeground(Color.black);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span></span><br><span class=\"line\">                    cellbuttons[i][j].addMouseListener(<span class=\"built_in\">this</span>);</span><br><span class=\"line\">                add(cellbuttons[i][j]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">mousePressed</span><span class=\"params\">(MouseEvent e)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> ((SudokuCell) e.getSource()).x;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> ((SudokuCell) e.getSource()).y;</span><br><span class=\"line\">        <span class=\"type\">int</span> value;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (selectNum != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            selectNum.dispose();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        selectNum = <span class=\"keyword\">new</span> <span class=\"title class_\">SelectNumFrame</span>();</span><br><span class=\"line\">        selectNum.setModal(<span class=\"literal\">true</span>);</span><br><span class=\"line\">        selectNum.setLocation(e.getLocationOnScreen().x, e.getLocationOnScreen().y);</span><br><span class=\"line\">        selectNum.setCell((SudokuCell) e.getSource());</span><br><span class=\"line\">        selectNum.setVisible(<span class=\"literal\">true</span>);</span><br><span class=\"line\">        value = Integer.parseInt(((SudokuCell) e.getSource()).getText());</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (IsOK.isOK(i, j, value)) &#123;</span><br><span class=\"line\">            Data.cells[i][j] = value;</span><br><span class=\"line\">            Framework.textArea.append(<span class=\"string\">&quot;Your command:put &quot;</span> + i + <span class=\"string\">&quot; &quot;</span> + j + <span class=\"string\">&quot; &quot;</span> + value + <span class=\"string\">&quot;\\nWait command\\n&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            cellbuttons[i][j].setText(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">            Data.cells[i][j] = <span class=\"number\">0</span>;</span><br><span class=\"line\">            cellbuttons[i][j].setBackground(Color.black);</span><br><span class=\"line\">            Framework.textArea.append(<span class=\"string\">&quot;Your command:put &quot;</span> + i + <span class=\"string\">&quot; &quot;</span> + j + <span class=\"string\">&quot; &quot;</span> + value + <span class=\"string\">&quot;\\nWait command\\n&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">mouseClicked</span><span class=\"params\">(MouseEvent e)</span> &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">mouseReleased</span><span class=\"params\">(MouseEvent e)</span> &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">mouseEntered</span><span class=\"params\">(MouseEvent e)</span> &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">mouseExited</span><span class=\"params\">(MouseEvent e)</span> &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"mythread\">Mythread</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> foreEnd.frame;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyThread</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Thread</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">MyThread</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        setPriority(MAX_PRIORITY);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        Framework.textField.setText(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">        Framework.textArea.append(<span class=\"string\">&quot;Program exits in 5 seconds.Bye!\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">long</span> <span class=\"variable\">begintime</span> <span class=\"operator\">=</span> System.currentTimeMillis();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (;;) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"number\">5000</span> &lt; System.currentTimeMillis() - begintime)</span><br><span class=\"line\">                System.exit(<span class=\"number\">0</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"selectnumframe\">SelectNumFrame</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> foreEnd.frame;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Color;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.MouseEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.MouseListener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JButton;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JDialog;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">SelectNumFrame</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">JDialog</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">MouseListener</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> SudokuCell cell;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setCell</span><span class=\"params\">(SudokuCell cell_2)</span> &#123;</span><br><span class=\"line\">        cell = cell_2;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">SelectNumFrame</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        setTitle(<span class=\"string\">&quot;Put&quot;</span>);</span><br><span class=\"line\">        setSize(<span class=\"number\">160</span>, <span class=\"number\">185</span>);</span><br><span class=\"line\">        setBackground(Color.blue);</span><br><span class=\"line\">        setLayout(<span class=\"literal\">null</span>);</span><br><span class=\"line\">        addNum();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">addNum</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; <span class=\"number\">3</span>; j++) &#123;</span><br><span class=\"line\">                <span class=\"type\">JButton</span> <span class=\"variable\">btn</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JButton</span>();</span><br><span class=\"line\">                btn.setSize(<span class=\"number\">50</span>, <span class=\"number\">50</span>);</span><br><span class=\"line\">                btn.setLocation(i * <span class=\"number\">50</span>, j * <span class=\"number\">50</span>);</span><br><span class=\"line\">                btn.setText(<span class=\"string\">&quot;&quot;</span> + (j * <span class=\"number\">3</span> + i + <span class=\"number\">1</span>));</span><br><span class=\"line\">                btn.addMouseListener(<span class=\"built_in\">this</span>);</span><br><span class=\"line\">                <span class=\"built_in\">this</span>.add(btn);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">mousePressed</span><span class=\"params\">(MouseEvent e)</span> &#123;</span><br><span class=\"line\">        cell.setText(((JButton) e.getSource()).getText());</span><br><span class=\"line\">        cell.setBackground(Color.orange);</span><br><span class=\"line\">        dispose();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">mouseClicked</span><span class=\"params\">(MouseEvent e)</span> &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">mouseReleased</span><span class=\"params\">(MouseEvent e)</span> &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">mouseEntered</span><span class=\"params\">(MouseEvent e)</span> &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">mouseExited</span><span class=\"params\">(MouseEvent e)</span> &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">```## SudokuCell</span><br><span class=\"line\"></span><br><span class=\"line\">```java</span><br><span class=\"line\"><span class=\"keyword\">package</span> foreEnd.frame;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Color;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Font;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JButton;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SudokuCell</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">JButton</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> x, y;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">SudokuCell</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        setSize(<span class=\"number\">50</span>, <span class=\"number\">50</span>);</span><br><span class=\"line\">        <span class=\"type\">Font</span> <span class=\"variable\">font</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Font</span>(<span class=\"string\">&quot;&quot;</span>, <span class=\"number\">2</span>, <span class=\"number\">24</span>);</span><br><span class=\"line\">        setFont(font);</span><br><span class=\"line\">        setBackground(Color.black);</span><br><span class=\"line\">        setForeground(Color.white);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"supertextarea\">SuperTextArea</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> foreEnd.frame;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Font;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JTextArea;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SuperTextArea</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">JTextArea</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">SuperTextArea</span><span class=\"params\">(<span class=\"type\">int</span> m, <span class=\"type\">int</span> n)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(m, n);</span><br><span class=\"line\">        setFont(<span class=\"keyword\">new</span> <span class=\"title class_\">Font</span>(<span class=\"string\">&quot;Arial&quot;</span>, Font.BOLD, <span class=\"number\">14</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">append</span><span class=\"params\">(String str)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>.append(str);</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.setCaretPosition(<span class=\"built_in\">this</span>.getText().length());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"terminal\">Terminal</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> foreEnd.frame;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.BorderLayout;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionListener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JPanel;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.border.TitledBorder;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> backEnd.function.FindAll;</span><br><span class=\"line\"><span class=\"keyword\">import</span> backEnd.function.Generate;</span><br><span class=\"line\"><span class=\"keyword\">import</span> backEnd.function.Hint;</span><br><span class=\"line\"><span class=\"keyword\">import</span> backEnd.function.Input;</span><br><span class=\"line\"><span class=\"keyword\">import</span> backEnd.function.Print;</span><br><span class=\"line\"><span class=\"keyword\">import</span> backEnd.function.Put;</span><br><span class=\"line\"><span class=\"keyword\">import</span> backEnd.function.Save;</span><br><span class=\"line\"><span class=\"keyword\">import</span> backEnd.function.Show;</span><br><span class=\"line\"><span class=\"keyword\">import</span> backEnd.function.Solve;</span><br><span class=\"line\"><span class=\"keyword\">import</span> foreEnd.menu.MenuUsage;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Terminal</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">JPanel</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">ActionListener</span> &#123;</span><br><span class=\"line\">    Terminal() &#123;</span><br><span class=\"line\">        setBorder(<span class=\"keyword\">new</span> <span class=\"title class_\">TitledBorder</span>(<span class=\"string\">&quot;Terminal&quot;</span>));</span><br><span class=\"line\">        setLayout(<span class=\"keyword\">new</span> <span class=\"title class_\">BorderLayout</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">actionPerformed</span><span class=\"params\">(ActionEvent e)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (e.getSource() == Framework.textField) &#123;</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> Framework.textField.getText();</span><br><span class=\"line\">            Framework.textArea.append(<span class=\"string\">&quot;Your command:&quot;</span> + s + <span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">            Framework.textField.setText(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s.equals(<span class=\"string\">&quot;exit&quot;</span>))</span><br><span class=\"line\">                <span class=\"keyword\">new</span> <span class=\"title class_\">MyThread</span>().start();</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s.equals(<span class=\"string\">&quot;print&quot;</span>))</span><br><span class=\"line\">                Print.print();</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s.length() &gt;= <span class=\"number\">167</span> &amp;&amp; s.substring(<span class=\"number\">0</span>, <span class=\"number\">5</span>).equals(<span class=\"string\">&quot;input&quot;</span>))</span><br><span class=\"line\">                Input.input(s);</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s.length() &gt;= <span class=\"number\">9</span> &amp;&amp; s.substring(<span class=\"number\">0</span>, <span class=\"number\">3</span>).equals(<span class=\"string\">&quot;put&quot;</span>))</span><br><span class=\"line\">                Put.put(s);</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s.equals(<span class=\"string\">&quot;generate&quot;</span>))</span><br><span class=\"line\">                Generate.generate();</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s.equals(<span class=\"string\">&quot;A*&quot;</span>))</span><br><span class=\"line\">                Solve.a_star_solve();</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s.equals(<span class=\"string\">&quot;BT&quot;</span>))</span><br><span class=\"line\">                Solve.bt_solve();</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s.equals(<span class=\"string\">&quot;DFS&quot;</span>))</span><br><span class=\"line\">                Solve.dfs_solve();</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s.equals(<span class=\"string\">&quot;IDDFS&quot;</span>))</span><br><span class=\"line\">                Solve.iddfs_solve();</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s.equals(<span class=\"string\">&quot;findall&quot;</span>))</span><br><span class=\"line\">                FindAll.findall();</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s.length() &gt;= <span class=\"number\">5</span> &amp;&amp; s.charAt(<span class=\"number\">4</span>) == <span class=\"string\">&#x27; &#x27;</span> &amp;&amp; s.substring(<span class=\"number\">0</span>, <span class=\"number\">4</span>).equals(<span class=\"string\">&quot;save&quot;</span>))</span><br><span class=\"line\">                Save.save(s.substring(<span class=\"number\">5</span>));</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s.equals(<span class=\"string\">&quot;hint&quot;</span>))</span><br><span class=\"line\">                Hint.hint();</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s.equals(<span class=\"string\">&quot;show&quot;</span>))</span><br><span class=\"line\">                Show.show();</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s.equals(<span class=\"string\">&quot;usage&quot;</span>))</span><br><span class=\"line\">                MenuUsage.showUsage();</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s.length() &gt;= <span class=\"number\">6</span> &amp;&amp; s.substring(<span class=\"number\">0</span>, <span class=\"number\">4</span>).equals(<span class=\"string\">&quot;show&quot;</span>))</span><br><span class=\"line\">                Show.show(s);</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                Framework.textArea.append(<span class=\"string\">&quot;Error1:syntax error\\n&quot;</span>);</span><br><span class=\"line\">            Framework.textArea.append(<span class=\"string\">&quot;Wait for command\\n&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"menu\">Menu</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> foreEnd.menu;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionListener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JMenuItem;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> foreEnd.frame.Framework;</span><br><span class=\"line\"><span class=\"keyword\">import</span> foreEnd.frame.MyThread;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MenuExit</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">JMenuItem</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">ActionListener</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">MenuExit</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        setText(<span class=\"string\">&quot;Exit&quot;</span>);</span><br><span class=\"line\">        addActionListener(<span class=\"built_in\">this</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">actionPerformed</span><span class=\"params\">(ActionEvent e)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (e.getSource() == Framework.menuExit) &#123;</span><br><span class=\"line\">            Framework.textArea.append(<span class=\"string\">&quot;Your command:exit\\n&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">new</span> <span class=\"title class_\">MyThread</span>().start();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> foreEnd.menu;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionListener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JMenuItem;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> backEnd.function.FindAll;</span><br><span class=\"line\"><span class=\"keyword\">import</span> foreEnd.frame.Framework;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MenuFindAll</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">JMenuItem</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">ActionListener</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">MenuFindAll</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        setText(<span class=\"string\">&quot;FindAll&quot;</span>);</span><br><span class=\"line\">        addActionListener(<span class=\"built_in\">this</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">actionPerformed</span><span class=\"params\">(ActionEvent e)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (e.getSource() == Framework.menuFindAll) &#123;</span><br><span class=\"line\">            Framework.textArea.append(<span class=\"string\">&quot;Your command:findall\\n&quot;</span>);</span><br><span class=\"line\">            FindAll.findall();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> foreEnd.menu;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionListener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JMenuItem;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> backEnd.function.Generate;</span><br><span class=\"line\"><span class=\"keyword\">import</span> foreEnd.frame.Framework;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MenuGenerate</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">JMenuItem</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">ActionListener</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">MenuGenerate</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        setText(<span class=\"string\">&quot;Generate&quot;</span>);</span><br><span class=\"line\">        addActionListener(<span class=\"built_in\">this</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">actionPerformed</span><span class=\"params\">(ActionEvent e)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (e.getSource() == Framework.menuGenerate) &#123;</span><br><span class=\"line\">            Framework.textArea.append(<span class=\"string\">&quot;Your command:generate\\n&quot;</span>);</span><br><span class=\"line\">            Generate.generate();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> foreEnd.menu;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionListener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JMenuItem;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> backEnd.function.Hint;</span><br><span class=\"line\"><span class=\"keyword\">import</span> foreEnd.frame.Framework;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MenuHint</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">JMenuItem</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">ActionListener</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">MenuHint</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        setText(<span class=\"string\">&quot;Hint&quot;</span>);</span><br><span class=\"line\">        addActionListener(<span class=\"built_in\">this</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">actionPerformed</span><span class=\"params\">(ActionEvent e)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (e.getSource() == Framework.menuHint) &#123;</span><br><span class=\"line\">            Framework.textArea.append(<span class=\"string\">&quot;Your command:hint\\n&quot;</span>);</span><br><span class=\"line\">            Hint.hint();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> foreEnd.menu;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionListener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JMenuItem;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> foreEnd.frame.Framework;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MenuInput</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">JMenuItem</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">ActionListener</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">MenuInput</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        setText(<span class=\"string\">&quot;Input&quot;</span>);</span><br><span class=\"line\">        addActionListener(<span class=\"built_in\">this</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">actionPerformed</span><span class=\"params\">(ActionEvent e)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (e.getSource() == Framework.menuInput) &#123;</span><br><span class=\"line\">            Framework.textArea.append(</span><br><span class=\"line\">                    <span class=\"string\">&quot;Your command:input\\nPlease input your sudoku formally in input textfield\\nFormat:\\&quot;input a b...\\&quot;,a,b...are numbers spilted by ONE vacancy\\nWaiting for command&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> foreEnd.menu;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionListener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JMenuItem;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> backEnd.function.Print;</span><br><span class=\"line\"><span class=\"keyword\">import</span> foreEnd.frame.Framework;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MenuPrint</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">JMenuItem</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">ActionListener</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">MenuPrint</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        setText(<span class=\"string\">&quot;Print&quot;</span>);</span><br><span class=\"line\">        addActionListener(<span class=\"built_in\">this</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">actionPerformed</span><span class=\"params\">(ActionEvent e)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (e.getSource() == Framework.menuPrint) &#123;</span><br><span class=\"line\">            Framework.textArea.append(<span class=\"string\">&quot;Your command:print\\n&quot;</span>);</span><br><span class=\"line\">            Print.print();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> foreEnd.menu;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionListener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JMenuItem;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> foreEnd.frame.Framework;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MenuSave</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">JMenuItem</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">ActionListener</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">MenuSave</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        setText(<span class=\"string\">&quot;Save&quot;</span>);</span><br><span class=\"line\">        addActionListener(<span class=\"built_in\">this</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">actionPerformed</span><span class=\"params\">(ActionEvent e)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (e.getSource() == Framework.menuSave) &#123;</span><br><span class=\"line\">            Framework.textArea.append(</span><br><span class=\"line\">                    <span class=\"string\">&quot;Your command:save\\nInput your game record name.\\nFormat:\\&quot;save name\\&quot;,name is your expected file name.&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> foreEnd.menu;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionListener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JMenuItem;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> backEnd.function.Show;</span><br><span class=\"line\"><span class=\"keyword\">import</span> foreEnd.frame.Framework;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MenuShow</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">JMenuItem</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">ActionListener</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">MenuShow</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        setText(<span class=\"string\">&quot;Show&quot;</span>);</span><br><span class=\"line\">        addActionListener(<span class=\"built_in\">this</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">actionPerformed</span><span class=\"params\">(ActionEvent e)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (e.getSource() == Framework.menuShow) &#123;</span><br><span class=\"line\">            Framework.textArea.append(<span class=\"string\">&quot;Your command:show\\n&quot;</span>);</span><br><span class=\"line\">            Show.show();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> foreEnd.menu;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionListener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JMenuItem;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> backEnd.function.Solve;</span><br><span class=\"line\"><span class=\"keyword\">import</span> foreEnd.frame.Framework;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MenuSolve</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">JMenuItem</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">ActionListener</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">MenuSolve</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        setText(<span class=\"string\">&quot;Solve(BT)&quot;</span>);</span><br><span class=\"line\">        addActionListener(<span class=\"built_in\">this</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">actionPerformed</span><span class=\"params\">(ActionEvent e)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (e.getSource() == Framework.menuSolve1) &#123;</span><br><span class=\"line\">            Framework.textArea.append(<span class=\"string\">&quot;Your command:solve(BT)\\n&quot;</span>);</span><br><span class=\"line\">            Solve.bt_solve();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> foreEnd.menu;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionListener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JMenuItem;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> backEnd.function.Solve;</span><br><span class=\"line\"><span class=\"keyword\">import</span> foreEnd.frame.Framework;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MenuSolve2</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">JMenuItem</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">ActionListener</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">MenuSolve2</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        setText(<span class=\"string\">&quot;Solve(IDDFS)&quot;</span>);</span><br><span class=\"line\">        addActionListener(<span class=\"built_in\">this</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">actionPerformed</span><span class=\"params\">(ActionEvent e)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (e.getSource() == Framework.menuSolve2) &#123;</span><br><span class=\"line\">            Framework.textArea.append(<span class=\"string\">&quot;Your command:solve(IDDFS)\\n&quot;</span>);</span><br><span class=\"line\">            Solve.iddfs_solve();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> foreEnd.menu;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionListener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JMenuItem;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> backEnd.function.Solve;</span><br><span class=\"line\"><span class=\"keyword\">import</span> foreEnd.frame.Framework;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MenuSolve3</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">JMenuItem</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">ActionListener</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">MenuSolve3</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        setText(<span class=\"string\">&quot;Solve(DFS)&quot;</span>);</span><br><span class=\"line\">        addActionListener(<span class=\"built_in\">this</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">actionPerformed</span><span class=\"params\">(ActionEvent e)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (e.getSource() == Framework.menuSolve3) &#123;</span><br><span class=\"line\">            Framework.textArea.append(<span class=\"string\">&quot;Your command:solve(DFS)\\n&quot;</span>);</span><br><span class=\"line\">            Solve.dfs_solve();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> foreEnd.menu;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionListener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JMenuItem;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> backEnd.function.Solve;</span><br><span class=\"line\"><span class=\"keyword\">import</span> foreEnd.frame.Framework;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MenuSolve4</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">JMenuItem</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">ActionListener</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">MenuSolve4</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        setText(<span class=\"string\">&quot;Solve(A*)&quot;</span>);</span><br><span class=\"line\">        addActionListener(<span class=\"built_in\">this</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">actionPerformed</span><span class=\"params\">(ActionEvent e)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (e.getSource() == Framework.menuSolve4) &#123;</span><br><span class=\"line\">            Framework.textArea.append(<span class=\"string\">&quot;Your command:solve(A*)\\n&quot;</span>);</span><br><span class=\"line\">            Solve.a_star_solve();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> foreEnd.menu;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionListener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JMenuItem;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> foreEnd.frame.Framework;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MenuUsage</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">JMenuItem</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">ActionListener</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">String</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;Welcome to my sudoku world!\\n&quot;</span> + <span class=\"string\">&quot;usage:\\n&quot;</span></span><br><span class=\"line\">            + <span class=\"string\">&quot;1.Enter \\&quot;exit\\&quot; or press \\&quot;Exit\\&quot; to quit programme in 5 minutes.\\n&quot;</span></span><br><span class=\"line\">            + <span class=\"string\">&quot;2.Enter \\&quot;print\\&quot; or press \\&quot;Print\\&quot; to print current sudoku state. 0 filled for vacancy. \\n&quot;</span></span><br><span class=\"line\">            + <span class=\"string\">&quot;3.press \\&quot;Input\\&quot; to input a soduku. Cement format shown then.\\n&quot;</span></span><br><span class=\"line\">            + <span class=\"string\">&quot;4.Enter or press \\&quot;generate\\&quot; to generate a sudoku which has 17 non-zero at least numbers at random.\\n&quot;</span></span><br><span class=\"line\">            + <span class=\"string\">&quot;5.Enter \\&quot;DFS\\&quot; or press \\&quot;Solve(DFS)\\&quot; to solve surrent sudoku by depth-first search method.\\n&quot;</span></span><br><span class=\"line\">            + <span class=\"string\">&quot;6.Enter \\&quot;IDDFS\\&quot; or press \\&quot;Solve(IDDFS)\\&quot; to solve surrent sudoku by iterative deepening depth-first search method.\\n&quot;</span></span><br><span class=\"line\">            + <span class=\"string\">&quot;7.Enter \\&quot;A*\\&quot; or press \\&quot;Solve(A*)\\&quot; to solve surrent sudoku by heuristically search method.\\n&quot;</span></span><br><span class=\"line\">            + <span class=\"string\">&quot;8.Enter \\&quot;put x y z\\&quot; or choose number by mouse to put z into x row y column.Array counted from 0. \\n&quot;</span></span><br><span class=\"line\">            + <span class=\"string\">&quot;9.Enter \\&quot;hint\\&quot; or press \\&quot;Hint\\&quot; to get a hint cell.\\n&quot;</span></span><br><span class=\"line\">            + <span class=\"string\">&quot;10.Press \\&quot;Save\\&quot; to save current sudoku. Operation following shown then.\\n&quot;</span></span><br><span class=\"line\">            + <span class=\"string\">&quot;11.Enter \\&quot;show\\&quot; or press \\&quot;Show\\&quot; to view saved game. Operation following shown then.\\n&quot;</span></span><br><span class=\"line\">            + <span class=\"string\">&quot;12.Enter \\&quot;usage\\&quot; or press \\&quot;Usage\\&quot; to get usage.\\n&quot;</span></span><br><span class=\"line\">            + <span class=\"string\">&quot;13.Enter \\&quot;findall\\&quot; or press\\&quot;FindAll\\&quot; to find all solution(s) by multi-threads method.\\n&quot;</span></span><br><span class=\"line\">            + <span class=\"string\">&quot;14.Enter \\&quot;BT\\&quot; or press \\&quot;Solve(BT)\\&quot; to solve surrent sudoku by back tracking method.\\n&quot;</span></span><br><span class=\"line\">            + <span class=\"string\">&quot;Error list:\\n&quot;</span> + <span class=\"string\">&quot;Error1:syntax error\\n&quot;</span> + <span class=\"string\">&quot;Error2:data range exceed\\n&quot;</span> + <span class=\"string\">&quot;Error3:illegal location\\n&quot;</span></span><br><span class=\"line\">            + <span class=\"string\">&quot;Error4:illegal, the line x column y has the same number\\n&quot;</span></span><br><span class=\"line\">            + <span class=\"string\">&quot;Error5:there is already a number in this position\\n&quot;</span> + <span class=\"string\">&quot;Error6:No Answer\\n&quot;</span> + <span class=\"string\">&quot;Error7:file existed\\n&quot;</span></span><br><span class=\"line\">            + <span class=\"string\">&quot;Have fun!\\n&quot;</span> + <span class=\"string\">&quot;Waiting for command:&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">MenuUsage</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        setText(<span class=\"string\">&quot;Usage&quot;</span>);</span><br><span class=\"line\">        addActionListener(<span class=\"built_in\">this</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">actionPerformed</span><span class=\"params\">(ActionEvent e)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (e.getSource() == Framework.menuUsage) &#123;</span><br><span class=\"line\">            Framework.textArea.append(<span class=\"string\">&quot;Your command:usage\\n&quot;</span>);</span><br><span class=\"line\">            showUsage();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">showUsage</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        Framework.textArea.append(str);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"main\">Main</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> backEnd.data.Data;</span><br><span class=\"line\"><span class=\"keyword\">import</span> foreEnd.frame.Framework;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Main</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">Data</span>();</span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">Framework</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","categories":["Computer Science"],"tags":["Java"]},{"title":"Solutions to Quantum Physics Homework","url":"/2022/04/11/Solutions-to-Quantum-Physics-Homework/","content":"<p>为适应科大新培养方案的要求，替代原普通物理课程“光学与原子物理”，新设的课程 “量子物理”需要对教学内容作较大幅度的压缩和调整。按照课程组协商意见，删去光学和原子物理学中比较专业化的内容，改以讲授量子理论为主，并增加有关量子信息的介绍，同时取消了作业详细解答的下发。本人出于为考试前有材料复习的目的，整理了此习题解答。</p>\n<span id=\"more\"></span>\n<h1 id=\"几何光学简介\">几何光学简介</h1>\n<p>1、设在阳光暴晒下，马路上方空气折射率<span class=\"math inline\">\\(n\\)</span>随高度<span class=\"math inline\">\\(y\\)</span>的变化规律为 <span class=\"math display\">\\[\nn(y) = n_0 (1 + Ay), A = 0.8 × 10^{−6}m^{−1}.\n\\]</span></p>\n<p>一人站在马路上向前看，能看到多远？设此人眼睛离地面高度为 <span class=\"math inline\">\\(1.6m\\)</span>。</p>\n<p>由费马原理， <span class=\"math display\">\\[\n\\int n\\mathrm ds=\\int n_0(1+Ay)\\sqrt{(1+y^2)}\\mathrm dx=\\int F(x,y,y^{&#39;})\\mathrm dx\n\\]</span> 极值曲线满足Euler-Lagrange方程 <span class=\"math display\">\\[\n\\frac{\\partial F}{\\partial y}-\\frac{\\mathrm d}{\\mathrm dx}\\frac{\\partial F}{\\partial y^{&#39;}}=0,\n\\]</span> 得到 <span class=\"math display\">\\[\nA=(1+Ay)\\frac{y^{&#39;&#39;}}{1+{y^{&#39;}}^2}\n\\]</span> 令 <span class=\"math display\">\\[\np=\\frac{\\mathrm dy}{\\mathrm dx},\n\\]</span> 得到 <span class=\"math display\">\\[\n\\frac{\\mathrm dy}{a+Ay}=\\frac{p\\mathrm dp}{A(1+p^2)}.\n\\]</span> 积分得 <span class=\"math display\">\\[\n\\ln(1+Ay)=\\frac12\\ln(1+p^2)+C.\n\\]</span> 根据“最远处”条件，当<span class=\"math inline\">\\(y=0\\)</span>时，有<span class=\"math inline\">\\(p=0\\)</span>，故<span class=\"math inline\">\\(C=0\\)</span>。</p>\n<p>于是 <span class=\"math display\">\\[\n1+Ay=\\sqrt{1+{y^{&#39;}}^2}.\n\\]</span> 令 <span class=\"math display\">\\[\n\\cosh t=1+Ay,\n\\]</span> 则 <span class=\"math display\">\\[\nAx+C_1=t=\\ln(Ay+1+\\sqrt{(Ay+1)^2-1}).\n\\]</span> 代入<span class=\"math inline\">\\((x,y)=(0,0)\\)</span>得<span class=\"math inline\">\\(C_1=0\\)</span>，</p>\n<p>代入<span class=\"math inline\">\\(y=1.6m\\)</span>，得<span class=\"math inline\">\\(x=1999.9998m\\)</span>。</p>\n<p>2、有一个半径为<span class=\"math inline\">\\(a\\)</span>的透明小球，折射率是<span class=\"math inline\">\\(n\\)</span>。取光轴为沿水平方向过球心的直线。一条光线从左侧平行于光轴入射，与 光轴的距离是<span class=\"math inline\">\\(x\\)</span>。经过两次折射后得到出射光线，求出射光线与入射光线的夹角。</p>\n<p>记空气折射率为<span class=\"math inline\">\\(n_0\\)</span>，则 <span class=\"math display\">\\[\n\\sin \\theta_1=\\frac x a,\n\\]</span> 第一次折射，有 <span class=\"math display\">\\[\nn_0\\sin\\theta_1=n\\sin\\theta_2,\n\\]</span></p>\n<p>第二次折射，有 <span class=\"math display\">\\[\nn\\sin\\theta_2=n\\sin\\theta_3,\n\\]</span> 光线偏折角度 <span class=\"math display\">\\[\n\\Delta\\theta=(\\theta_1-\\theta_2)+(\\theta_3-\\theta_2)=2(\\arcsin\\frac x a-\\arcsin\\frac{n_0x}{na}).\n\\]</span></p>\n<h1 id=\"光的基本性质\">光的基本性质</h1>\n<p>3、平面波在<span class=\"math inline\">\\(y-z\\)</span>平面内，沿着与<span class=\"math inline\">\\(𝑦-\\)</span>轴夹角为<span class=\"math inline\">\\(30^\\circ\\)</span>方向传播，写出它的标量波函数、复波函数和复振幅。</p>\n<p>波矢 <span class=\"math display\">\\[\n\\vec k=\\frac{2\\pi}\\lambda(0,\\frac {\\sqrt 3} 2,\\frac 1 2),\n\\]</span> 标量波函数 <span class=\"math display\">\\[\nE=E_0\\cos(\\omega t-\\vec k\\cdot\\vec r+\\varphi_0)=E_0\\cos(\\omega t-\\frac{\\sqrt3\\pi}\\lambda y- \\frac{\\pi}\\lambda z+\\varphi_0);\n\\]</span> 复波函数 <span class=\"math display\">\\[\n\\tilde E(t,\\vec r)=E_0e^{-\\mathrm i(\\omega t-\\vec k\\cdot\\vec r+\\varphi_0)}=E_0e^{-\\mathrm i(\\omega t-\\frac{\\sqrt3\\pi}\\lambda y- \\frac{\\pi}\\lambda z+\\varphi_0)}\n\\]</span> 复振幅 <span class=\"math display\">\\[\n\\tilde E_0(\\vec r)=E_0e^{-\\mathrm i(-\\vec k\\cdot\\vec r+\\varphi_0)}=E_0e^{-\\mathrm i(-\\frac{\\sqrt3\\pi}\\lambda y- \\frac{\\pi}\\lambda z+\\varphi_0)}\n\\]</span></p>\n<h1 id=\"光的干涉\">光的干涉</h1>\n<p>4、用很薄的云母片覆盖在双缝实验的一条缝上，看到干涉条纹移动了 <span class=\"math inline\">\\(9\\)</span>个条纹间距，求云母片的厚度。已知云母片折射率<span class=\"math inline\">\\(n= 1.58\\)</span>，光源波长 <span class=\"math inline\">\\(550nm\\)</span>。 <span class=\"math display\">\\[\nN\\lambda=\\delta(\\Delta L)=\\delta(L_1-L_2)=nh-h,\n\\]</span></p>\n<p><span class=\"math display\">\\[\nh=8.53\\mu m\n\\]</span></p>\n<p>5、三个扬声器排成直线，相距<span class=\"math inline\">\\(d\\)</span>，播放单频声音信号 <span class=\"math display\">\\[\n𝑠_𝑗 (𝑡) = 𝐴 \\cos(𝜔𝑡 + 𝜑_𝑗) ,𝑗 = 1,2,3.\n\\]</span></p>\n<p>远处一个麦克风在夹角为<span class=\"math inline\">\\(\\theta\\)</span>的方向接收声音。欲使麦克风处消音，三个初相位<span class=\"math inline\">\\(\\varphi_1,\\varphi_2,\\varphi_3\\)</span>应该满足什么关系？</p>\n<p>消声相当于振幅为0 <span class=\"math display\">\\[\nA\\cos(\\omega\\frac {l_1}{v_0}+\\varphi_1)+A\\cos(\\omega\\frac {l_2}{v_0}+\\varphi_2)+A\\cos(\\omega\\frac {l_3}{v_0}+\\varphi_3)=0.\n\\]</span> 几何关系 <span class=\"math display\">\\[\nl_1^2=d^2+l_2^2-2dl_2\\sin\\theta,\n\\]</span></p>\n<p><span class=\"math display\">\\[\nl_3^2=d^2+l_2^2+2dl_2\\sin\\theta.\n\\]</span></p>\n<p>远处近似 <span class=\"math display\">\\[\nl_1=l_2-d\\sin\\theta,\n\\]</span></p>\n<p><span class=\"math display\">\\[\nl_3=l_2+d\\sin\\theta.\n\\]</span></p>\n<p>故 <span class=\"math display\">\\[\n\\cos(\\frac\\omega{v_0}l_2-\\frac\\omega{v_0}d\\sin\\theta+\\varphi_1)+\\cos(\\frac\\omega{v_0}l_2+\\varphi_2)+\\cos(\\frac\\omega{v_0}l_2+\\frac\\omega{v_0}d\\sin\\theta+\\varphi_1)=0.\n\\]</span> 对<span class=\"math inline\">\\(\\forall l_2\\)</span>均成立，记其为<span class=\"math inline\">\\(f(l_2)=0\\)</span>，则<span class=\"math inline\">\\(\\frac{\\mathrm d}{\\mathrm d l_2}f(l_2)=0\\)</span>，</p>\n<p>即 <span class=\"math display\">\\[\n\\sin(\\frac\\omega{v_0}l_2-\\frac\\omega{v_0}d\\sin\\theta+\\varphi_1)+\\sin(\\frac\\omega{v_0}l_2+\\varphi_2)+\\sin(\\frac\\omega{v_0}l_2+\\frac\\omega{v_0}d\\sin\\theta+\\varphi_1)=0.\n\\]</span> 平方相消得 <span class=\"math display\">\\[\n-\\frac12=\\cos(\\frac{2\\omega d}{v_0}\\sin\\theta+\\phi_3-\\phi_1).\n\\]</span></p>\n<p><span class=\"math display\">\\[\n\\varphi_3-\\varphi_1=\\frac43\\pi或\\frac53\\pi+2k\\pi-\\frac{2\\omega d\\sin\\theta}{v_0},k\\in Z\n\\]</span></p>\n<p>同理有 <span class=\"math display\">\\[\n\\varphi_3-\\varphi_2=\\frac43\\pi或\\frac53\\pi+2k\\pi-\\frac{\\omega d\\sin\\theta}{v_0},k\\in Z\n\\]</span></p>\n<p><span class=\"math display\">\\[\n\\varphi_2-\\varphi_1=\\frac43\\pi或\\frac53\\pi+2k\\pi-\\frac{\\omega d\\sin\\theta}{v_0},k\\in Z\n\\]</span></p>\n<p>利用约束条件 <span class=\"math display\">\\[\n\\varphi_2-\\varphi_1+\\varphi_3-\\varphi_2=\\varphi_3+\\varphi_1,\n\\]</span> 只能取 <span class=\"math display\">\\[\n(\\varphi_1,\\varphi_2,\\varphi_3)=(\\varphi,\\varphi+\\frac53\\pi+2k\\pi-\\frac{\\omega d\\sin\\theta}{v_0},\\varphi+\\frac{10}3\\pi+(2k+1)\\pi-\\frac{\\omega d\\sin\\theta}{v_0}),k\\in Z.\n\\]</span> 其中<span class=\"math inline\">\\(v_0\\)</span>是声速。</p>\n<p>6、在折射率为 <span class=\"math inline\">\\(1.5\\)</span> 的玻璃表面，镀上一层折射率为 <span class=\"math inline\">\\(1.30\\)</span> 的透明薄膜。对于 <span class=\"math inline\">\\(550nm\\)</span> 的黄绿光垂直入射的情形，为了增强透射光束强度，应使反射光干涉相消。求膜的厚度。</p>\n<p>此两个界面反射波均有半波损， <span class=\"math display\">\\[\n\\Delta L=2n_1 h=(k+0.5)\\lambda,k\\in \\mathbb R,\n\\]</span></p>\n<p><span class=\"math display\">\\[\nh=211.5(k+0.5)nm,k\\in \\mathbb R.\n\\]</span></p>\n<h1 id=\"光的衍射\">光的衍射</h1>\n<p>7、用波长 <span class=\"math inline\">\\(589.3nm\\)</span> 的钠黄光作为夫琅禾费单缝衍射的光源，测得第二极小到干涉图样中心的距离为 <span class=\"math inline\">\\(0.30cm\\)</span>。改用未知波长的单色光源，测得第三极小到中心的距离为 <span class=\"math inline\">\\(0.42cm\\)</span>。求未知波长。</p>\n<p>由 <span class=\"math display\">\\[\nx=\\frac{m\\lambda}az\n\\]</span> 得 <span class=\"math display\">\\[\n\\lambda=\\frac{0.42}3\\frac{2\\times589.3}{0.30}nm=550.0nm.\n\\]</span> 8、天空的两颗星相对于望远镜的角距离为<span class=\"math inline\">\\(4.8 × 10^{−6} rad\\)</span>，都发出 <span class=\"math inline\">\\(550nm\\)</span> 的光。望远镜的口径至少多大，才能分辨这两颗星？ <span class=\"math display\">\\[\n\\delta\\theta=1.22\\frac\\lambda D,\n\\]</span></p>\n<p><span class=\"math display\">\\[\nD=0.14m.\n\\]</span> 9、 用氦氖激光器发出的波长为 <span class=\"math inline\">\\(632.8nm\\)</span> 的红光，垂直入射到平面透射光栅上，测得第一级极大出现在 <span class=\"math inline\">\\(38^\\circ\\)</span>方向。</p>\n<p>（1）求光栅常数。 <span class=\"math display\">\\[\nd=\\frac{\\lambda_0}{\\sin\\theta}=1.028\\mu m.\n\\]</span> （2）能否看到第二级极大？ <span class=\"math display\">\\[\nm=\\frac{d\\sin\\theta}\\lambda\\leqslant\\frac d\\lambda&lt;2\n\\]</span> 故看不到第二级极大。</p>\n<p>10、 评估你的手机像素数目是否超过了镜头的光学衍射极限。估算所需的参数，如手机摄像头模组的光圈系数、像素、CMOS 图像传感器的尺寸等，请自行在网络上搜索。</p>\n<p>取分辨率<span class=\"math inline\">\\(10^8\\)</span>像素，光圈系数<span class=\"math inline\">\\(F_{2.2}\\)</span>，CMOS图像传感器尺寸为1cm。</p>\n<p>根据艾里斑可辨的瑞利条件，每一块艾里斑的最小大小为 <span class=\"math display\">\\[\nS=\\pi a^2f^2\\tan^2\\frac\\theta2\\approx\\pi a^2f^2\\sin^2\\frac\\theta2\\approx\\pi a^2\\frac{1.22^2}4(\\frac fd)^2\\lambda^2.\n\\]</span> 其中<span class=\"math inline\">\\(a\\in(1,2)\\)</span>，<span class=\"math inline\">\\(\\lambda\\)</span>为光波长，取红光760nm，则 <span class=\"math display\">\\[\nS_{max}=\\frac{4\\pi\\times1.22^2\\times760^2}{4\\times2\\times2^2}=5580.22nm^2.\n\\]</span></p>\n<p><span class=\"math display\">\\[\n10^8S_{max}=55.8mm^2&lt;100mm^2=S(CMOS),\n\\]</span></p>\n<p>故还没有达到光学极限。</p>\n<h1 id=\"光的偏振\">光的偏振</h1>\n<p>11、 四个偏振片依次前后排列。每个偏振片的透振方向，均相对于前一偏振片沿顺时针方向转过$ 30^{}$角。不考虑吸收、反射等光能损失，则透过此偏振片系统的光强是入射光强的多少倍？ <span class=\"math display\">\\[\nI=\\int_0^{2\\pi}\\frac{I_0}{2\\pi}(\\cos\\theta\\cos^3\\frac\\pi6)^2=\\frac{27I_0}{128}.\n\\]</span> 12、入射光是沿<span class=\"math inline\">\\(x-\\)</span>轴偏振的线偏振光，二分之一波片的快轴与<span class=\"math inline\">\\(x\\)</span>轴夹角是<span class=\"math inline\">\\(\\theta\\)</span>（逆时针为正）。写出入射光的琼斯矢量、二分之一波片的琼斯矩阵，计算出射光的琼斯矢量和偏振方向。</p>\n<p>入射光的琼斯矢量</p>\n\n$$\n\\begin{pmatrix}\n1\\\\\n0\n\\end{pmatrix}.\n$$\n\n<p><span class=\"math inline\">\\(\\frac12\\)</span>波片的琼斯矩阵为</p>\n\n$$\n\\begin{pmatrix}\n\\cos\\theta&-\\sin\\theta\\\\\n\\sin\\theta&\\cos\\theta\n\\end{pmatrix}\n\\begin{pmatrix}\n1&0\\\\\n0&-1\n\\end{pmatrix}\n\\begin{pmatrix}\n\\cos\\theta&-\\sin\\theta\\\\\n\\sin\\theta&\\cos\\theta\n\\end{pmatrix}^{-1}\n=\n\\begin{pmatrix}\n\\cos2\\theta&\\sin2\\theta\\\\\n\\sin2\\theta&-\\cos2\\theta\n\\end{pmatrix}.\n$$\n\n<p>出射光的琼斯矢量</p>\n\n$$\n\\begin{pmatrix}\n\\cos2\\theta&\\sin2\\theta\\\\\n\\sin2\\theta&-\\cos2\\theta\n\\end{pmatrix}\n\\begin{pmatrix}\n1\\\\\n0\n\\end{pmatrix}\n=\n\\begin{pmatrix}\n\\cos2\\theta\\\\\n\\sin2\\theta\n\\end{pmatrix}.\n$$\n\n<p>出射光的偏振方向：<span class=\"math inline\">\\(2\\theta\\)</span>。</p>\n<h1 id=\"光的量子性\">光的量子性</h1>\n<p>13、利用普朗克辐射公式，求斯特藩-玻尔兹曼定律常数<span class=\"math inline\">\\(\\sigma\\)</span>。 <span class=\"math display\">\\[\n(\\int_0^\\infty\\frac{x^3}{e^x-1}\\mathrm d x=\\frac{\\pi^4}{15})\n\\]</span> Stefan-Boltzman定律： <span class=\"math display\">\\[\nR=\\sigma T^4.\n\\]</span> Planck公式： <span class=\"math display\">\\[\nR=\\int_0^{+\\infty}r_0(\\lambda,T)\\mathrm d\\lambda=\\int_0^{+\\infty}\\frac{2\\pi hc^2}{\\lambda^5e^{\\frac{hc}{\\lambda k_BT}-1}}\\mathrm d\\lambda=\\frac{2\\pi^5k_B^4}{15h^3c^2}T^4.\n\\]</span> 故 <span class=\"math display\">\\[\n\\sigma=\\frac{2\\pi^5k_B^4}{15h^3c^2}.\n\\]</span> 14、热核爆炸中火球的温度可达<span class=\"math inline\">\\(10^7K\\)</span>，</p>\n<p>（1）求辐射最强的波长；</p>\n<p>由Wien位移公式 <span class=\"math display\">\\[\n\\lambda_m=\\frac bT=\\frac{0.2898}{10^7}cm=2.898\\times10^{-10}m.\n\\]</span> （2）这种波长的光子能量是多少？ <span class=\"math display\">\\[\n\\varepsilon=h\\nu-\\frac{hc}{\\lambda_m}=6.859\\times10^{-16}J.\n\\]</span> 15、 铝的脱出功是 <span class=\"math inline\">\\(4.2eV\\)</span>，用波长为$ 200nm$ 的光照射铝表面，</p>\n<p>（1）求铝的截止波长。 <span class=\"math display\">\\[\n\\lambda_0=\\frac c\\nu=\\frac{hc}{A}=295.8nm.\n\\]</span> （2）光电子的最大初动能。 <span class=\"math display\">\\[\n\\varepsilon=h\\nu-A=\\frac {hc}\\lambda-A=2.01eV.\n\\]</span> （3）求截止电压。 <span class=\"math display\">\\[\nU=\\frac\\varepsilon e=2.01V.\n\\]</span> （4）如果入射光强是<span class=\"math inline\">\\(2.0W/m^2\\)</span> ，阴极面积是<span class=\"math inline\">\\(1m^2\\)</span>，光束垂直照射阴极，那么饱和电流最大是多少？ <span class=\"math display\">\\[\nI=\\frac{\\mathrm dq}{\\mathrm dt}=e\\frac{\\mathrm dN}{\\mathrm dt}=e\\frac{\\mathrm d\\frac W{\\frac{hc}\\lambda}}{\\mathrm dt}=\\frac {eIS}\\varepsilon=0.32A.\n\\]</span> 16、能量为$ 0.41MeV $的 X 射线光子与静止的自由电子碰撞，反冲电子的速度为<span class=\"math inline\">\\(0.6c\\)</span>，求散射光的波长和散射角。</p>\n<p>由能量守恒 <span class=\"math display\">\\[\nm_ec^2+E=+\\frac{m_e}{\\sqrt{1-(\\frac vc)^2}}c^2+\\frac{hc}{\\lambda_1}.\n\\]</span> 得 <span class=\"math display\">\\[\n\\lambda_1=4.397\\times10^{-12}m.\n\\]</span> 碰撞前X射线波长 <span class=\"math display\">\\[\n\\lambda_0=\\frac{hc}E=3.024\\times10^{-12}m.\n\\]</span> 利用康普顿散射公式 <span class=\"math display\">\\[\n\\lambda_0-\\lambda_1=2\\frac h{m_ec}\\sin^2\\frac\\theta2,\n\\]</span> 有 <span class=\"math display\">\\[\n\\theta=64.28^\\circ.\n\\]</span> 17、用<span class=\"math inline\">\\(1mW\\)</span>的单色激光射向透明的球状小颗粒。设颗粒半径为<span class=\"math inline\">\\(a\\)</span>，折射率是 <span class=\"math inline\">\\(n\\)</span>。假如颗粒偏离激光的距离为<span class=\"math inline\">\\(x\\)</span>，那么颗粒所受到的垂直于入射激光方向的横向力有多大， 指向那个方向？</p>\n<p>记空气折射率为<span class=\"math inline\">\\(n_0=1\\)</span>，则 <span class=\"math display\">\\[\n\\sin \\theta_1=\\frac x a,\n\\]</span> 第一次折射，有 <span class=\"math display\">\\[\nn_0\\sin\\theta_1=n\\sin\\theta_2,\n\\]</span></p>\n<p>第二次折射，有 <span class=\"math display\">\\[\nn\\sin\\theta_2=n\\sin\\theta_3,\n\\]</span> 光线偏折角度 <span class=\"math display\">\\[\n\\Delta\\theta=(\\theta_1-\\theta_2)+(\\theta_3-\\theta_2)=2(\\arcsin\\frac x a-\\arcsin\\frac{x}{na}).\n\\]</span></p>\n<p>横向力 <span class=\"math display\">\\[\nF=2\\frac{\\mathrm dp}{\\mathrm dt}\\sin\\frac{\\Delta \\theta}2=2\\frac{\\mathrm dW}{c\\mathrm dt}\\sin\\frac{\\Delta\\theta}2=2\\frac Pc\\sin(\\arcsin\\frac xa-\\arcsin\\frac{x}{na}).\n\\]</span> 方向垂直于球状小颗粒中的光线指向外侧。</p>\n<h1 id=\"玻尔原子模型\">玻尔原子模型</h1>\n<p>18、在气体放电管中，一束能量为10eV的电子和单原子气体发生碰撞，发出的辐射波长有：140.2nm, 253.6nm和313.2nm。其中253.6nm的光谱较其它两个成分强。给出能级图，以及到达阳极的电子的能量。 <span class=\"math display\">\\[\n\\Delta E=h\\nu=\\frac {hc}\\lambda=8.84eV,4.89eV,3.95eV.\n\\]</span> <img src=\"https://gsxgoldenlegendary.github.io/images/qm0.jpg\" /></p>\n<p>到达阳极的电子能量：</p>\n<ul>\n<li>未碰撞，10eV;</li>\n<li>碰撞后原子处于第一激发态，10－4.89＝5.11eV;</li>\n<li>碰撞后原子处于第二激发态，10－8.84＝1.16eV;</li>\n<li>两次碰撞，10－2 × 4.89＝0.22eV.</li>\n</ul>\n<p>19、已知氢原子的电离能为 <span class=\"math inline\">\\(13.6eV\\)</span>，求<span class=\"math inline\">\\(B^{4+}\\)</span>离子从<span class=\"math inline\">\\(n= 2\\)</span>能级跃迁到基态的辐射能量、波长。 <span class=\"math display\">\\[\nE_n=-\\frac 1{2n^2}m_eZ^2\\alpha^2c^2,\n\\]</span> <span class=\"math inline\">\\(n=1,Z=1\\)</span>时 <span class=\"math display\">\\[\n-13.6eV=-\\frac12m_e\\alpha^2c^2;\n\\]</span> <span class=\"math inline\">\\(n=2,Z=5\\)</span>时 <span class=\"math display\">\\[\nE_2(B)=-\\frac1{2\\times25}m_e25\\alpha^2c^2;\n\\]</span> <span class=\"math inline\">\\(n=1,Z=5\\)</span>时 <span class=\"math display\">\\[\nE_1(B)=-\\frac1{2}m_e25\\alpha^2c^2;\n\\]</span></p>\n<p><span class=\"math display\">\\[\n\\Delta E=E_2(B)-E_1(B)= 255 eV.\n\\]</span></p>\n<p><span class=\"math display\">\\[\n\\lambda=\\frac{hc}{\\Delta E}=4.86 nm.\n\\]</span></p>\n<p>20、气体放电管用 <span class=\"math inline\">\\(12.2eV\\)</span> 的电子轰击氢原子，确定此时氢所发出的谱线的波长。 <span class=\"math display\">\\[\nE_1=-13.6eV,E_2=-3.4eV,E_3=-1.51eV,E_4=-0.85eV.\n\\]</span> 由<span class=\"math inline\">\\(12.2eV&lt;E4-E1\\)</span>知氢原子只能被激发到第1、2激发态。从第1激发态跃迁到基态及从第2激发态跃迁到第1激发态及基态分别发出谱线波长为 <span class=\"math display\">\\[\n\\lambda_1=\\frac c{\\nu_1}=\\frac{ch}{E2-E1}=1.19\\times10^{-7}m,\n\\]</span></p>\n<p><span class=\"math display\">\\[\n\\lambda_2=\\frac c{\\nu_2}=\\frac{ch}{E3-E1}=1.02\\times10^{-7}m,\n\\]</span></p>\n<p><span class=\"math display\">\\[\n\\lambda_1=\\frac c{\\nu_1}=\\frac{ch}{E3-E2}=6.56\\times10^{-7}m,\n\\]</span></p>\n<p>21、设氢原子原来是静止的。当氢原子从<span class=\"math inline\">\\(n = 4\\)</span>的态跃迁到基态时，给出原子的反冲速度、 发射光子的波长，并与不考虑反冲时的光子波长对比。</p>\n<p>考虑反冲时</p>\n\n$$\n\\left\\{\n\\begin{array}\\\\\nE_4-E_1=\\frac12mv^2+\\frac{hc}\\lambda,\\\\\n\\frac h\\lambda=mv.\n\\end{array}\n\\right.\n\\Rightarrow\n\\left\\{\n\\begin{array}\\\\\n\\lambda=97.24nm,\\\\\nv=4.07m/s.\n\\end{array}\n\\right.\n$$\n\n<p>不考虑反冲时 <span class=\"math display\">\\[\n\\lambda_0=\\frac c{v_0}=\\frac{ch}{E_4-E_1}=97.1nm.\n\\]</span> 二者差别不大。</p>\n<h1 id=\"物质波\">物质波</h1>\n<p>22、显微镜可以分辨的最小尺寸，约为光波的波长。要观测尺寸$ 1nm$ 左右的分子，光子的最小能量是多少？如果改为使用电子显微镜，那么电子的最小能量是多少？ <span class=\"math display\">\\[\nE_1=\\frac{hc}\\lambda=1.988\\times10^{-18}J.\n\\]</span></p>\n<p><span class=\"math display\">\\[\nE_2=\\frac{p^2}{2m_e}=\\frac{h^2}{2\\lambda^2m_e}=2.439\\times10^{-19}J.\n\\]</span></p>\n<p>23、 写出非相对论粒子物质波的色散关系，并求出物质波的相速度和群速度。</p>\n<p>色散关系</p>\n\n$$\n\\left\\{\n\\begin{array}\\\\\nE=\\hbar\\omega,\\\\\np=\\hbar k,\\\\\nE=\\frac{p^2}{2m},\n\\end{array}\n\\Rightarrow\n\\omega=\\frac{\\hbar k^2}{2m}.\n\\right.\n$$\n\n\n\n<p>相速度 <span class=\"math display\">\\[\nv_p=\\frac\\omega k=\\frac{\\hbar k^2}{2m}=\\frac p{2m}=v.\n\\]</span> 群速度 <span class=\"math display\">\\[\nv_g=\\frac{\\mathrm d\\omega}{\\mathrm dk}=\\frac{\\hbar k}{m}=\\frac pm=v.\n\\]</span></p>\n<h1 id=\"波函数与薛定谔方程\">波函数与薛定谔方程</h1>\n<p>24、非相对论粒子被封闭在长、宽、高为<span class=\"math inline\">\\(a,b,c\\)</span>的盒子中，利用驻波条件计算其能级。</p>\n\n$$\n\\left\\{\n\\begin{array}\\\\\nk=\\frac{2\\pi}\\lambda=\\sqrt{k_x^2+k_y^2+k_z^2},\\\\\n2a=n_1\\frac{2\\pi}{k_x},\\\\\n2b=n_2\\frac{2\\pi}{k_y},\\\\\n2c=n_3\\frac{2\\pi}{k_z},\\\\\nE=\\frac{p^2}{2m},\\\\\np=\\frac h\\lambda,\n\\end{array}\n\\Rightarrow\nE=\\frac{h^2}{8m}(\\frac1{a^2n_1^2}+\\frac1{b^2n_2^2}+\\frac1{c^2n_3^2}),n_1,n_2,n_3\\in \\mathbb {Z^*}\n\\right.\n$$\n\n<p>25、下列非相对论粒子被限制在宽为𝐿的盒子中。利用海森堡不确定关系估算它们的动能最小值：</p>\n<p>（1）电子关在𝐿 = 1Å的盒子。 <span class=\"math display\">\\[\n\\Delta x\\Delta p_x\\geqslant h\\Rightarrow\\Delta x\\Delta vm\\geqslant h\\Rightarrow\\Delta v\\geqslant\\frac h{\\Delta xm}.\n\\]</span></p>\n<p><span class=\"math display\">\\[\n\\Delta v_{min}=\\frac{6.626\\times10^{-34}}{10^{-10}\\times9.1\\times10^{-31}}=7.2\\times10^6m/s.\n\\]</span></p>\n<p>电子的速度取值的差最小为<span class=\"math inline\">\\(\\Delta v\\)</span>，也就是以<span class=\"math inline\">\\(\\frac12|\\Delta v|\\)</span>速率运动时候动能最小，为 <span class=\"math display\">\\[\nE_{min}=\\frac12m_e(\\frac12|\\Delta v|)^2=5.897\\times10^{-18}J.\n\\]</span> （2）中子（质量<span class=\"math inline\">\\(940MeV ⋅ c^{−2}\\)</span>）限制在𝐿 = <span class=\"math inline\">\\(10fm\\)</span>（原子核尺寸）的盒子中。</p>\n<p>同（1）可知<span class=\"math inline\">\\(E_{min}=3.649\\times10^{-8}J\\)</span>。</p>\n<p>（3）质量<span class=\"math inline\">\\(10^{−6}g\\)</span>的灰尘被关在𝐿 = <span class=\"math inline\">\\(1μm\\)</span>的盒中。</p>\n<p>同（1）可知<span class=\"math inline\">\\(E_{min}=5.488\\times10^{-8}J\\)</span>。</p>\n<p>26、双原子分子在平衡距离附近沿连线方向作一维微振动，记两个原子的质量分别为<span class=\"math inline\">\\(m_1\\)</span>, <span class=\"math inline\">\\(m_2\\)</span>， 坐标为<span class=\"math inline\">\\(x_1,x_2\\)</span>，平衡距离为<span class=\"math inline\">\\(a\\)</span>。原子之间的相互作用可近似为谐振子势， <span class=\"math display\">\\[\n𝑉 = \\frac1 2 𝑘(𝑥_2 − 𝑥_1 − 𝑎)^ 2\n\\]</span> 写出系统的薛定谔方程。</p>\n<p>取两原子连线上较远一点为原点，薛定谔方程为： <span class=\"math display\">\\[\n\\mathrm i\\hbar\\frac\\partial{\\partial t}\\psi(x_1,x_2,t)=(-\\frac{\\hbar^2}2(\\frac{\\mathrm d^2}{m_1\\mathrm dx_1^2}+\\frac{\\mathrm d^2}{m_2\\mathrm dx_2^2})+\\frac12k(x_2-x_1-a)^2)\\psi(x_1,x_2,t).\n\\]</span> 27、设二维粒子在<span class=\"math inline\">\\(t= 0\\)</span>时的波函数为 <span class=\"math display\">\\[\n\\psi(x, y,t = 0) = (x + \\mathrm i y) \\exp{−(x ^2 + y^2 )}, x, y ∈ \\mathbb R\n\\]</span> （1）求几率密度和几率流。</p>\n<p>几率密度</p>\n\n$$\n\\rho=\\psi^*\\psi=(x^2+y^2)e^{-2(x^2+y^2)}.\n$$\n\n<p>几率流</p>\n\n$$\n\\vec j=\\mathrm i\\frac\\hbar{2m}(\\psi\\nabla\\psi^*-\\psi^*\\nabla\\psi)=\\frac{2\\pi e^{-2(x^2+y^2)}(x\\vec{e_y}-y\\vec{e_x})}{2m}.\n$$\n\n\n<p>（2）如果这是一个定态，求势场<span class=\"math inline\">\\(V(x, y)\\)</span>的表达式。 <span class=\"math display\">\\[\nV(x,y)=E+\\frac{\\hbar^2}{2m\\psi(x,y,t=0)}\\nabla^2\\psi(x,y,t=0)=E+\\frac{2\\hbar^2}m(x^2+y^2-2).\n\\]</span></p>\n<p>28、已知一维粒子的两个空间波函数 <span class=\"math display\">\\[\nu_1(x) = \\exp(−\\frac12x^2) , u_2(x)=2x\\exp(−\\frac12𝑥^2).\n\\]</span> （1）归一化这两个波函数。 <span class=\"math display\">\\[\n\\int_{-\\infty}^\\infty(u_1(x))^2\\mathrm dx=\\Gamma(\\frac12)=\\sqrt\\pi.\n\\]</span> 归一化的<span class=\"math inline\">\\(u_1(x)\\)</span>： <span class=\"math display\">\\[\nv_1(x)=\\frac{e^{-\\frac{x^2}2}}{\\sqrt\\pi}.\n\\]</span></p>\n<p><span class=\"math display\">\\[\n\\int_{-\\infty}^\\infty(u_2(x))^2\\mathrm dx=\\int_{-\\infty}^\\infty 4x^2e^{-x^2}\\mathrm dx=2\\sqrt\\pi.\n\\]</span></p>\n<p>归一化的<span class=\"math inline\">\\(u_1(x)\\)</span>： <span class=\"math display\">\\[\nv_2(x)=\\frac{xe^{-\\frac{x^2}2}}{\\sqrt\\pi}.\n\\]</span> （2）两个波函数是否正交？ <span class=\"math display\">\\[\n\\int_{-\\infty}^\\infty u_1(x)u_2(x)\\mathrm dx=\\int_{-\\infty}^\\infty2xe^{-x^2}\\mathrm dx=0\n\\]</span> 故此二波函数正交。</p>\n<h1 id=\"量子系统的演化\">量子系统的演化</h1>\n<p>29、质量为<span class=\"math inline\">\\(m\\)</span>的粒子处于宽度为<span class=\"math inline\">\\(a\\)</span>的一维无限深势阱之中，势函数为 <span class=\"math display\">\\[\nV(x)=\n\\begin{cases}\n0,0 &lt; x &lt; a; \\\\\n+\\infty, x &lt; 0 or x &gt; a.\n\\end{cases}\n\\]</span> （1）写出能级和归一化的定态波函数。 <span class=\"math display\">\\[\nE_n=\\frac{\\hbar^2\\pi^2n^2}{2ma^2}.\n\\]</span></p>\n<p><span class=\"math display\">\\[\nu(x)=\n\\begin{cases}\n0,&amp;x&lt;0orx&gt;a;\\\\\n\\sqrt{\\frac2a}\\sin(\\frac{n\\pi}a(x-\\frac a2)+\\frac{1-(-1)^n}2\\frac\\pi2),&amp;0&lt;x&lt;a.\n\\end{cases}\n\\]</span></p>\n<p><span class=\"math display\">\\[\n\\psi(x,t)=\n\\begin{cases}\n0,&amp;x&lt;0orx&gt;a;\\\\\n\\sqrt{\\frac2a}\\sin(\\frac{n\\pi}a(x-\\frac a2)+\\frac{1-(-1)^n}2\\frac\\pi2)e^{-\\frac{\\mathrm i\\hbar\\pi^2n^2t}{2ma^2} }, &amp;0&lt;x&lt;a.\n\\end{cases}\n\\]</span></p>\n<p>（2）现在假设在<span class=\"math inline\">\\(t = 0\\)</span>时，粒子处于基态。这时在<span class=\"math inline\">\\(x = −a\\)</span>处 设立一个无限高势垒，并突然把<span class=\"math inline\">\\(x = 0\\)</span>处的隔板撤除，即势函数突变为 <span class=\"math display\">\\[\n𝑉&#39;(𝑥)=\n\\begin{cases}\n0,&amp;-a &lt; 𝑥 &lt; 𝑎; \\\\\n+\\infty, &amp;𝑥 &lt; -a or 𝑥 &gt; 𝑎.\n\\end{cases}\n\\]</span> 求粒子处于新的基态的概率。</p>\n<p>撤去隔板后， <span class=\"math display\">\\[\nu_n&#39;(x)=\n\\begin{cases}\n0,&amp;x&lt;-aorx&gt;a;\\\\\n\\sqrt{\\frac1a}\\sin(\\frac{n\\pi x}{2a}+\\frac{1-(-1)^n}2\\frac\\pi2),&amp;-a&lt;x&lt;a.\n\\end{cases}\n\\]</span> 在<span class=\"math inline\">\\(t=0\\)</span>时基态粒子的波函数 <span class=\"math display\">\\[\n\\psi(x,0)=\n\\begin{cases}\n0,&amp;x&lt;0orx&gt;a;\\\\\n\\sqrt{\\frac2a}\\sin(\\frac{\\pi}a(x-\\frac a2)+\\frac\\pi2),&amp;0&lt;x&lt;a.\n\\end{cases}\n\\]</span></p>\n<p><span class=\"math display\">\\[\nc_1=\\int_{-\\infty}^\\infty u_1&#39;^*\\psi(x,0)\\mathrm dx=\\int_0^a\\sqrt{\\frac1a}\\sin(\\frac{\\pi x}{2a}+\\frac\\pi 2)\\sqrt{\\frac2a}\\sin\\frac{\\pi x}a\\mathrm dx=-\\frac{4\\sqrt2}{3\\pi.}\n\\]</span></p>\n<p>故粒子处于新的基态的概率是 <span class=\"math display\">\\[\n|c_1|^2=\\frac{32}{9\\pi^2}.\n\\]</span> （3）撤除隔板后，粒子处于哪个能级的概率最大？ <span class=\"math display\">\\[\nc_n=\\int_{-\\infty}^\\infty u_n&#39;^*\\psi(x,0)\\mathrm dx=\\int_{-\\infty}^\\infty \\sqrt{\\frac1a}\\sin(\\frac{n\\pi x}{2a}+\\frac{1-(-1)^n}2\\frac\\pi2)\\sqrt{\\frac2a}\\sin(\\frac{\\pi}a(x-\\frac a2)+\\frac\\pi2)\\mathrm dx\n\\]</span></p>\n<p><span class=\"math display\">\\[\nc_n=\n\\begin{cases}\n\\frac{\\sqrt2}2,&amp;n=2;\\\\\n0,\n&amp;n=4,6,8,\\cdots;\\\\\n\\frac{4\\sqrt2}{\\pi(n^2-4)},&amp;n=1,3,5,\\cdots.\n\\end{cases}\n\\]</span></p>\n<p>第2能级。</p>\n<p>（4）在势阱右半边（<span class=\"math inline\">\\(0 &lt; x &lt; a\\)</span>）找到粒子的概率是 <span class=\"math display\">\\[\n\\int_0^a(\\sum_{n=0}^\\infty \\frac{4\\sqrt2}{\\pi((2n+1)^2-4)}e^{-\\frac{\\mathrm i\\tau\\hbar\\pi^2(2n+1)^2}{8ma^2}}\\sqrt{\\frac1a}\\sin(\\frac{(2n+1)\\pi x}{2a}+\\frac\\pi2)+\\frac1{\\sqrt{2a}}\\sin\\frac{\\pi x}ae^{-\\frac{\\mathrm i\\tau\\hbar\\pi^2}{2ma^2}})\\mathrm dx.\n\\]</span></p>\n<p>（5）求刚撤离隔板时，势阱内各点的几率流。在此后几率流是否不变？</p>\n<p>刚撤去隔板时<span class=\"math inline\">\\(\\psi(x,0)=\\psi^*(x,0)=0,\\)</span> <span class=\"math display\">\\[\n\\vec j=\\mathrm i\\frac\\hbar{2m}(\\psi\\nabla\\psi^*-\\psi^*\\nabla\\psi)=0.\n\\]</span> 否。</p>\n<p>30、无限深势阱中，粒子演化的特征时间为 <span class=\"math display\">\\[\n\\tau=\\frac{ma^2}{\\hbar}\n\\]</span></p>\n<p>在此时间尺度上，会观察到明显的波包扩散。</p>\n<p>（1）考虑一个宽 <span class=\"math inline\">\\(2\\)</span> 米的走廊，一个人待在走廊中。按量子力学，描述人的波包会发生扩散， 估算所需时间。计算时，你可以自行选取人的合理质量。</p>\n<p>人取<span class=\"math inline\">\\(60kg\\)</span>。 <span class=\"math display\">\\[\n\\tau=\\frac{60\\times2^2}{6.626\\times10^{-34}}=3.622\\times10^{35}s.\n\\]</span> （2）同样是这个走廊，如果把电子关在其中，估算波包扩散所需的时间。 <span class=\"math display\">\\[\n\\tau=\\frac{9.1\\times10^{-31}\\times2^2}{6.626\\times10^{-34}}=5.494\\times10^3s.\n\\]</span> （3）一个原子核被关在原子中，求波包扩散时间。原子核的质量与原子尺寸，请自行选取合理值。</p>\n<p>原子核质量取<span class=\"math inline\">\\(1.66\\times10^{-27}kg\\)</span>，原子尺寸取<span class=\"math inline\">\\(0.079nm\\)</span>。 <span class=\"math display\">\\[\n\\tau=\\frac{1.66\\times10^{-27}\\times(0.079\\times10^{-10})^2}{6.626\\times10^{-34}}=1.564\\times10^{-14}s.\n\\]</span> 31、金属中的电子，在靠近表面处所受的作用势可近似为阶跃势。已知铜的功函数为<span class=\"math inline\">\\(4eV\\)</span>， 估算铜中电子的透入距离。</p>\n<p>金属导体中自由电子热运动速率取<span class=\"math inline\">\\(v=1\\times 10^5 m/s\\)</span>，则透入距离 <span class=\"math display\">\\[\n\\frac1{k_2}=\\frac{\\hbar}{\\sqrt{2m_e(v_0-\\frac12m_ev^2)}}=9.86\\times10^{-11}m.\n\\]</span> 32、假定粒子的势场<span class=\"math inline\">\\(V(x)\\)</span>为无限深势阱中有一𝛿-函数的势垒，即 <span class=\"math display\">\\[\nV(x)=\n\\begin{cases}\n\\gamma\\delta(x),|x|&lt;a;\\\\\n+\\infty,|x|&gt;a.\n\\end{cases}\n\\]</span></p>\n<p>试求解系统的定态薛定谔方程：对偶函数和奇函数分开处理，找出系统的能级公式，并解释为什么奇函数不受𝛿-函数势垒的影响。</p>\n<p>系统的薛定谔方程 <span class=\"math display\">\\[\n(-\\frac{\\hbar^2}{2m}\\frac{\\mathrm d^2}{\\mathrm dx^2}+V(x))u(x)=Eu(x).\n\\]</span> <span class=\"math inline\">\\(|x|&gt;a\\)</span>时，动能项分部积分后知恒正，总能量<span class=\"math inline\">\\(E=\\langle\\hat H\\rangle&lt;+\\infty\\)</span>知<span class=\"math inline\">\\(u(x)=0\\)</span>。</p>\n<p><span class=\"math inline\">\\(|x|&lt;\\frac a2\\)</span>且<span class=\"math inline\">\\(x\\neq 0\\)</span>时， <span class=\"math display\">\\[\n\\frac{\\mathrm d^2}{\\mathrm dx^2} u(x)=-k^2u(x),k\\mathop=^{def}\\frac{\\sqrt{2mE}}\\hbar\\Rightarrow u(x)=A\\sin(kx+\\delta).\n\\]</span></p>\n<p><span class=\"math display\">\\[\nu(x)=\n\\begin{cases}\n0,|x|&gt;a;\\\\\nA_1\\sin(kx+\\delta_1),-a&lt;x\\leqslant0;\\\\\nA_2\\sin(kx+\\delta_2),0&lt;x&lt;a.\\\\\n\\end{cases}\n\\]</span></p>\n<p><span class=\"math display\">\\[\n\\begin{cases}\nu(a)=u(-a)=0;\\\\\nu(0+)=u(0-);\\\\\nu&#39;(0+)-u&#39;(0-)=\\frac{2m\\gamma}{\\hbar^2}u(0).\n\\end{cases}\n\\Rightarrow\n\\begin{cases}\nA_2\\sin(ka+\\delta_2)=A_1\\sin(-ka+\\delta_1)=0;\\\\\nA_2\\sin\\delta_2=A_1\\sin\\delta_1;\\\\\nkA_2\\cos\\delta_2-kA_1\\cos\\delta_1=\\frac{2m\\gamma}{\\hbar}A_1\\sin\\delta_1.\n\\end{cases}\n\\]</span></p>\n<p>由<span class=\"math inline\">\\(A_1,A_2\\neq0\\)</span>，有 <span class=\"math display\">\\[\nka+\\delta_2=n_1\\pi,-ka+\\delta_1=n_2\\pi\\Rightarrow\\delta_1=-\\delta_2+n\\pi,n,n_1,n_2\\in Z.\n\\]</span> 进一步有 <span class=\"math display\">\\[\n\\begin{cases}\nA_1=A_2;\\\\\n\\delta_2=\\arctan\\frac{\\hbar k}{m\\gamma}.\n\\end{cases}\n或\n\\begin{cases}\nA_1=-A_2;\\\\\n\\delta_2=0.\n\\end{cases}\n\\]</span> 归一化后得到两种情况的<span class=\"math inline\">\\(A_1=\\sqrt{\\frac2a}\\)</span>。</p>\n<p>这样 <span class=\"math display\">\\[\nu(x)=\n\\begin{cases}\n0,|x|\\geqslant a;\\\\\n\\sqrt{\\frac2a}\\sin(\\frac{n_1\\pi}a|x|+(1+\\frac1a)\\arctan\\frac{\\hbar k}{m\\gamma})或\\sqrt{\\frac2a}\\sin(\\frac{n_2\\pi}ax),|x|&lt;a,n_1,n_2\\in Z*.\n\\end{cases}\n\\]</span> 由 <span class=\"math display\">\\[\n\\frac{\\sqrt{2mE}}\\hbar=\\frac{n_1\\pi-\\delta_2}a或\\frac{n_2\\pi}a,\n\\]</span> 得能级 <span class=\"math display\">\\[\nE=(\\frac\\hbar{2ma}(n_1\\pi+\\arctan\\frac{\\hbar k}{m\\gamma}))^2或(\\frac{\\hbar n_2}{2ma})^2,n_1,n_2\\in Z^*\n\\]</span> 解释：在没有考虑<span class=\"math inline\">\\(\\delta-\\)</span>势阱对波函数的影响时，奇函数在<span class=\"math inline\">\\(\\delta-\\)</span>势阱处的取值为<span class=\"math inline\">\\(0\\)</span>，由量子力学假设之二，表明物质波在<span class=\"math inline\">\\(\\delta-\\)</span>势阱处出现的概率为0，自然没有影响。</p>\n<p>33、一个谐振子处于基态，计算振子在经典禁止区的概率。 <span class=\"math display\">\\[\nP=1-\\int_{-x_\\max}^{x_\\max}|u(x)|^2\\mathrm dx=1-\\int_{-\\sqrt{\\frac\\hbar k}}^{\\sqrt\\frac\\hbar k}\\sqrt{\\frac k{\\hbar\\pi}}e^{\\frac{kx^2}{2\\hbar}}\\mathrm dx.\n\\]</span></p>\n<h1 id=\"量子力学中的物理量\">量子力学中的物理量</h1>\n<p>34、估算谐振子基态能量。</p>\n<p>哈密顿算符 <span class=\"math display\">\\[\nH=\\frac{p^2}{2m}+\\frac12m\\omega^2x^2,\\omega^2\\mathop=\\limits^{def}\\frac km.\n\\]</span> 能量的期望值</p>\n\n$$\n\\hat A\\mathop=\\limits^{def}\\frac1{\\sqrt{2m}}\\hat p,\\hat B\\mathop=\\limits^{def}\\sqrt{\\frac m2}\\omega\\hat x,\\hat C\\mathop=\\limits^{def}[\\hat A,\\hat B]=\\frac12\\omega(-\\mathrm i\\hbar).\n$$\n\n$$\n\\overline E=\\langle\\hat H\\rangle=\\langle\\frac{\\hat p^2}{2m}+\\frac12m\\omega^2\\hat x^2\\rangle=\\langle\\hat A^2+\\hat B^2\\rangle\\geqslant2\\sqrt{\\overline{A^2}\\cdot\\overline{B^2}}\\geqslant2\\sqrt{{\\overline C}^2}=\\frac12\\hbar\\omega.\n$$\n\n\n<p>故能量最低的基态为<span class=\"math inline\">\\(\\frac12\\hbar\\omega\\)</span>。</p>\n<p>35、归一化高斯型波包 <span class=\"math inline\">\\(\\psi(x) = e^{\\frac{x^2}{\\sigma^2}}\\)</span>并求坐标算符<span class=\"math inline\">\\(\\hat x\\)</span>、动量算符<span class=\"math inline\">\\(\\hat p\\)</span>和动能算符<span class=\"math inline\">\\(\\hat T =\\frac 1 {2𝑚}\\hat p^ 2\\)</span>的期望值。 <span class=\"math display\">\\[\n\\int_{-\\infty}^{\\infty}|\\psi(x)|^2\\mathrm dx=2\\int_0^\\infty e^{-\\frac{2x^2}{\\sigma^2}}\\mathrm dx=\\sqrt{2\\pi}\\sigma.\n\\]</span></p>\n<p><span class=\"math display\">\\[\n\\psi(x)=\\frac1{\\sqrt{2\\pi}\\sigma}e^{-\\frac{x^2}{\\sigma^2}}.\n\\]</span></p>\n<p><span class=\"math display\">\\[\n\\langle\\hat x\\rangle=\\int_{-\\infty}^{\\infty}\\psi^*(x)x\\psi(x)\\mathrm dx=\\int_{-\\infty}^{\\infty}\\frac{x}{2\\pi\\sigma^2}e^{-\\frac{2x^2}{\\sigma^2}}\\mathrm dx=0.\n\\]</span></p>\n<p><span class=\"math display\">\\[\n\\langle\\hat p\\rangle=\\int_{-\\infty}^{\\infty}\\psi^*(x)(-\\mathrm i\\hbar\\frac\\partial{\\partial x})\\psi(x)\\mathrm dx=\\int_{-\\infty}^{\\infty}\\frac{2\\mathrm i\\hbar x}{2\\pi\\sigma^4}e^{-\\frac{2x^2}{\\sigma^2}}\\mathrm dx=0.\n\\]</span></p>\n<p><span class=\"math display\">\\[\n\\langle\\hat x\\rangle=\\int_{-\\infty}^{\\infty}\\psi^*(x)(-\\frac\\hbar{2m}\\frac{\\partial^2}{\\partial x^2})\\psi(x)\\mathrm dx=\\int_{-\\infty}^{\\infty}\\frac{x}{2\\pi\\sigma^2}e^{-\\frac{2x^2}{\\sigma^2}}\\mathrm dx=\\frac{13\\sqrt2\\hbar}{32\\sqrt\\pi m\\sigma^3}.\n\\]</span></p>\n<p>36、写出一维谐振子在动量表象的哈密顿量算符。 <span class=\"math display\">\\[\n\\hat H=\\frac{\\vec p^2}{2m}+\\hat V=\\frac{p^2}{2m}+\\frac12k\\hat x^2=\\frac{p^2}{2m}+\\frac12k(\\mathrm i\\hbar\\frac\\partial{\\partial p_x})^2=\\frac{p^2}{2m}+\\frac{k\\hbar}{2}(\\frac\\partial{\\partial p})^2.\n\\]</span> 37、对单粒子的物理量，验证以下对易关系 <span class=\"math display\">\\[\n[\\hat L_j,\\hat r_k]=\\mathrm i\\hbar\\varepsilon_{jkl}\\hat r_l,\n\\]</span></p>\n<p><span class=\"math display\">\\[\n[\\hat L_j,\\hat p_k]=\\mathrm i\\hbar\\varepsilon_{jkl}\\hat p_l,\n\\]</span></p>\n<p><span class=\"math display\">\\[\n[\\hat L_j,\\hat T]=0.\n\\]</span></p>\n<p><span class=\"math display\">\\[\n[\\hat L_j,\\hat r_k]=[\\varepsilon_{jmn}\\hat r_m\\hat p_n,\\hat r_k]=\\varepsilon_{jmn}(\\hat r_m[\\hat p_n,\\hat r_k]+[\\hat r_m,\\hat r_k]\\hat p_n)=\\varepsilon_{jmn}\\delta_{nk}(-\\mathrm i\\hbar)\\hat r_m=\\varepsilon_{jlk}(-\\mathrm i\\hbar)\\hat r_l=\\mathrm i\\hbar\\varepsilon_{jkl}\\hat r_l.\n\\]</span></p>\n<p><span class=\"math display\">\\[\n[\\hat L_j,\\hat p_k]=[\\varepsilon_{jmn}\\hat r_m\\hat p_n,\\hat p_k]=\\varepsilon_{jmn}(\\hat r_m[\\hat p_n,\\hat p_k]+[\\hat r_m,\\hat p_k]\\hat p_n)=\\varepsilon_{jmn}\\delta_{mk}\\mathrm i\\hbar\\hat p_n=\\mathrm i\\hbar\\varepsilon_{jkl}\\hat p_l.\n\\]</span></p>\n<p><span class=\"math display\">\\[\n[\\hat L_j,\\hat T]=\\hat{\\vec r}\\times\\hat{\\vec p}\\hat T-\\hat T\\hat{\\vec r}\\times\\hat{\\vec p}=\\mathrm i\\hbar\\nabla_{\\vec p}\\times\\vec p\\frac{\\vec p^2}{2m}-\\frac{\\vec p^2}{2m}\\mathrm i\\hbar\\nabla_{\\vec p}\\times\\vec p=0-0=0.\n\\]</span></p>\n<p>38、考虑一维的弹簧振子，作用势为<span class=\"math inline\">\\(V(x)=\\frac12kx^2\\)</span>。</p>\n<p>求弹簧振子的坐标期望值<span class=\"math inline\">\\(\\bar x(t)\\)</span>和动量期望值<span class=\"math inline\">\\(\\bar p(t)\\)</span>随时间的变化规律<span class=\"math inline\">\\(\\frac{\\mathrm d\\bar x}{\\mathrm dt}\\)</span>和<span class=\"math inline\">\\(\\frac{\\mathrm d\\bar p}{\\mathrm dt}\\)</span>。这个关系式与牛顿力学一致吗？ <span class=\"math display\">\\[\n\\frac{\\partial\\hat x}{\\partial t}\\psi(x)=0.\n\\]</span></p>\n<p><span class=\"math display\">\\[\n[\\hat x,\\hat H]f=x(-\\frac{\\hbar^2}{2m}\\frac{\\mathrm d^2}{\\mathrm dx^2}+\\frac12kx^2)f-((-\\frac{\\hbar^2}{2m}\\frac{\\mathrm d^2}{\\mathrm dx^2}+\\frac12kx^2)(xf))=\\frac\\hbar mf&#39;=\\frac{\\mathrm i}m\\hat pf.\n\\]</span></p>\n<p>由海森堡运动方程： <span class=\"math display\">\\[\n\\frac{\\mathrm d\\bar x}{\\mathrm dt}=\\frac {\\mathrm d}{\\mathrm dt}\\langle\\psi|\\hat x|\\psi\\rangle=\\langle\\psi|\\frac{\\partial\\hat x}{\\partial t}+\\frac1{\\mathrm i\\hbar}[\\hat x,\\hat H]|\\psi\\rangle=\\frac1{m\\hbar}\\langle\\psi|\\hat p|\\psi\\rangle=\\frac{\\bar p}{m\\hbar}.\n\\]</span></p>\n<p>同理 <span class=\"math display\">\\[\n\\frac{\\mathrm d\\bar p}{\\mathrm dt}=-k\\bar x.\n\\]</span> 得到了微分方程组 <span class=\"math display\">\\[\n\\begin{cases}\n\\frac{\\mathrm d\\bar x}{\\mathrm dt}=\\frac{\\bar p}{m\\hbar},\\\\\n\\frac{\\mathrm d\\bar p}{\\mathrm dt}=-k\\bar x.\n\\end{cases}\n\\Rightarrow\n\\begin{cases}\nm\\hbar\\frac{\\mathrm d^2\\bar x}{\\mathrm dt^2}=-k\\bar x,\\\\\nm\\hbar\\frac{\\mathrm d^2\\bar p}{\\mathrm dt^2}=-k\\bar p.\n\\end{cases}\n\\]</span> 解得 <span class=\"math display\">\\[\n\\begin{cases}\n\\bar p=Ae^{\\mathrm i\\sqrt{\\frac{k}{m\\hbar}}t}+Be^{-\\mathrm i\\sqrt{\\frac{k}{m\\hbar}}t},\\\\\n\\bar x=-\\frac{\\mathrm i}{\\sqrt{km\\hbar}}(Ae^{\\mathrm i\\sqrt{\\frac{k}{m\\hbar}}t}-Be^{-\\mathrm i\\sqrt{\\frac{k}{m\\hbar}}t}).\n\\end{cases}\n\\]</span> 带入<span class=\"math inline\">\\((t,\\bar x)=(0,0)\\)</span>得<span class=\"math inline\">\\(A=B\\)</span>，此时<span class=\"math inline\">\\(p\\neq0\\)</span>，故<span class=\"math inline\">\\(A=B\\neq 0\\)</span>这样 <span class=\"math display\">\\[\n\\begin{cases}\n\\bar p=2A\\cos\\sqrt{\\frac k{m\\hbar}}t,\\\\\n\\bar x=\\frac{2A}{\\sqrt{km\\hbar}}\\sin\\sqrt{\\frac k{m\\hbar}}t.\n\\end{cases}\n\\Rightarrow\n\\begin{cases}\n\\frac{\\mathrm d\\bar x}{\\mathrm dt}=\\frac{2A}{m\\hbar}\\cos\\sqrt{\\frac k{m\\hbar}}t,\\\\\n\\frac{\\mathrm d\\bar p}{\\mathrm dt}=-\\frac{2A\\sqrt k}{\\sqrt{m\\hbar}}\\sin\\sqrt{\\frac k{m\\hbar}}t.\n\\end{cases}\n\\]</span> 在牛顿力学中，由牛顿第二定律有 <span class=\"math display\">\\[\n\\begin{cases}\nm\\frac{\\mathrm d^2 x}{\\mathrm dt^2}=-kx,\\\\\nm\\frac{\\mathrm d^2 p}{\\mathrm dt^2}=-kp.\n\\end{cases}\n\\]</span> 与量子力学中的关系式一致。</p>\n<p>39、</p>\n<p>（1）分别给出<span class=\"math inline\">\\(\\hat x=x\\)</span>和<span class=\"math inline\">\\(\\hat p=-\\mathrm i\\hbar \\frac \\partial{\\partial x}\\)</span>的厄密共轭算符。 <span class=\"math display\">\\[\n\\int_{-\\infty}^{\\infty}\\psi^*_1(x)(x\\psi_2(x))\\mathrm dx=\\int_{-\\infty}^\\infty(x\\psi^*_1(x))\\psi_2(x)\\mathrm dx,\n\\]</span> 所以<span class=\"math inline\">\\((\\hat x)^\\dagger=x\\)</span>。 <span class=\"math display\">\\[\n\\int_{-\\infty}^\\infty\\psi^*_1(x)(-\\mathrm i\\hbar\\frac\\partial{\\partial x}\\psi_2(x))\\mathrm dx=-\\mathrm i\\hbar((\\psi^*_1(x)\\psi_2(x))|_{-\\infty}^\\infty-\\int_{-\\infty}^\\infty\\frac\\partial{\\partial x}\\psi^*_1(x)\\psi_2(x)\\mathrm dx)=\\int_{-\\infty}^\\infty(\\mathrm i\\hbar\\frac\\partial{\\partial x}\\psi^*_1(x))\\psi_2(x)\\mathrm dx).\n\\]</span> 所以<span class=\"math inline\">\\((\\hat p)^\\dagger=\\mathrm i\\hbar\\frac\\partial{\\partial x}\\)</span>。</p>\n<p>（2）证明哈密顿量<span class=\"math inline\">\\(\\hat H =-\\frac{h^2}{2m}\\frac{\\partial^2}{\\partial x^2}+V(x)\\)</span>是厄密算符。 <span class=\"math display\">\\[\n\\int_{-\\infty}^\\infty\\psi^*_1(x)(\\frac{\\partial^2}{\\partial x^2}\\psi_2(x))\\mathrm dx=(\\psi^*_1(x)\\frac\\partial{\\partial x}\\psi_2(x))|_{-\\infty}^\\infty-\\int_{-\\infty}^\\infty(\\frac\\partial{\\partial x}\\psi^*_1(x))(\\frac\\partial{\\partial x}\\psi_2(x))\\mathrm dx=-(\\frac\\partial{\\partial x}\\psi^*_1(x)\\psi_2(x))|_{-\\infty}^\\infty+\\int_{-\\infty}^\\infty(\\frac{\\partial^2}{\\partial x^2}\\psi^*_1(x))\\psi_2(x)\\mathrm dx=\\int_{-\\infty}^\\infty(\\frac{\\partial^2}{\\partial x^2}\\psi^*_1(x))\\psi_2(x)\\mathrm dx.\n\\]</span> 这样<span class=\"math inline\">\\((\\frac{\\partial^2}{\\partial x^2})^\\dagger=\\frac{\\partial^2}{\\partial x^2}\\)</span>，所以 <span class=\"math display\">\\[\n(\\hat H)^\\dagger=-\\frac{h^2}{2m}(\\frac{\\partial^2}{\\partial x^2})^\\dagger+V(x)=-\\frac{h^2}{2m}\\frac{\\partial^2}{\\partial x^2}+V(x)=\\hat H.\n\\]</span> 即哈密顿量是厄密算符。</p>\n<p>40、求动能算符 <span class=\"math display\">\\[\n\\hat T=-\\frac{h^2}{2m}\\frac{\\mathrm d^2}{\\mathrm dx^2}\n\\]</span> 的本征值和本征态。 <span class=\"math display\">\\[\n-\\frac{h^2}{2m}\\frac{\\mathrm d^2}{\\mathrm dx^2}u(x)=Tu(x),\n\\]</span> 解得 <span class=\"math display\">\\[\nu(x)=Ce^{\\mathrm ikx},C\\in \\mathbb R,k=\\pm\\frac{\\mathrm i}\\hbar\\sqrt{2mT},k\\in \\mathbb R.\n\\]</span> 这样本征态为<span class=\"math inline\">\\(e^{\\mathrm ikx}\\)</span>，本征值为<span class=\"math inline\">\\(T=\\frac{\\hbar^2k^2}{2m}\\)</span>，其中<span class=\"math inline\">\\(k\\in\\mathbb R\\)</span>。</p>\n<h1 id=\"氢原子解\">氢原子解</h1>\n<p>41、氢原子处于<span class=\"math inline\">\\(n = 2\\)</span>的能级，列出所有可能状态的量子数<span class=\"math inline\">\\((n, l, m)\\)</span>。 <span class=\"math display\">\\[\n(2,0,0),(2,1,-1),(2,1,0),(2,1,1).\n\\]</span> 42、设初始时刻氢原子处在状态<span class=\"math inline\">\\(\\psi(t = 0) = \\frac1{\\sqrt2}(\\psi_{200} − \\psi_{100})\\)</span>上，计算氢原子半径<span class=\"math inline\">\\(r\\)</span>期望值的时间演化<span class=\"math inline\">\\(\\bar r(t)\\)</span>。</p>\n<p>//TODO</p>\n<p>43、已知氢原子的状态波函数为 <span class=\"math display\">\\[\nu_{nlm}=\\frac1{81\\sqrt{6\\pi}a_0^\\frac32}(\\frac r{a_0})^2e^{-\\frac r{3a_0}}(3\\cos^2\\theta-1),\n\\]</span> 试确定量子数<span class=\"math inline\">\\((n,l,m)\\)</span>。 <span class=\"math display\">\\[\n(3,2,0).\n\\]</span></p>\n<h1 id=\"转动与平移\">转动与平移</h1>\n<p>44、某一时刻的波函数 <span class=\"math display\">\\[\n\\psi(\\vec r)=f(r)(1+\\frac zr+\\frac{z^2}{r^2}),\n\\]</span> 测量角动量<span class=\"math inline\">\\(\\vec L^2\\)</span>，<span class=\"math inline\">\\(L_z\\)</span>。</p>\n<p>用<span class=\"math inline\">\\((\\vec L^2,L_z)\\)</span>的共同本征态展开波函数， <span class=\"math display\">\\[\n\\psi\\propto\\sqrt{4\\pi}Y_{00}+\\sqrt{\\frac{8\\pi}3}Y_{10}+(\\frac13\\sqrt{\\frac{16\\pi}5}Y_{20}+\\frac13\\sqrt{4\\pi}Y_{00})\\propto4\\sqrt5Y_{00}+\\sqrt{30}Y_{10}+2Y_{20}.\n\\]</span> 根据统计解释： <span class=\"math display\">\\[\nL_z=m\\hbar=0;P=1.\n\\]</span></p>\n<p><span class=\"math display\">\\[\n\\vec L^2=l(l+1)\\hbar^2=0or2\\hbar^2or6\\hbar^2;P=\\frac{40}{57},\\frac5{19},\\frac2{57}.\n\\]</span></p>\n<p>45、证明在<span class=\"math inline\">\\(L_z\\)</span>的本征态下， <span class=\"math display\">\\[\n\\langle L_x\\rangle=\\langle L_y\\rangle=0.\n\\]</span></p>\n<p><span class=\"math display\">\\[\n\\langle L_x\\rangle=\\int_0^\\pi\\mathrm d\\cos\\theta\\langle Y_{lm}(\\theta,\\phi)|\\hat{L_x}|Y_{lm}(\\theta,\\phi)\\rangle\\newline=\\int_0^\\pi\\mathrm d\\cos\\theta\\frac1{\\mathrm i\\hbar}\\langle Y_{lm}(\\theta,\\phi)|\\hat{L_y}\\hat{L_z}-\\hat{L_z}\\hat{L_y}|Y_{lm}(\\theta,\\phi)\\rangle\\newline=\\int_0^\\pi\\mathrm d\\cos\\theta\\frac1{\\mathrm i\\hbar}(\\langle Y_{lm}(\\theta,\\phi)|\\hat{L_y}|m\\hbar Y_{lm}(\\theta,\\phi)\\rangle-\\langle m\\hbar Y_{lm}(\\theta,\\phi)|\\hat{L_z}|Y_{lm}(\\theta,\\phi)\\rangle\\newline=\\int_0^\\pi\\mathrm d\\cos\\theta\\frac m{\\mathrm i}\\cdot 0=0.\n\\]</span></p>\n<p><span class=\"math inline\">\\(\\langle L_y\\rangle\\)</span>同理。</p>\n<p>46、求单粒子的不确定关系 <span class=\"math display\">\\[\n\\Delta L_x\\Delta L_y\\geqslant?\n\\]</span> 设此粒子的量子态满足 <span class=\"math display\">\\[\n\\langle L_x\\rangle=\\langle L_y\\rangle=0,\\langle L_z\\rangle=2\\hbar.\n\\]</span> 取<span class=\"math inline\">\\(\\hat A=\\hat{L_x}-\\langle L_x\\rangle\\)</span>，<span class=\"math inline\">\\(\\hat B=\\hat{L_y}-\\langle L_y\\rangle\\)</span>，记<span class=\"math inline\">\\([\\hat A,\\hat B]=\\mathrm i\\hat C\\)</span>，有 <span class=\"math display\">\\[\n\\bar C^2=\\langle\\frac 1{\\mathrm i}[\\hat A,\\hat B]\\rangle^2=\\langle[\\hat {L_x},\\hat {L_y}]\\rangle^2=\\langle\\hbar \\hat{L_z}\\rangle^2=\\hbar^2(2\\hbar)^2.\n\\]</span> 由 <span class=\"math display\">\\[\n\\bar{A^2}\\cdot\\bar{B^2}\\geqslant\\frac14{\\bar C}^2,\n\\]</span> 有 <span class=\"math display\">\\[\n\\Delta L_x^2\\Delta L_y^2\\geqslant\\frac14\\hbar^4\\Rightarrow\\Delta L_x\\Delta L_y\\geqslant\\hbar^2。\n\\]</span> 负值舍去。</p>\n<p>47、粒子的波函数为 <span class=\"math display\">\\[\n\\psi(x,y,z)=(\\frac{128}{\\pi^3})^{\\frac14}\\alpha^{\\frac52}x\\exp(-\\alpha^2(x^2+y^2+z^2)),\n\\]</span> 测量角动量<span class=\"math inline\">\\(\\vec{L}^2,L_z\\)</span>会得到什么数值？概率是多少?</p>\n<p><span class=\"math display\">\\[\n\\psi(x,y,z)=(\\frac{128}{\\pi^3})^{\\frac14}\\alpha^{\\frac52}r\\sin\\theta\\cos\\varphi e^{-\\alpha^2 r^2}=f(r)\\sin\\theta\\frac{e^{\\mathrm i\\phi}+e^{-\\mathrm i\\phi}}2\\propto Y_{1,1}+Y_{1,-1}.\n\\]</span> <span class=\"math display\">\\[\nP(L_z=\\hbar)=\\frac12,P(L_z=-\\hbar)=\\frac12,P(\\vec L^2=2\\hbar)=1.\n\\]</span></p>\n<h1 id=\"电子的磁矩和自旋\">电子的磁矩和自旋</h1>\n<p>48、两维矩阵</p>\n\n$$\nP=\n\\begin{pmatrix}\na&b\\\\\nc&d\n\\end{pmatrix},\n$$\n\n<p>用Pauli矩阵展开，求出展开系数。</p>\n<p><span class=\"math display\">\\[\nP\\equiv p_0\\sigma_0+p_1\\sigma_1+p_2\\sigma_2+p_3\\sigma_3。\n\\]</span> \n$$\np_0=\\frac12\\tr(P\\sigma_0)=\\frac12\\tr\\begin{pmatrix}a&b\\\\c&d\\end{pmatrix}=\\frac12(a+d).\n$$\n\n$$\np_1=\\frac12\\tr(P\\sigma_1)=\\frac12\\tr\\begin{pmatrix}b&a\\\\d&c\\end{pmatrix}=\\frac12(b+c).\n$$\n\n$$\np_2=\\frac12\\tr(P\\sigma_2)=\\frac12\\tr\\begin{pmatrix}\\mathrm ib&-\\mathrm ia\\\\\\mathrm id&-\\mathrm ic\\end{pmatrix}=\\frac{\\mathrm i}2(b-c).\n$$\n\n$$\np_3=\\frac12\\tr(P\\sigma_3)=\\frac12\\tr\\begin{pmatrix}a&-b\\\\c&-d\\end{pmatrix}=\\frac12(a-d).\n$$\n\n</p>\n<p>49、求<span class=\"math inline\">\\(\\sigma_y\\)</span>算符的本征态和本征值，并给出状态<span class=\"math inline\">\\((\\alpha,\\beta)^T\\)</span>上测量<span class=\"math inline\">\\(s_y\\)</span>的测量值和相应的几率。</p>\n<p>由<span class=\"math inline\">\\(\\det(\\sigma_y-\\lambda I)=0\\)</span>，得<span class=\"math inline\">\\(s_y\\)</span>的本征值<span class=\"math inline\">\\(\\pm1\\)</span>，本征矢 <span class=\"math display\">\\[\n|\\uparrow\\rangle=\\frac1{\\sqrt 2}(1,\\mathrm i)^T,|\\downarrow\\rangle=\\frac1{\\sqrt 2}(1,-\\mathrm i)^T.\n\\]</span></p>\n<p>自旋态的展开 <span class=\"math display\">\\[\n|\\chi\\rangle=\\frac1{\\sqrt{|\\alpha|^2+|\\beta|^2}}(\\alpha,\\beta)^T\\equiv A_1|\\uparrow\\rangle_y+A_2\\downarrow\\rangle_y.\n\\]</span></p>\n<p><span class=\"math display\">\\[\nA_1 = _y \\langle\\uparrow|\\chi\\rangle=\\frac1{\\sqrt{2(|\\alpha|^2+|\\beta|^2)}}(1,-\\mathrm i)(\\alpha,\\beta)^T=\\frac1{\\sqrt{2(|\\alpha|^2+|\\beta|^2)}}(\\alpha-\\mathrm i\\beta).\n\\]</span></p>\n<p><span class=\"math display\">\\[\nA_2=_y\\langle\\downarrow|\\chi\\rangle=\\frac1{\\sqrt{2(|\\alpha|^2+|\\beta|^2)}}(1,\\mathrm i)(\\alpha,\\beta)^T=\\frac1{\\sqrt{2(|\\alpha|^2+|\\beta|^2)}}(\\alpha+\\mathrm i\\beta).\n\\]</span></p>\n<p><span class=\"math inline\">\\(\\hat s_y=\\sigma_y\\)</span>，<span class=\"math inline\">\\(s_y\\)</span>的测量值是<span class=\"math inline\">\\(\\pm\\frac\\hbar2\\)</span>，几率 <span class=\"math display\">\\[\n|A_1|^2=\\frac{|\\alpha|^2+|\\beta|^2-2\\Im(\\alpha\\beta^*)}{2(|\\alpha|^2+|\\beta|^2)},|A_2|^2=\\frac{|\\alpha|^2+|\\beta|^2+2\\Im(\\alpha\\beta^*)}{2(|\\alpha|^2+|\\beta|^2)},\n\\]</span> 50、求空间单位方向上算符<span class=\"math inline\">\\((\\vec\\sigma\\cdot\\vec n)\\)</span>对应的本征值和本征态。</p>\n<p>球坐标系的单位矢量 <span class=\"math display\">\\[\n(n_1,n_2,n_3)=(\\sin\\theta\\cos\\varphi,\\sin\\theta\\sin\\varphi,\\cos\\theta).\n\\]</span> 算符的显式表达式</p>\n\n$$\n\\sigma_1n_1+\\sigma_2n_2+\\sigma_3n_3=\\begin{pmatrix}\\cos\\theta&\\sin\\theta e^{\\mathrm i\\varphi}\\\\\\sin\\theta e^{\\mathrm i\\varphi}&-\\cos\\theta\\end{pmatrix}.\n$$\n\n<p>本征值 <span class=\"math display\">\\[\n\\det(\\vec\\sigma\\cdot\\vec n-\\lambda\\mathbb 1)=0\\Rightarrow\\lambda=\\pm1.\n\\]</span> 本征矢 <span class=\"math display\">\\[\n|\\uparrow\\rangle_n=(\\cos\\frac\\theta2e^{\\frac{\\mathrm i\\varphi}2},\\sin\\frac\\theta2e^{\\frac{\\mathrm i\\varphi}2})^T,|\\downarrow\\rangle_n=(-\\sin\\frac\\theta2e^{\\frac{\\mathrm i\\varphi}2},\\cos\\frac\\theta2e^{\\frac{\\mathrm i\\varphi}2})^T.\n\\]</span> 51、加热银蒸汽时的炉温<span class=\"math inline\">\\(T=1320K\\)</span>，不均匀磁场区长度<span class=\"math inline\">\\(l=0.1m\\)</span>，磁场梯度<span class=\"math inline\">\\(\\frac{\\mathrm dB}{\\mathrm dz}=2300T/m\\)</span>。冷凝屏紧贴磁场末端，观测到银原子沉积的两条斑纹间隔<span class=\"math inline\">\\(\\Delta x=4mm\\)</span>。求银原子磁矩<span class=\"math inline\">\\(\\mu_z\\)</span>。</p>\n<p>银原子均方根速率 <span class=\"math display\">\\[\n\\frac12mv^2=\\frac32k_BT\\Rightarrow=\\sqrt{\\frac{3k_BT}m}.\n\\]</span> 磁矩与外场作用的势能 <span class=\"math display\">\\[\nW=-\\vec\\mu\\cdot\\vec B=-\\mu_z(\\frac{\\mathrm d B}{\\mathrm d z}z).\n\\]</span> 银原子所受的作用力 <span class=\"math display\">\\[\nF=-\\nabla W=\\mu_z\\frac{\\mathrm d B}{\\mathrm d z}.\n\\]</span> 通过磁场区域后的横向偏移 <span class=\"math display\">\\[\nx=\\frac12at^2=\\frac12\\frac Fm(\\frac lv)^2=\\frac{l^2\\mu_z}{6k_BT}\\frac{\\mathrm d B}{\\mathrm d z}.\n\\]</span> 两条斑纹的横向间隔 <span class=\"math display\">\\[\n\\Delta x=2x=\\frac{l^2\\mu_z}{3k_BT}\\frac{\\mathrm d B}{\\mathrm d z}.\n\\]</span> 实验测得的磁矩是 <span class=\"math display\">\\[\n\\mu_B=\\frac{3k_BT\\Delta x}{l^2\\frac{\\mathrm dB}{\\mathrm dz}}=9.5\\times10^{-24}J\\cdot s.\n\\]</span> 52、氢原子处于定态<span class=\"math inline\">\\(u_{3,1,1}\\)</span>，受到扰动后向低能级跃迁，会有几条谱线？增加沿 <span class=\"math inline\">\\(z\\)</span> 轴方向的磁场，各谱线分别分裂成几条（不考虑电子自旋）？</p>\n<p>由<span class=\"math inline\">\\(\\Delta l=\\pm 1\\)</span>，<span class=\"math inline\">\\(\\Delta m=0.\\pm1\\)</span>，知<span class=\"math inline\">\\(u_{3,1,1}\\)</span>可以向<span class=\"math inline\">\\(u_{2,0,0}\\)</span>及<span class=\"math inline\">\\(u_1,0,0\\)</span>跃迁，共两条谱线，加磁场也不会发生能级分裂。</p>\n<p>53、设电子是均匀球体。已知电子的角动量是<span class=\"math inline\">\\(\\frac\\hbar2\\)</span>，估算电子的角速度以及赤道上的线速度。 <span class=\"math display\">\\[\nL=I\\frac v{r_e} \\Rightarrow v=\\frac LIr_e=\\frac{5\\hbar}{4m_er_e}3.28\\times10^{11}m/s\n\\]</span></p>\n<p>54、验证 <span class=\"math display\">\\[\n\\frac1{2m_e}(\\vec\\sigma\\cdot(\\hat{\\vec p}+e\\vec A))^2=\\frac1{2m_e}(\\hat{\\vec p}+e\\vec A)^2+\\frac{e\\hbar}{2m_e}\\vec\\sigma\\cdot\\vec B.\n\\]</span> <span class=\"math display\">\\[\n(\\hat{\\vec p}+e\\vec A)\\times(\\hat{\\vec p}+e\\vec A)=e\\vec A\\times\\hat{\\vec p}+\\hat{\\vec p}\\times e\\vec A=e\\vec A\\times\\hat{\\vec p}-\\mathrm i\\hbar\\nabla\\times\\vec A=e\\vec A\\times\\hat{\\vec p}-\\mathrm ie\\hbar\\vec B.\n\\]</span> //TODO</p>\n<p>故由泡利矩阵性质有 <span class=\"math display\">\\[\n\\frac1{2m_e}(\\vec\\sigma\\cdot(\\hat{\\vec p}+e\\vec A))^2=\\frac1{2m_e}(\\hat{\\vec p}+e\\vec A)^2+\\frac1{2m_e}\\mathrm i\\vec\\sigma\\cdot((\\hat{\\vec p}+e\\vec A)\\times(\\hat{\\vec p}+e\\vec A))=\\frac1{2m_e}(\\hat{\\vec p}+e\\vec A)^2+\\frac{e\\hbar}{2m_e}\\vec\\sigma\\cdot\\vec B.\n\\]</span></p>\n<p>55、设电子的自旋波函数是</p>\n\n$$\n\\begin{pmatrix}\n1+2\\mathrm i\\\\\n3+4\\mathrm i\n\\end{pmatrix}\n$$\n\n<p>测量自旋<span class=\"math inline\">\\(s_y\\)</span>，可能的取值有哪些？概率是分别是多少？</p>\n<p>由<span class=\"math inline\">\\(\\det(\\sigma_y-\\lambda I)=0\\)</span>，得<span class=\"math inline\">\\(s_y\\)</span>的本征值<span class=\"math inline\">\\(\\pm1\\)</span>，本征矢 <span class=\"math display\">\\[\n|\\uparrow\\rangle=\\frac1{\\sqrt 2}(1,\\mathrm i)^T,|\\downarrow\\rangle=\\frac1{\\sqrt 2}(1,-\\mathrm i)^T.\n\\]</span></p>\n<p><span class=\"math display\">\\[\n|\\chi\\rangle=\\frac1{\\sqrt{30}}(1+2\\mathrm i,3+4\\mathrm i)^T.\n\\]</span></p>\n<p><span class=\"math display\">\\[\nA_1=_y\\langle\\uparrow|\\chi\\rangle=\\frac1{\\sqrt{60}}(1,-\\mathrm i)(1+2\\mathrm i,3+4\\mathrm i)^T=\\frac{\\sqrt{15}}{30}(5-\\mathrm i).\n\\]</span></p>\n<p><span class=\"math display\">\\[\nA_2=_y\\langle\\downarrow|\\chi\\rangle=\\frac1{\\sqrt{60}}(1,\\mathrm i)(1+2\\mathrm i,3+4\\mathrm i)^T=\\frac{\\sqrt{15}}{30}(-3+5\\mathrm i).\n\\]</span></p>\n<p><span class=\"math inline\">\\(\\hat s_y=\\sigma_y\\)</span>，<span class=\"math inline\">\\(s_y\\)</span>的测量值是<span class=\"math inline\">\\(\\pm\\frac\\hbar2\\)</span>，概率分别为 <span class=\"math display\">\\[\n|A_1|^2=\\frac{13}{30},|A_2|^2=\\frac{17}{30}.\n\\]</span> 56、电子的总角动量<span class=\"math inline\">\\(\\vec J\\)</span>为轨道角动量<span class=\"math inline\">\\(\\vec L\\)</span>与自旋角动量<span class=\"math inline\">\\(\\vec s\\)</span>之和。由于轨道角动量算符与自旋角动量算符作用在不同的空间，所以互相对易，即有 <span class=\"math display\">\\[\n[\\hat{L_j},\\hat {s_k}]=0,j.k=1,2,3.\n\\]</span> （1）求总角动量的对易关系<span class=\"math inline\">\\([\\vec{J_j},\\vec {J_k}]\\)</span>。 <span class=\"math display\">\\[\n[\\vec{J_j},\\vec {J_k}]=[\\vec{L_j}+\\vec {s_j},\\vec{L_k}+\\vec {s_k}]=[\\vec{L_j},\\vec {L_k}]+[\\vec{s_j},\\vec {s_k}]=\\mathrm i\\hbar\\varepsilon_{jkl}\\hat{\\vec L_l}+\\mathrm i\\hbar\\varepsilon_{jkl}\\hat{\\vec s_l}=\\mathrm i\\hbar\\epsilon_{jkl}\\hat{J_l}.\n\\]</span> （2）证明四个物理量<span class=\"math inline\">\\(\\{\\hat{\\vec J^2},\\hat{\\vec L^2},\\hat{\\vec s^2},\\hat{J_z}\\}\\)</span>两两对易，因而有完备的共同本征态。 <span class=\"math display\">\\[\n[\\hat{\\vec L}^2,\\hat{\\vec s}^2]=(\\hat{\\vec L}+\\hat{\\vec s})[\\hat{\\vec L},\\hat{\\vec s}]+[\\hat{\\vec L},\\hat{\\vec s}](\\hat{\\vec L}+\\hat{\\vec s})=0.\n\\]</span></p>\n<p><span class=\"math display\">\\[\n[\\hat{\\vec J}^2,\\hat{\\vec L}^2]=[\\hat{\\vec L}^2,\\hat{\\vec L}^2]+[\\hat{\\vec s}^2,\\hat{\\vec L}^2]=0.\n\\]</span></p>\n<p><span class=\"math display\">\\[\n[\\hat{\\vec J}^2,\\hat{\\vec s}^2]=[\\hat{\\vec L}^2,\\hat{\\vec s}^2]+[\\hat{\\vec s}^2,\\hat{\\vec s}^2]=0.\n\\]</span></p>\n<p><span class=\"math display\">\\[\n[\\hat{J_z},\\hat{\\vec L}^2]=[\\hat{L_z}+\\hat{s_z},\\hat{\\vec L}^2]=[\\hat{s_z},\\hat{\\vec L}^2]=[\\hat{s_z},\\hat L_x^2]+[\\hat{s_z},\\hat L_y^2]+[\\hat{s_z},\\hat L_z^2]=[\\hat{s_z},\\hat L_x]\\hat{L_x}+\\hat{L_x}[\\hat{s_z},\\hat L_x^2]+[\\hat{s_z},\\hat L_x^2]\\hat{L_y}+\\hat{L_y}[\\hat{s_z},\\hat L_x^2]\\hat{L_z}+\\hat{L_z}[\\hat{s_z},\\hat L_x^2]=0.\n\\]</span></p>\n<p><span class=\"math display\">\\[\n[\\hat{J_z},\\hat{\\vec s}^2]=[\\hat{L_z}+\\hat{s_z},\\hat{\\vec s}^2]=[\\hat{L_z},\\hat{\\vec s}^2]=[\\hat{L_z},\\hat s_x^2]+[\\hat{L_z},\\hat s_y^2]+[\\hat{L_z},\\hat s_z^2]=[\\hat{L_z},\\hat s_x]\\hat{s_x}+\\hat{s_x}[\\hat{L_z},\\hat s_x^2]+[\\hat{L_z},\\hat s_x^2]\\hat{s_y}+\\hat{s_y}[\\hat{L_z},\\hat s_x^2]\\hat{s_z}+\\hat{s_z}[\\hat{L_z},\\hat s_x^2]=0.\n\\]</span></p>\n<p><span class=\"math display\">\\[\n[\\hat {J_z},\\hat{\\vec J}^2]=[\\hat J_z,\\hat{\\vec L}^2]+[\\hat J_z,\\hat{\\vec s}^2]=0.\n\\]</span></p>\n<p>57、在 Stern-Gerlach 实验中，窄银原子束从左侧向右通过梯度磁场，然后沉积在冷凝屏上。已知磁场区长度<span class=\"math inline\">\\(a = 10cm\\)</span>，磁场区右边缘与屏的距离<span class=\"math inline\">\\(b = 20cm\\)</span>，银原子速度$v = 300 m / s $。磁场强度的梯度值取多大时，原子束在屏上的裂距为<span class=\"math inline\">\\(2mm\\)</span>？</p>\n<p>磁矩与外场作用的势能 <span class=\"math display\">\\[\nW=-\\vec\\mu\\cdot\\vec B=-\\mu_z(\\frac{\\mathrm d B}{\\mathrm d z}z).\n\\]</span> 银原子所受的作用力 <span class=\"math display\">\\[\nF=-\\nabla W=\\mu_z\\frac{\\mathrm d B}{\\mathrm d z}.\n\\]</span> 通过磁场区域后的横向偏移 <span class=\"math display\">\\[\nx_1=\\frac12at^2=\\frac12\\frac Fm(\\frac av)^2=\\frac{a^2\\mu_z}{2mv^2}\\frac{\\mathrm d B}{\\mathrm d z}.\n\\]</span> 在磁场外的横向偏移 <span class=\"math display\">\\[\nx_2=v_2t_2=\\frac{Fab}{mv^2}=\\frac{\\mu_zab\\mathrm d B}{mv^2\\mathrm dz}.\n\\]</span> 两条纹的横向间隔 <span class=\"math display\">\\[\n\\Delta x=2(x_1+x_2).\n\\]</span> 磁场强度梯度</p>\n<p>//TODO</p>\n<p>58、计算可知 <span class=\"math display\">\\[\n\\exp(-\\mathrm i\\frac{\\sigma_z}2\\theta)(n_1\\sigma_x+n_2\\sigma_y)\\exp(\\mathrm i\\frac{\\sigma_z}2\\theta)\\equiv n_1&#39;\\sigma_x+n_2&#39;\\sigma_y\n\\]</span> 求<span class=\"math inline\">\\((n_1&#39;,n_2&#39;)\\)</span>。</p>\n<p>//TODO</p>\n<h1 id=\"相对论量子力学\">相对论量子力学</h1>\n<h1 id=\"角动量的耦合\">角动量的耦合</h1>\n<p>59、两个自旋为 <span class=\"math inline\">\\(\\frac12\\)</span> 的粒子组成复合系统，粒子 A 处在本征值<span class=\"math inline\">\\(S_{z,A}=+\\frac\\hbar2\\)</span>对应本征态上，粒子 B 处在本征值<span class=\"math inline\">\\(S_{x,A}=+\\frac\\hbar2\\)</span>对应本征态上，求测得总自旋为零的概率。</p>\n<p>//TODO</p>\n<p>60、两电子系统处于总自旋<span class=\"math inline\">\\(S=1\\)</span>的状态，那么物理量<span class=\"math inline\">\\(\\vec s_1\\cdot\\vec s_2\\)</span>的可能取值是多少？</p>\n<p>总自旋为1，说明两电子自旋都是<span class=\"math inline\">\\(\\frac12\\)</span>，这样 <span class=\"math display\">\\[\n\\vec s_1\\cdot\\vec s_2=\\hat s_x^{(1)}\\hat s_x^{(2)}或\\hat s_y^{(1)}\\hat s_y^{(2)}或\\hat s_z^{(1)}\\hat s_z^{(2)}.\n\\]</span> \n$$\n=\n\\begin{pmatrix}\n0&1\\\\\n1&0\\\\\n\\end{pmatrix}\n\\otimes\n\\begin{pmatrix}\n0&1\\\\\n1&0\\\\\n\\end{pmatrix}\n或\n\\begin{pmatrix}\n0&-\\mathrm i\\\\\n\\mathrm i&0\\\\\n\\end{pmatrix}\n\\otimes\n\\begin{pmatrix}\n0&-\\mathrm i\\\\\n\\mathrm i&0\\\\\n\\end{pmatrix}\n或\n\\begin{pmatrix}\n1&0\\\\\n0&-1\\\\\n\\end{pmatrix}\n\\otimes\n\\begin{pmatrix}\n1&0\\\\\n0&-1\\\\\n\\end{pmatrix}.\n$$\n</p>\n<p>61、自旋交换算符<span class=\"math inline\">\\(\\hat P_{12}\\)</span>交换两粒子的自旋状态。在直积表象， <span class=\"math display\">\\[\n\\hat P_{12}|\\uparrow\\uparrow\\rangle=|\\uparrow\\uparrow\\rangle,\\hat P_{12}|\\uparrow\\downarrow\\rangle=|\\downarrow\\uparrow\\rangle,\\hat P_{12}|\\downarrow\\uparrow\\rangle=|\\uparrow\\downarrow\\rangle,\\hat P_{12}|\\downarrow\\downarrow\\rangle=|\\downarrow\\downarrow\\rangle,\n\\]</span></p>\n<p>写出算符<span class=\"math inline\">\\(\\hat P_{12}\\)</span>的矩阵形式。</p>\n\n$$\n\\hat P_{12}(|\\uparrow\\uparrow\\rangle,|\\uparrow\\downarrow\\rangle,|\\downarrow\\uparrow\\rangle,|\\downarrow\\downarrow\\rangle)=(|\\uparrow\\uparrow\\rangle,|\\downarrow\\uparrow\\rangle,|\\uparrow\\downarrow\\rangle,|\\downarrow\\downarrow\\rangle),\n$$\n\n$$\n\\hat{P_{12}}\n\\begin{pmatrix}\n1&0&0&0\\\\\n0&1&0&0\\\\\n0&0&1&0\\\\\n0&0&0&1\n\\end{pmatrix}\n=\n\\begin{pmatrix}\n1&0&0&0\\\\\n0&0&1&0\\\\\n0&1&0&0\\\\\n0&0&1&1\n\\end{pmatrix}.\n$$\n\n$$\n\\hat{P_{12}}=\n\\begin{pmatrix}\n1&0&0&0\\\\\n0&0&1&0\\\\\n0&1&0&0\\\\\n0&0&1&1\n\\end{pmatrix}.\n$$\n\n\n<p>62、对于<span class=\"math inline\">\\(l=1\\)</span>，<span class=\"math inline\">\\(s=1\\)</span>，计算<span class=\"math inline\">\\(\\vec l\\cdot \\vec s\\)</span>的可能值。</p>\n<p>//TODO</p>\n<h1 id=\"全同粒子\">全同粒子</h1>\n<p>63、 氦原子的两个电子，在基态时空间波函数都占据 1s 轨道。</p>\n<p>（1）只考虑电子与原子核的库仑作用，计算氦原子的基态能量。</p>\n<p>（2）在此基础上，考虑电子间的库仑排斥力，那么对基态能量的修正是多少？</p>\n<p>//TODO</p>\n<p>64、根据泡利不相容原理，判断氦原子的两个激发态 <span class=\"math inline\">\\(2^1S_0\\)</span>和 <span class=\"math inline\">\\(2^3S_1\\)</span>，哪个能级高？这里的激发态指氦原子的一个电子被激发，另一个电子仍处于 1s 轨道的状态。</p>\n<p>//TODO</p>\n<h1 id=\"两态系统和量子比特\">两态系统和量子比特</h1>\n<p>65、子系统的密度矩阵。</p>\n<p>//TODO</p>\n<p>66、复矩阵<span class=\"math inline\">\\(u\\in\\mathbb C^{2\\times2}\\)</span>的矩阵元为</p>\n\n$$\nu=\\begin{pmatrix}\na&b\\\\\nc&d\n\\end{pmatrix}\n$$\n\n<p>如果<span class=\"math inline\">\\(u\\)</span>是特殊幺正矩阵， <span class=\"math display\">\\[\nu^\\dagger u=\\mathbb 1_{2\\times2}，\\det u=1,\n\\]</span> 证明： <span class=\"math display\">\\[\nc=-b^*,d=a^*,|a|^2+|b|^2=1.\n\\]</span> //TODO</p>\n<p>67、Hadamard门+相移门，能实现任意量子比特幺正变换。</p>\n<p>（1）计算并化简 <span class=\"math display\">\\[\nu(\\alpha,\\beta,\\gamma)=u_z(\\alpha)Hu_z(\\beta)Hu_z(\\gamma).\n\\]</span> //TODO</p>\n<p>（2）如果要使得</p>\n\n$$\nu(\\alpha,\\beta,\\gamma)=\\begin{pmatrix}\na&b\\\\\n-b^*&a^*\n\\end{pmatrix}\n$$\n\n<p>其中<span class=\"math inline\">\\(|a|^2+|b|^2=1\\)</span>，求 <span class=\"math display\">\\[\n\\alpha(a,b),\\beta(a,b),\\gamma(a,b).\n\\]</span></p>\n<p>//TODO</p>\n<h1 id=\"量子信息简介\">量子信息简介</h1>\n<p>68、判断 <span class=\"math display\">\\[\n|\\psi\\rangle=\\frac1{\\sqrt{10}}|00\\rangle-\\frac1{\\sqrt{10}}|01\\rangle+\\frac2{\\sqrt{10}}\\mathrm i|10\\rangle-\\frac2{\\sqrt{10}}\\mathrm i|11\\rangle\n\\]</span> 是不是纠缠态。</p>\n<p>//TODO</p>\n","categories":["Physics"],"tags":["Quantum Physics"]},{"title":"Stack and Queue","url":"/2021/12/29/Stack-and-Queue/","content":"<p>栈和队列ADT的逻辑结构、存储结构及基本操作：</p>\n<span id=\"more\"></span>\n<h1 id=\"逻辑结构\">逻辑结构</h1>\n<h2 id=\"栈\">栈</h2>\n<p>ADT Stack{</p>\n<p>数据对象： <span class=\"math display\">\\[\nD=\\{a_i|a_i\\in ElemSet,i=1,2,\\cdots,n,n\\geqslant 0\\}\n\\]</span></p>\n<p>数据关系： <span class=\"math display\">\\[\nR1=\\{&lt;a_{i-1},a_i&gt;|a_i-1,a_1\\in D,i=1,2,\\cdots,n\\}\n\\]</span> 约定<span class=\"math inline\">\\(a_n\\)</span>端为栈顶，<span class=\"math inline\">\\(a_i\\)</span>端为栈底。</p>\n<p>基本操作：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">InitStack(&amp;S);</span><br><span class=\"line\">DestroyStack(&amp;S);</span><br><span class=\"line\">ClearStack(&amp;S);</span><br><span class=\"line\">StackEmpty(S);</span><br><span class=\"line\">StackLength(S);</span><br><span class=\"line\">GetTop(S,&amp;e);</span><br><span class=\"line\">Push(&amp;S,e);</span><br><span class=\"line\">Pop(&amp;S,&amp;e);</span><br><span class=\"line\">StackTraverse(S,visit());</span><br></pre></td></tr></table></figure>\n<p>}ADT Stack</p>\n<h2 id=\"队列\">队列</h2>\n<p>ADT Queue{</p>\n<p>数据对象： <span class=\"math display\">\\[\nD=\\{a_i|a_i\\in ElemSet,i=1,2,\\cdots,n,n\\geqslant 0\\}\n\\]</span></p>\n<p>数据关系： <span class=\"math display\">\\[\nR1=\\{&lt;a_{i-1},a_i&gt;|a_i-1,a_1\\in D,i=1,2,\\cdots,n\\}\n\\]</span> 约定<span class=\"math inline\">\\(a_1\\)</span>端为队列头，<span class=\"math inline\">\\(a_n\\)</span>端为d队列尾。</p>\n<p>基本操作：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">InitQueue(&amp;Q);</span><br><span class=\"line\">DestroyQueue(&amp;Q);</span><br><span class=\"line\">ClearQueue(&amp;Q);</span><br><span class=\"line\">QueueEmpty(Q);</span><br><span class=\"line\">QueueLength(Q);</span><br><span class=\"line\">GetHead(Q,&amp;e);</span><br><span class=\"line\">EnQueue(&amp;Q,e);</span><br><span class=\"line\">DeQueue(&amp;Q,&amp;e);</span><br><span class=\"line\">QueueTranverse(Q,visit());</span><br></pre></td></tr></table></figure>\n<p>}ADT Queue</p>\n<h1 id=\"存储结构\">存储结构</h1>\n<h2 id=\"栈-1\">栈</h2>\n<h3 id=\"栈的顺序存储表示\">栈的顺序存储表示</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> STACK_INIT_SIZE 100;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> STACKINCREMENT 10;</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">    SElemType* base;</span><br><span class=\"line\">    SElemType* top;</span><br><span class=\"line\">    <span class=\"type\">int</span> stacksize;</span><br><span class=\"line\">&#125;SqStack;</span><br></pre></td></tr></table></figure>\n<h2 id=\"队列-1\">队列</h2>\n<h3 id=\"单链队列队列的链式存储结构\">单链队列——队列的链式存储结构</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">QNode</span>&#123;</span></span><br><span class=\"line\">    QElemType data;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">QNode</span>* <span class=\"title\">next</span>;</span></span><br><span class=\"line\">&#125;QNode,*QueuePtr;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">    QueuePtr front;</span><br><span class=\"line\">    QueuePtr rear;</span><br><span class=\"line\">&#125;LinkQueue;</span><br></pre></td></tr></table></figure>\n<h3 id=\"循环队列队列的顺序存储结构\">循环队列——队列的顺序存储结构</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MAXQSIZE 100</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">    QElemType* base;</span><br><span class=\"line\">    <span class=\"type\">int</span> front;</span><br><span class=\"line\">    <span class=\"type\">int</span> rear;</span><br><span class=\"line\">&#125;SqQueue;</span><br></pre></td></tr></table></figure>\n<h1 id=\"基本操作\">基本操作</h1>\n<h2 id=\"顺序栈\">顺序栈</h2>\n<h3 id=\"在内存中的表示\">在内存中的表示</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> STACK_INIT_SIZE 100</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> STACKINCREMENT 10</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">char</span> SElemType;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> &#123;</span>\t<span class=\"comment\">//顺序栈的定义</span></span><br><span class=\"line\">    SElemType *base;<span class=\"comment\">//栈底指针</span></span><br><span class=\"line\">    SElemType *top; <span class=\"comment\">//栈顶指针</span></span><br><span class=\"line\">    <span class=\"type\">int</span> stacksize;\t<span class=\"comment\">//当前已分配的存储空间</span></span><br><span class=\"line\">&#125; SqStack;</span><br></pre></td></tr></table></figure>\n<h3 id=\"初始化\">初始化</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">InitStack</span><span class=\"params\">(SqStack &amp;S)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//置空栈</span></span><br><span class=\"line\">    S.base=(SElemType*)<span class=\"built_in\">malloc</span>(STACK_INIT_SIZE*<span class=\"keyword\">sizeof</span>(SElemType));</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!S.base)</span><br><span class=\"line\">        <span class=\"built_in\">exit</span>(OVERFLOW);</span><br><span class=\"line\">    S.top=S.base;</span><br><span class=\"line\">    S.stacksize=STACK_INIT_SIZE;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"判定栈空\">判定栈空</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">StackEmpty</span><span class=\"params\">(SqStack S)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(S.top==S.base)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> TRUE;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> FALSE;</span><br><span class=\"line\">&#125;<span class=\"comment\">//StackEmpty</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"取栈顶元素\">取栈顶元素</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">GetTop</span><span class=\"params\">(SqStack S,SElemType &amp;e)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(S.top==S.base)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ERROR;</span><br><span class=\"line\">    e=*(S.top<span class=\"number\">-1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;<span class=\"comment\">//GetTop</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"出栈\">出栈</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">Pop</span><span class=\"params\">(SqStack &amp;S，SElemType &amp;e)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(S.top==S.base)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ERROR;</span><br><span class=\"line\">    e=*--S.top;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;<span class=\"comment\">//Pop</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"入栈\">入栈</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">Push</span><span class=\"params\">(SqStack &amp;S,SElemType e)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(S.top-S.base&gt;=S.stacksize)&#123;</span><br><span class=\"line\">        newbase=(SElemType*)<span class=\"built_in\">realloc</span>((STACK_INIT_SIZE+STACKINCREMENT)*<span class=\"keyword\">sizeof</span>(SElemType));</span><br><span class=\"line\">        <span class=\"keyword\">if</span>!newbase)</span><br><span class=\"line\">            <span class=\"built_in\">exit</span>(OVERFLOW);</span><br><span class=\"line\">        S.base=newbase;</span><br><span class=\"line\">        S.top=S.base+S.stacksize;</span><br><span class=\"line\">        S.stacksize+=STACKINCREMENT;</span><br><span class=\"line\">    &#125;<span class=\"comment\">//if</span></span><br><span class=\"line\">    *S.top++=e;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;<span class=\"comment\">//Push</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"链式栈\">链式栈</h2>\n<h3 id=\"在内存中的表示-1\">在内存中的表示</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> StackData;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span> &#123;</span></span><br><span class=\"line\">    StackData data;\t\t<span class=\"comment\">//结点</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span> *<span class=\"title\">link</span>;</span>\t<span class=\"comment\">//链指针</span></span><br><span class=\"line\">&#125;StackNode;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> &#123;</span></span><br><span class=\"line\">    StackNode *top;\t\t<span class=\"comment\">//栈顶指针</span></span><br><span class=\"line\">&#125;LinkStack;</span><br></pre></td></tr></table></figure>\n<h3 id=\"初始化-1\">初始化</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">InitStack</span><span class=\"params\">(LinkStack &amp;S)</span>&#123;</span><br><span class=\"line\">    S.top=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">&#125;<span class=\"comment\">//InitStack</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"入栈-1\">入栈</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">Push</span><span class=\"params\">(LinkList &amp;S,StackData e)</span>&#123;</span><br><span class=\"line\">    StackNode*p=(StackData*)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(StackData));</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!p)</span><br><span class=\"line\">        <span class=\"built_in\">exit</span>(OVERFLOW);</span><br><span class=\"line\">    p-&gt;data=e;</span><br><span class=\"line\">    p-&gt;link=S.top;</span><br><span class=\"line\">    S.top=p;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;<span class=\"comment\">//Push</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"判栈空\">判栈空</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">StackEmpty</span><span class=\"params\">(LinkStack S)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> S.top==<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">&#125;<span class=\"comment\">//LinkStack</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"取栈顶元素-1\">取栈顶元素</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">GetTop</span><span class=\"params\">(LinkList S,SElemType &amp;e)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(StackEmpty(S))</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ERROR;</span><br><span class=\"line\">    e=S.top-&gt;data;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;<span class=\"comment\">//GetTop</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"出栈-1\">出栈</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">Pop</span><span class=\"params\">(LinkStack &amp;S.StackData &amp;e)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(StackEmpty(S))</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ERROR;</span><br><span class=\"line\">    e=S.top-&gt;data;</span><br><span class=\"line\">    temp=S.top;</span><br><span class=\"line\">    S.top=S.top-&gt;link;</span><br><span class=\"line\">    <span class=\"built_in\">free</span>(temp);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;<span class=\"comment\">//Pop</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"链队列\">链队列</h2>\n<h3 id=\"在内存中的表示-2\">在内存中的表示</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">int</span> QElemType;\t<span class=\"comment\">//整数队列</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Qnode</span>&#123;</span></span><br><span class=\"line\">    QelemType data;\t\t<span class=\"comment\">//队列结点数据</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Qnode</span> *<span class=\"title\">next</span>;</span>\t<span class=\"comment\">//结点链指针</span></span><br><span class=\"line\">&#125;Qnode,*QuenePtr;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">    QueuePtr rear,front;</span><br><span class=\"line\">&#125;LinkQueue;</span><br></pre></td></tr></table></figure>\n<h3 id=\"入队\">入队</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">EnQueue</span><span class=\"params\">(LinkQueue &amp;Q,ElemType e)</span>&#123;</span><br><span class=\"line\">    p=(QElemType*)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(QElemType));</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!p)</span><br><span class=\"line\">        <span class=\"built_in\">exit</span>(OVERFLOW);</span><br><span class=\"line\">    p-&gt;data=e;</span><br><span class=\"line\">    p-&gt;next=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    Q.rear-&gt;next=p;</span><br><span class=\"line\">    Q.rear=p;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;<span class=\"comment\">//EnQueue</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"出队\">出队</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">DeQueue</span><span class=\"params\">(LinkQueue &amp;Q,QElemType &amp;e)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(Q.front==Q.rear)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ERROR;</span><br><span class=\"line\">    e=Q.front-&gt;next-&gt;next-&gt;dara;</span><br><span class=\"line\">    temp=Q.front-&gt;next-&gt;next;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(Q.rear==Q.front-&gt;next-&gt;next)</span><br><span class=\"line\">        Q.rear=Q.front-&gt;next;</span><br><span class=\"line\">    Q.front-&gt;next-&gt;next=Q.front-&gt;next-&gt;next-&gt;next;</span><br><span class=\"line\">    <span class=\"built_in\">free</span>(temp);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;<span class=\"comment\">//DeQueue</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"循环队列\">循环队列</h2>\n<h3 id=\"在内存中的表示-3\">在内存中的表示</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MAXSIZE 100</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">    QElemType *base;</span><br><span class=\"line\">    <span class=\"type\">int</span> front;</span><br><span class=\"line\">    <span class=\"type\">int</span> rear;</span><br><span class=\"line\">&#125;SqQueue;</span><br></pre></td></tr></table></figure>\n<h3 id=\"初始化-2\">初始化</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">InitQueue</span><span class=\"params\">(SqQueue &amp;Q)</span>&#123;</span><br><span class=\"line\">    Q.base=(QElemType*)<span class=\"built_in\">malloc</span>(MAXSIZE*<span class=\"keyword\">sizeof</span>(QElemType));</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!Q.base)</span><br><span class=\"line\">        <span class=\"built_in\">exit</span>(OVERFLOW);</span><br><span class=\"line\">    Q.rear=<span class=\"number\">0</span>;</span><br><span class=\"line\">    Q.front=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;<span class=\"comment\">//InitQueue</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"出队-1\">出队</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">Dequeue</span><span class=\"params\">(SqQueue &amp;Q,QElemType &amp;e)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(Q.rear==Q.front)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ERROR;</span><br><span class=\"line\">    e=Q.base[Q.front];</span><br><span class=\"line\">    Q.front=(Q.front+<span class=\"number\">1</span>)%MAXSIZE;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;<span class=\"comment\">//DeQueue</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"入队-1\">入队</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">EnQueue</span><span class=\"params\">(SqQueue &amp;Q,QElemType e)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>((Q.rear-Q.front)%MAXSIZE)==<span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ERROR;</span><br><span class=\"line\">    Q.base[Q.rear]=e;</span><br><span class=\"line\">    Q.rear=(Q.rear+<span class=\"number\">1</span>%MAXSIZE);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;<span class=\"comment\">//EnQueue</span></span><br></pre></td></tr></table></figure>\n","categories":["Computer Science"],"tags":["Data Structure"]},{"title":"Stationary Process","url":"/2021/11/23/Stationary-Process/","content":"<h1 id=\"平稳过程\">平稳过程</h1>\n<p>平稳过程是统计特性不随时间的推移而变化的随机过程。</p>\n<span id=\"more\"></span>\n<h2 id=\"定义和例子\">定义和例子</h2>\n<h3 id=\"严平稳过程\">严平稳过程</h3>\n<p>设<span class=\"math inline\">\\(X=\\{X(t),t\\in T\\}\\)</span>为一随机过程，若对任意正整数<span class=\"math inline\">\\(k\\)</span>及<span class=\"math inline\">\\(T\\)</span>中任意<span class=\"math inline\">\\(k\\)</span>个时刻<span class=\"math inline\">\\(t_1&lt;t_2&lt;\\cdots&lt;t_k\\)</span>，及<span class=\"math inline\">\\(T\\)</span>中的<span class=\"math inline\">\\(h\\)</span>，有 <span class=\"math display\">\\[\n\\{X(t_1),\\cdots,X(t_k)\\}\\mathop{=}\\limits^d\\{X(t_1+h),\\cdots,X(t_k+h)\\},\n\\]</span> 则随机过程<span class=\"math inline\">\\(X\\)</span>称为严平稳过程。这里“d”表示等式两边<span class=\"math inline\">\\(k\\)</span>维随机向量的分布相同。</p>\n<h3 id=\"宽平稳过程\">宽平稳过程</h3>\n<p>设<span class=\"math inline\">\\(X=\\{X(t),t\\in T\\}\\)</span>为一实值随机过程，如果对<span class=\"math inline\">\\(\\forall t\\in T,EX^2(t)&lt;\\infty,EX(t)=m\\)</span>以及协方差函数<span class=\"math inline\">\\(E(X(t)-m)(X(s)-m)\\)</span>仅与<span class=\"math inline\">\\(t-s\\)</span>有关，则称<span class=\"math inline\">\\(X\\)</span>为宽平稳随机过程。</p>\n<h3 id=\"gauss过程\">Gauss过程</h3>\n<p>设<span class=\"math inline\">\\(G=\\{G(t),-\\infty&lt;t&lt;\\infty\\}\\)</span>为一随机过程，如果对任一正整数<span class=\"math inline\">\\(k\\)</span>以及<span class=\"math inline\">\\(k\\)</span>个时刻<span class=\"math inline\">\\(t_1\\leqslant t_2\\leqslant\\cdots\\leqslant t_k\\)</span>，<span class=\"math inline\">\\((G(t_1),G(t_2),\\cdots,G(t_k))\\)</span>的联合分布为<span class=\"math inline\">\\(k\\)</span>维正态分布，则称<span class=\"math inline\">\\(G\\)</span>为Gauss过程。</p>\n<h3 id=\"周期平稳过程\">周期平稳过程</h3>\n<p>设设<span class=\"math inline\">\\(X=\\{X(t),t\\in T\\}\\)</span>为平稳过程，如果存在正整数<span class=\"math inline\">\\(\\kappa\\)</span>使<span class=\"math inline\">\\(X(t+\\kappa)=X(t)\\)</span>，则<span class=\"math inline\">\\(X\\)</span>称为周期平稳过程，<span class=\"math inline\">\\(\\kappa\\)</span>为过程的周期。如果<span class=\"math inline\">\\(X\\)</span>是周期平稳过程，则其协方差函数也是周期函数，且与过程有相同的周期。</p>\n<h2 id=\"遍历性定理\">遍历性定理</h2>\n<h3 id=\"均值遍历性定理\">均值遍历性定理</h3>\n<ol type=\"1\">\n<li>设<span class=\"math inline\">\\(X=\\{X_n,0=0,\\pm1,\\cdots\\}\\)</span>为平稳序列，其协方差函数为<span class=\"math inline\">\\(R(\\tau)\\)</span>，则<span class=\"math inline\">\\(X\\)</span>有遍历性的充分必要条件是</li>\n</ol>\n<p><span class=\"math display\">\\[\n\\lim\\limits_{N\\to\\infty}\\frac 1 N \\sum\\limits_{\\tau=0}^{N-1}R(\\tau)=0.\n\\]</span></p>\n<ol start=\"2\" type=\"1\">\n<li>若<span class=\"math inline\">\\(X=\\{X(t),-\\infty&lt;t&lt;\\infty\\}\\)</span>为平稳过程，则<span class=\"math inline\">\\(X\\)</span>有遍历性的充分必要条件是</li>\n</ol>\n<p><span class=\"math display\">\\[\n\\lim\\limits_{T\\to\\infty}\\frac 1 T\\int_0^{2T}(1-\\frac\\tau{2T})R(\\tau)\\mathrm d\\tau=0.\n\\]</span></p>\n<h3 id=\"平稳过程均值遍历性定理的充分条件\">平稳过程均值遍历性定理的充分条件</h3>\n<ol type=\"1\">\n<li>若<span class=\"math inline\">\\(\\int_{-\\infty}^\\infty|R(\\tau)|\\mathrm d\\tau&lt;\\infty\\)</span>，则均值遍历性定理成立。</li>\n<li>对平稳序列而言，若<span class=\"math inline\">\\(R(\\tau)\\to0(\\tau\\to\\infty)\\)</span>，则均值遍历性定理成立。</li>\n</ol>\n<h2 id=\"平稳过程的协方差函数和功率谱密度\">平稳过程的协方差函数和功率谱密度</h2>\n<h3 id=\"wiener-khintchine公式\">Wiener-Khintchine公式</h3>\n<p>假定<span class=\"math inline\">\\(EX(t)=0\\)</span>，且<span class=\"math inline\">\\(\\int|R(\\tau)|d\\tau&lt;\\infty\\)</span>，则 <span class=\"math display\">\\[\ns(w)=\\int R(\\tau)e^{-\\mathrm j w\\tau}\\mathrm d\\tau,\n\\]</span></p>\n<p><span class=\"math display\">\\[\nR(\\tau)=\\frac 1{2\\pi}\\int S(w)e^{\\mathrm jwr}\\mathrm dw.\n\\]</span></p>\n","categories":["Mathematics"],"tags":["Stochastic Process"]},{"title":"Stochastic Process Crip","url":"/2022/01/10/Stochastic-Process-Crip/","content":"<p>《随机过程（B）》期末考试合法小抄：</p>\n<span id=\"more\"></span>\n<figure>\n<img src=\"https://gsxgoldenlegendary.github.io/images/crip_09.jpg\" alt=\"page0\" /><figcaption>page0</figcaption>\n</figure>\n<figure>\n<img src=\"https://gsxgoldenlegendary.github.io/images/crip_10.jpg\" alt=\"page1\" /><figcaption>page1</figcaption>\n</figure>\n","categories":["Mathematics"],"tags":["Stochastic Process"]},{"title":"String","url":"/2021/12/29/String/","content":"<p>串ADT的逻辑结构、存储结构及基本操作：</p>\n<span id=\"more\"></span>\n<h1 id=\"逻辑结构\">逻辑结构</h1>\n<p>ADT String{</p>\n<p>数据对象： <span class=\"math display\">\\[\nD=\\{a_i|a_i\\in ElemSet,i=1,2,\\cdots,n,n\\geqslant 0\\}\n\\]</span></p>\n<p>数据关系： <span class=\"math display\">\\[\nR1=\\{&lt;a_{i-1},a_i&gt;|a_i-1,a_1\\in D,i=1,2,\\cdots,n\\}\n\\]</span> 基本操作：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">StrAssign(&amp;T,chars);</span><br><span class=\"line\">StrCopy(&amp;T,S);</span><br><span class=\"line\">StrEmpty(S);</span><br><span class=\"line\">StrCompare(S,T);</span><br><span class=\"line\">StrLength(S);</span><br><span class=\"line\">ClearString(&amp;S);</span><br><span class=\"line\">Concat(&amp;T,S1,S2);</span><br><span class=\"line\">SubString(&amp;Sub,S,pos,len);</span><br><span class=\"line\">Index(S,T,pos);</span><br><span class=\"line\">Repalce(&amp;S,T,V);</span><br><span class=\"line\">StrInsert(&amp;S,pos,T);</span><br><span class=\"line\">StrDelete(&amp;S,pos,len);</span><br><span class=\"line\">DestroyString(&amp;S);</span><br></pre></td></tr></table></figure>\n<p>}ADT String</p>\n<h1 id=\"存储结构\">存储结构</h1>\n<h2 id=\"定长顺序存储表示\">定长顺序存储表示</h2>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MAXSTRLEN 255</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">unsigned</span> <span class=\"type\">char</span> SString[MAXSTRLEN+<span class=\"number\">1</span>];</span><br></pre></td></tr></table></figure>\n<h2 id=\"堆分配存储表示\">堆分配存储表示</h2>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> &#123;</span></span><br><span class=\"line\">    <span class=\"type\">char</span> *ch;\t<span class=\"comment\">//若非空，按长度分配，否则为NULL</span></span><br><span class=\"line\">    <span class=\"type\">int</span> length\t<span class=\"comment\">//串的长度</span></span><br><span class=\"line\">&#125;HString;</span><br></pre></td></tr></table></figure>\n<h2 id=\"块链存储表示\">块链存储表示</h2>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> CHUNKSIZE 80</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Chunk</span>&#123;</span></span><br><span class=\"line\">    <span class=\"type\">char</span> ch[CHUNKSIZE];</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Chunk</span>* <span class=\"title\">next</span>;</span></span><br><span class=\"line\">&#125;Chunk;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">    Chunk* head;</span><br><span class=\"line\">    Chunk* tail;</span><br><span class=\"line\">    <span class=\"type\">int</span> curlen;</span><br><span class=\"line\">&#125;LString;</span><br></pre></td></tr></table></figure>\n<h1 id=\"基本操作\">基本操作</h1>\n<h2 id=\"定长顺序存储表示-1\">定长顺序存储表示</h2>\n<h3 id=\"在内存中的表示\">在内存中的表示</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MAX_STRLEN 256</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> &#123;</span></span><br><span class=\"line\">    <span class=\"type\">char</span> str[MAX_STRLEN];</span><br><span class=\"line\">    <span class=\"type\">int</span> length;</span><br><span class=\"line\">&#125;StringType;</span><br></pre></td></tr></table></figure>\n<h3 id=\"将一个串拼接在另一个串后\">将一个串拼接在另一个串后</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">StrConcat</span><span class=\"params\">(StringType &amp;S,StringType T)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(S.length+T.length&gt;MAX_STRLEN)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ERROR;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;T.length;++i)</span><br><span class=\"line\">        S.ch[i+S.length]=T.ch[i];</span><br><span class=\"line\">    S.length+=T.length;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;<span class=\"comment\">//StrConcat</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"求主串给定起点和长度的子串\">求主串给定起点和长度的子串</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">SubString</span><span class=\"params\">(StringType &amp;S,<span class=\"type\">int</span> pos,<span class=\"type\">int</span> len,StringType &amp;sub)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(pos&lt;<span class=\"number\">0</span>||pos&gt;=S.length||len&lt;<span class=\"number\">0</span>||len&gt;S.length-pos)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ERROR;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=pos;i&lt;pos+len;++i)</span><br><span class=\"line\">        sub.ch[i-pos]=S.ch[i];</span><br><span class=\"line\">    sub.length=len;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;<span class=\"comment\">//SubString</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"堆分配存储表示-1\">堆分配存储表示</h2>\n<h3 id=\"连接\">连接</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">StrConcat</span><span class=\"params\">(HString &amp;T, HString S1,HString S2)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(T.ch)</span><br><span class=\"line\">        <span class=\"built_in\">free</span>(T.ch);</span><br><span class=\"line\">    T.ch=(<span class=\"type\">char</span>*)<span class=\"built_in\">malloc</span>((S1.length+S2.length)*<span class=\"keyword\">sizeof</span>(<span class=\"type\">char</span>));</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!T.ch)</span><br><span class=\"line\">        <span class=\"built_in\">exit</span>(OVERFLOW);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;S1.length;++i)</span><br><span class=\"line\">        T.ch[i]=S1.ch[i];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=S1.length;i&lt;S1.length+S2.length;++i)</span><br><span class=\"line\">        T.ch[i]=S2.ch[i-S1.length];</span><br><span class=\"line\">    <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;<span class=\"comment\">//StrConcat</span></span><br></pre></td></tr></table></figure>\n","categories":["Computer Science"],"tags":["Data Structure"]},{"title":"Substances in Static Electric Field and Electric Field Energy","url":"/2021/07/04/Substances-in-Static-Electric-Field-and-Electric-Field-Energy/","content":"<p>物质中的电场与电场能量笔记：</p>\n<span id=\"more\"></span>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/physics14.pdf\">移动端点击链接下载查看</a></p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/physics14.pdf\" data-height=\"600px\"></div>\n","categories":["Physics"],"tags":["Electromagnetism"]},{"title":"The First Law of Thermodynamics and Its Application","url":"/2021/03/03/The-First-Law-of-Thermodynamics-and-Its-Application/","content":"<p>热力学第一定律及其应用笔记：</p>\n<span id=\"more\"></span>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/physics08.pdf\">移动端点击链接下载查看</a>（公式）</p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/physics09.pdf\" data-height=\"600px\"></div>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/physics08.pdf\">移动端点击链接下载查看</a>（例题）</p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/physics10.pdf\" data-height=\"600px\"></div>\n","categories":["Physics"],"tags":["Thermology"]},{"title":"The Second Law of Thermodynamics and Entropy","url":"/2021/03/03/The-Second-Law-of-Thermodynamics-and-Entropy/","content":"<p>热力学第二定律与熵笔记：</p>\n<span id=\"more\"></span>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/physics11.pdf\">移动端点击链接下载查看</a></p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/physics11.pdf\" data-height=\"600px\"></div>\n","categories":["Physics"],"tags":["Thermology"]},{"title":"Thermistor","url":"/2021/04/23/Thermistor/","content":"<p>大学物理基础实验 A 实验报告《半导体温度计》：</p>\n<span id=\"more\"></span>\n<p>移动端点击链接下载查看；</p>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/physics04.pdf\">Thermistor</a></p>\n<p>PC端支持在线预览。</p>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/physics04.pdf\" data-height=\"600px\"></div>\n","categories":["Physics"],"tags":["Physical Experiment"]},{"title":"Thermology Crip","url":"/2021/03/03/Thermology-Crip/","content":"<p>《热学（B）》期末考试合法小抄：</p>\n<span id=\"more\"></span>\n<figure>\n<img src=\"https://gsxgoldenlegendary.github.io/images/crip_03.jpg\" alt=\"page0\" /><figcaption>page0</figcaption>\n</figure>\n<figure>\n<img src=\"https://gsxgoldenlegendary.github.io/images/crip_04.jpg\" alt=\"page1\" /><figcaption>page1</figcaption>\n</figure>\n","categories":["Physics"],"tags":["Thermology"]},{"title":"Tree and Binary Tree","url":"/2021/12/29/Tree-and-Binary-Tree/","content":"<p>树和二叉树ADT的逻辑结构、存储结构及基本操作：</p>\n<span id=\"more\"></span>\n<h1 id=\"逻辑结构\">逻辑结构</h1>\n<h2 id=\"树\">树</h2>\n<p>ADT Tree{</p>\n<p>数据对象D：D是具有相同特性的数据元素的集合。</p>\n<p>数据关系R：若D为空集，则称为空树； 若D仅含一个数据元素，则R为空集，否则R={H}，H是如下二元关系：</p>\n<ol type=\"1\">\n<li>在D中存在唯一的称为根的数据元素root，它在关系H下无前驱；</li>\n<li>若<span class=\"math inline\">\\(D=\\{root\\}\\neq\\Phi\\)</span>，则存在<span class=\"math inline\">\\(D-\\{root\\}\\)</span>的一个划分<span class=\"math inline\">\\(D_1,D_2,\\cdots,D_m(m&gt;0)\\)</span>，对任意<span class=\"math inline\">\\(j\\neq k(1\\leqslant j,k\\leqslant m)\\)</span>，有<span class=\"math inline\">\\(D_j\\cap D_k=\\Phi\\)</span>，且对任意的<span class=\"math inline\">\\(i(1\\leqslant i\\leqslant m)\\)</span>，唯一存在数据元素<span class=\"math inline\">\\(x_i\\in D\\)</span>，有<span class=\"math inline\">\\(&lt;root,x_i&gt;\\in H\\)</span>；</li>\n<li>对应于<span class=\"math inline\">\\(D=\\{root\\}\\)</span>的划分，<span class=\"math inline\">\\(H-\\{&lt;root,x_1&gt;,\\cdots,&lt;root,x_m&gt;\\}\\)</span>有唯一的一个划分<span class=\"math inline\">\\(H_1,H_2,\\cdots,H_m(m&gt;0)\\)</span>，对任意<span class=\"math inline\">\\(j\\neq k(1\\leqslant j,k\\leqslant m)\\)</span>有<span class=\"math inline\">\\(D_j\\cap D_k=\\Phi\\)</span>，且对任意的<span class=\"math inline\">\\(i(1\\leqslant i\\leqslant m)\\)</span>，<span class=\"math inline\">\\(H_i\\)</span>是<span class=\"math inline\">\\(D_i\\)</span>上的二元关系，<span class=\"math inline\">\\((D_i,\\{H_i\\})\\)</span>是一棵符合本定义的树，称为根<span class=\"math inline\">\\(root\\)</span>的子树。</li>\n</ol>\n<p>基本操作P：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">InitTree(&amp;T);</span><br><span class=\"line\">DestroyTree(&amp;T);</span><br><span class=\"line\">CreateTree(&amp;T,definition);</span><br><span class=\"line\">ClearTree(&amp;T);</span><br><span class=\"line\">TreeEmpty(T);</span><br><span class=\"line\">TreeDepth(T);</span><br><span class=\"line\">Root(T);</span><br><span class=\"line\">Value(T,cur_e);</span><br><span class=\"line\">Assign(T,cur_e,value);</span><br><span class=\"line\">Parent(T,cur_e,value);</span><br><span class=\"line\">LeftChild(T,cur_e);</span><br><span class=\"line\">RightChild(T,cur_e);</span><br><span class=\"line\">InsertChild(&amp;T,&amp;p,i,c);</span><br><span class=\"line\">DeleteChild(&amp;T,&amp;p,i);</span><br><span class=\"line\">TraverseTree(T,Visit());</span><br></pre></td></tr></table></figure>\n<p>}ADT Tree</p>\n<h2 id=\"二叉树\">二叉树</h2>\n<p>ADT BinaryTree{</p>\n<p>数据对象D：D是具有相同特性的数据元素的集合。</p>\n<p>数据关系R：若<span class=\"math inline\">\\(D=\\Phi\\)</span>，则<span class=\"math inline\">\\(R=\\Phi\\)</span>，称BinaryTree为空二叉树； 若<span class=\"math inline\">\\(D\\neq\\Phi\\)</span>则<span class=\"math inline\">\\(R=\\{H\\}\\)</span>，H是如下二元关系：</p>\n<ol type=\"1\">\n<li>在D中存在唯一的称为根的数据元素root，它在关系H下无前驱；</li>\n<li>若<span class=\"math inline\">\\(D=\\{root\\}\\neq\\Phi\\)</span>，则存在<span class=\"math inline\">\\(D-\\{root\\}=\\{D_l,D_r\\}\\)</span>，且<span class=\"math inline\">\\(D_l\\cap D_r=\\Phi\\)</span>；</li>\n<li>若<span class=\"math inline\">\\(D_l\\neq\\Phi\\)</span>，则<span class=\"math inline\">\\(D_l\\)</span>中存在唯一的元素<span class=\"math inline\">\\(x_l\\)</span>，<span class=\"math inline\">\\(&lt;root,x_l&gt;\\in H\\)</span>，且存在<span class=\"math inline\">\\(D_l\\)</span>上的关系<span class=\"math inline\">\\(H_l\\subset H\\)</span>；若<span class=\"math inline\">\\(D_r\\neq\\Phi\\)</span>，则<span class=\"math inline\">\\(D_r\\)</span>中存在唯一的元素<span class=\"math inline\">\\(x_r\\)</span>，<span class=\"math inline\">\\(&lt;root,x_r&gt;\\in H\\)</span>，且存在<span class=\"math inline\">\\(D_r\\)</span>上的关系<span class=\"math inline\">\\(H_r\\subset H\\)</span>；<span class=\"math inline\">\\(H=\\{&lt;root,x_l&gt;,&lt;root,x_r&gt;,H_l,H_r\\}\\)</span>；</li>\n<li><span class=\"math inline\">\\((D_l,\\{H_l\\})\\)</span>是一棵符合本定义的二叉树，称为根的左子树，<span class=\"math inline\">\\((D_r,\\{H_r\\})\\)</span>是一棵符合本定义的二叉树，称为根的右子树。</li>\n</ol>\n<p>基本操作P：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">InitBiTree(&amp;T);</span><br><span class=\"line\">DestroyBiTree(&amp;T);</span><br><span class=\"line\">CreateBiTree(&amp;T,definition);</span><br><span class=\"line\">ClearBiTree(&amp;T);</span><br><span class=\"line\">BiTreeEmpty(T);</span><br><span class=\"line\">BiTreeDepth(T);</span><br><span class=\"line\">Root(T);</span><br><span class=\"line\">Value(T,e);</span><br><span class=\"line\">Assign(T,&amp;e,value);</span><br><span class=\"line\">Parent(T,cur_r,value);</span><br><span class=\"line\">LeftChild(T,e);</span><br><span class=\"line\">RightChild(T,e);</span><br><span class=\"line\">LeftSibling(T,e);</span><br><span class=\"line\">RightSibling(T,e);</span><br><span class=\"line\">InsertChild(T,p,LR,c);</span><br><span class=\"line\">DeleteChild(T,p,LR);</span><br><span class=\"line\">PreOrderTraverseTree(T,Visit());</span><br><span class=\"line\">InOrderTraverseTree(T,Visit());</span><br><span class=\"line\">PostOrderTraverseTree(T,Visit());</span><br><span class=\"line\">LevelOrderTraverseTree(T,Visit());</span><br></pre></td></tr></table></figure>\n<p>}ADT BinaryTree</p>\n<h1 id=\"存储结构\">存储结构</h1>\n<h2 id=\"树-1\">树</h2>\n<h3 id=\"树的双亲存储表示\">树的双亲存储表示</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MAX_TREE_SIZE\t<span class=\"comment\">//最大节点个数</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">PTNode</span>&#123;</span></span><br><span class=\"line\">    TElemType data;</span><br><span class=\"line\">    <span class=\"type\">int</span> parent;</span><br><span class=\"line\">&#125;PTNode;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">    PTNode nodes[MAX_TREE_SIZE];</span><br><span class=\"line\">    <span class=\"type\">int</span> r,n;</span><br><span class=\"line\">&#125;PTree;</span><br></pre></td></tr></table></figure>\n<h3 id=\"树的孩子链表存储表示\">树的孩子链表存储表示</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">CTNode</span>&#123;</span></span><br><span class=\"line\">    <span class=\"type\">int</span> child;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">CTNode</span>*<span class=\"title\">next</span>;</span></span><br><span class=\"line\">&#125;*ChildPtr;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">    TElemType data;</span><br><span class=\"line\">    ChildPtr firstchild;</span><br><span class=\"line\">&#125;CTBox;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">    CTBox nodes[MAX_TREE_SIZE];</span><br><span class=\"line\">    <span class=\"type\">int</span> n,r;</span><br><span class=\"line\">&#125;CTree;</span><br></pre></td></tr></table></figure>\n<h3 id=\"树的二叉链表孩子-兄弟存储表示\">树的二叉链表（孩子-兄弟）存储表示</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">CSNode</span>&#123;</span></span><br><span class=\"line\">    ElemType data;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">CSNode</span> *<span class=\"title\">firstchild</span>,*<span class=\"title\">nextsibling</span>;</span></span><br><span class=\"line\">&#125;CSNode,*CSTree;</span><br></pre></td></tr></table></figure>\n<h2 id=\"二叉树-1\">二叉树</h2>\n<h3 id=\"二叉树的顺序存储表示\">二叉树的顺序存储表示</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MAX_TREE_SIZE 100</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> TElemType SqBiTree[MAX_TREE_SIZE];</span><br><span class=\"line\">SqBiTree bt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"二叉树的二叉线索存储表示\">二叉树的二叉线索存储表示</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">Pointer</span>&#123;</span></span><br><span class=\"line\">    Link,Thread</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">BiThrNode</span>&#123;</span></span><br><span class=\"line\">    TElemType data;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">BiThrNode</span>*<span class=\"title\">lchild</span>,*<span class=\"title\">rchild</span>;</span></span><br><span class=\"line\">    PointerTag LTag,RTag;</span><br><span class=\"line\">&#125;BiThrNode,*BiThrTree;</span><br></pre></td></tr></table></figure>\n<h3 id=\"赫夫曼树和赫夫曼编码的存储表示\">赫夫曼树和赫夫曼编码的存储表示</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">    <span class=\"type\">unsigned</span> weight;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> parent,lchild,rchild;</span><br><span class=\"line\">&#125;HTNode,*HuffmanTree;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"type\">char</span>** HuffmanCode;</span><br></pre></td></tr></table></figure>\n<h1 id=\"基本操作\">基本操作</h1>\n<h2 id=\"二叉树-2\">二叉树</h2>\n<h3 id=\"二叉线索存储表示\">二叉线索存储表示</h3>\n<h4 id=\"中序遍历\">中序遍历</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">InOrderTraverse</span><span class=\"params\">(BiTree T,Status(Visit*)(TElemType e))</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//采用递归</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(T)&#123;</span><br><span class=\"line\">        InOrderTraverse(T-&gt;lchild);</span><br><span class=\"line\">        Visit(T-&gt;data);</span><br><span class=\"line\">        InOrderTraverse(T-&gt;rchild);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;<span class=\"comment\">//InOrderTraverse</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">InOrderTraverse</span><span class=\"params\">(BiTree T,Status(Visit*)(TElemType e))</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//采用非递归</span></span><br><span class=\"line\">    InitStack(S);</span><br><span class=\"line\">    Push(S,T);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(!StackEmpty(S))&#123;</span><br><span class=\"line\">       <span class=\"keyword\">while</span>(GetTop(S,e)&amp;&amp;e)</span><br><span class=\"line\">           Push(S,e-&gt;lchild);</span><br><span class=\"line\">        Pop(S,e);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!StackEmpty(S))&#123;</span><br><span class=\"line\">            Pop(S,e);</span><br><span class=\"line\">            Visit(e-&gt;data);</span><br><span class=\"line\">            Push(S,p-&gt;rchild);</span><br><span class=\"line\">        &#125;<span class=\"comment\">//if</span></span><br><span class=\"line\">    &#125;<span class=\"comment\">//while</span></span><br><span class=\"line\">&#125;<span class=\"comment\">//InOrderTraverse</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"先序遍历\">先序遍历</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">PreOrderTraverse</span><span class=\"params\">(BiTree T,Status(Visit*)(TElemType e))</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(T)&#123;</span><br><span class=\"line\">        Visit(T-&gt;data);</span><br><span class=\"line\">        PreOrderTraverse(T-&gt;lchild);</span><br><span class=\"line\">        PreOrderTraverse(T-&gt;rchild);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;<span class=\"comment\">//PreOrderTraverse</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"后序遍历\">后序遍历</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">PostOrderTraverse</span><span class=\"params\">(BiTree T,Status(Visit*)(TElemType e))</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(T)&#123;</span><br><span class=\"line\">        PostOrderTraverse(T-&gt;lchild);</span><br><span class=\"line\">        PostOrderTraverse(T-&gt;rchild);</span><br><span class=\"line\">        Visit(T-&gt;data);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;<span class=\"comment\">//PostOrderTraverse</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"构建\">构建</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">Status <span class=\"title function_\">CreateBiTree</span><span class=\"params\">(BiTree &amp;T)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(&amp;ch);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(ch==RefValue)</span><br><span class=\"line\">        T=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        T=(BiTNode*)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(BiTNode));</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!T)</span><br><span class=\"line\">            <span class=\"built_in\">exit</span>(OVERFLOW);</span><br><span class=\"line\">        CreateBiTree(T-&gt;lchild);</span><br><span class=\"line\">        CreateBiTree(T-&gt;rchild);</span><br><span class=\"line\">    &#125;<span class=\"comment\">//else</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> OK;</span><br><span class=\"line\">&#125;<span class=\"comment\">//CreateBiTree</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"计算结点个数\">计算结点个数</h4>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">Count</span><span class=\"params\">(BiTree T)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!T)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Count(T-&gt;lchild)+Count(T-&gt;rchild)+<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;<span class=\"comment\">//Count</span></span><br></pre></td></tr></table></figure>\n","categories":["Computer Science"],"tags":["Data Structure"]},{"title":"USTC Verilog OJ Solutions","url":"/2021/10/20/USTC-Verilog-OJ-Solutions/","content":"<p><a href=\"https://verilogoj.ustc.edu.cn\">USTC Verilog OJ链接</a></p>\n<h2 id=\"输出1\">输出1</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module(</span><br><span class=\"line\">      <span class=\"keyword\">output</span> one</span><br><span class=\"line\">  );</span><br><span class=\"line\">  <span class=\"keyword\">assign</span> one = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"输出0\">输出0</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module(</span><br><span class=\"line\">  <span class=\"keyword\">output</span> out</span><br><span class=\"line\">);</span><br><span class=\"line\">  <span class=\"keyword\">assign</span> out=<span class=\"number\">1&#x27;b0</span>;</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n<h2 id=\"wire\">wire</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module(</span><br><span class=\"line\">  <span class=\"keyword\">input</span> in,</span><br><span class=\"line\">  <span class=\"keyword\">output</span> out</span><br><span class=\"line\">);</span><br><span class=\"line\">  <span class=\"keyword\">assign</span> out=in;</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"多个端口的模块\">多个端口的模块</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module( </span><br><span class=\"line\">    <span class=\"keyword\">input</span> a,b,c,</span><br><span class=\"line\">    <span class=\"keyword\">output</span> w,x,y,z );</span><br><span class=\"line\">\t<span class=\"keyword\">assign</span> w=a,x=b,y=b,z=c;</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"非门\">非门</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module(</span><br><span class=\"line\">    <span class=\"keyword\">input</span> in, </span><br><span class=\"line\">    <span class=\"keyword\">output</span> out );</span><br><span class=\"line\">  \t<span class=\"keyword\">assign</span> out=!in;</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"与门\">与门</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module(</span><br><span class=\"line\">  <span class=\"keyword\">input</span> a, </span><br><span class=\"line\">  <span class=\"keyword\">input</span> b,</span><br><span class=\"line\">  <span class=\"keyword\">output</span> out );</span><br><span class=\"line\">\t<span class=\"keyword\">assign</span> out=a&amp;b;</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"或非门\">或非门</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module( </span><br><span class=\"line\">    <span class=\"keyword\">input</span> a, </span><br><span class=\"line\">    <span class=\"keyword\">input</span> b, </span><br><span class=\"line\">    <span class=\"keyword\">output</span> out );</span><br><span class=\"line\">  \t<span class=\"keyword\">assign</span> out=!(a|b);</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"同或门\">同或门</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module( </span><br><span class=\"line\">    <span class=\"keyword\">input</span> a, </span><br><span class=\"line\">    <span class=\"keyword\">input</span> b, </span><br><span class=\"line\">    <span class=\"keyword\">output</span> out );</span><br><span class=\"line\">  \t<span class=\"keyword\">xnor</span>(out,a,b);</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"线网型中间变量\">线网型中间变量</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module(</span><br><span class=\"line\">    <span class=\"keyword\">input</span> a,</span><br><span class=\"line\">    <span class=\"keyword\">input</span> b,</span><br><span class=\"line\">    <span class=\"keyword\">input</span> c,</span><br><span class=\"line\">    <span class=\"keyword\">input</span> d,</span><br><span class=\"line\">    <span class=\"keyword\">output</span> out,</span><br><span class=\"line\">    <span class=\"keyword\">output</span> out_n   </span><br><span class=\"line\">); </span><br><span class=\"line\">\t<span class=\"keyword\">wire</span> ab,cd,abcd;</span><br><span class=\"line\">  \t<span class=\"keyword\">and</span>(ab,a,b);</span><br><span class=\"line\">  \t<span class=\"keyword\">and</span>(cd,c,d);</span><br><span class=\"line\">  \t<span class=\"keyword\">or</span>(abcd,ab,cd);</span><br><span class=\"line\">  \t<span class=\"keyword\">assign</span> out=abcd;</span><br><span class=\"line\">  \t<span class=\"keyword\">assign</span> out_n=!abcd;</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"向量\">向量</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module ( </span><br><span class=\"line\">    <span class=\"keyword\">input</span> <span class=\"keyword\">wire</span> [<span class=\"number\">2</span>:<span class=\"number\">0</span>] vec,</span><br><span class=\"line\">    <span class=\"keyword\">output</span> <span class=\"keyword\">wire</span> [<span class=\"number\">2</span>:<span class=\"number\">0</span>] outv,</span><br><span class=\"line\">    <span class=\"keyword\">output</span> <span class=\"keyword\">wire</span> o2,</span><br><span class=\"line\">    <span class=\"keyword\">output</span> <span class=\"keyword\">wire</span> o1,</span><br><span class=\"line\">    <span class=\"keyword\">output</span> <span class=\"keyword\">wire</span> o0);</span><br><span class=\"line\">  <span class=\"keyword\">assign</span> outv=vec;</span><br><span class=\"line\">  <span class=\"keyword\">assign</span> o0=vec[<span class=\"number\">0</span>];</span><br><span class=\"line\">  <span class=\"keyword\">assign</span> o1=vec[<span class=\"number\">1</span>];</span><br><span class=\"line\">  <span class=\"keyword\">assign</span> o2=vec[<span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"向量_续1\">向量_续1</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">`<span class=\"keyword\">default_nettype</span> none     </span><span class=\"comment\">// Disable implicit nets. Reduces some types of bugs.</span></span><br><span class=\"line\"><span class=\"keyword\">module</span> top_module( </span><br><span class=\"line\">    <span class=\"keyword\">input</span>\t<span class=\"keyword\">wire</span>\t[<span class=\"number\">15</span>:<span class=\"number\">0</span>]\tin,</span><br><span class=\"line\">    <span class=\"keyword\">output</span>\t<span class=\"keyword\">wire</span>\t[<span class=\"number\">7</span>:<span class=\"number\">0</span>]\tout_hi,</span><br><span class=\"line\">    <span class=\"keyword\">output</span>\t<span class=\"keyword\">wire</span>\t[<span class=\"number\">7</span>:<span class=\"number\">0</span>]\tout_lo </span><br><span class=\"line\">);</span><br><span class=\"line\">  <span class=\"keyword\">assign</span> out_lo=in[<span class=\"number\">7</span>:<span class=\"number\">0</span>];</span><br><span class=\"line\">  <span class=\"keyword\">assign</span> out_hi=in[<span class=\"number\">15</span>:<span class=\"number\">8</span>];</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"向量_续2\">向量_续2</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module(</span><br><span class=\"line\">  <span class=\"keyword\">input</span> [<span class=\"number\">31</span>:<span class=\"number\">0</span>] in,</span><br><span class=\"line\">  <span class=\"keyword\">output</span> [<span class=\"number\">31</span>:<span class=\"number\">0</span>] out</span><br><span class=\"line\">);</span><br><span class=\"line\">  <span class=\"keyword\">assign</span> out[<span class=\"number\">31</span>:<span class=\"number\">24</span>] =in[<span class=\"number\">7</span>:<span class=\"number\">0</span>];</span><br><span class=\"line\">  <span class=\"keyword\">assign</span> out[<span class=\"number\">23</span>:<span class=\"number\">16</span>]=in[<span class=\"number\">15</span>:<span class=\"number\">8</span>];</span><br><span class=\"line\">  <span class=\"keyword\">assign</span> out[<span class=\"number\">15</span>:<span class=\"number\">8</span>]=in[<span class=\"number\">23</span>:<span class=\"number\">16</span>];</span><br><span class=\"line\">  <span class=\"keyword\">assign</span> out[<span class=\"number\">7</span>:<span class=\"number\">0</span>]=in[<span class=\"number\">31</span>:<span class=\"number\">24</span>];</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"位操作\">位操作</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module( </span><br><span class=\"line\">    <span class=\"keyword\">input</span> [<span class=\"number\">2</span>:<span class=\"number\">0</span>] a,</span><br><span class=\"line\">    <span class=\"keyword\">input</span> [<span class=\"number\">2</span>:<span class=\"number\">0</span>] b,</span><br><span class=\"line\">    <span class=\"keyword\">output</span> [<span class=\"number\">2</span>:<span class=\"number\">0</span>] out_or_bitwise,</span><br><span class=\"line\">    <span class=\"keyword\">output</span> out_or_logical,</span><br><span class=\"line\">    <span class=\"keyword\">output</span> [<span class=\"number\">5</span>:<span class=\"number\">0</span>] out_not</span><br><span class=\"line\">);</span><br><span class=\"line\">  <span class=\"keyword\">assign</span> out_or_bitwise=a|b;</span><br><span class=\"line\">  <span class=\"keyword\">or</span>(out_or_logical,|a,|b);</span><br><span class=\"line\">  <span class=\"keyword\">assign</span> out_not[<span class=\"number\">5</span>]=!b[<span class=\"number\">2</span>];</span><br><span class=\"line\">  <span class=\"keyword\">assign</span> out_not[<span class=\"number\">4</span>]=!b[<span class=\"number\">1</span>];</span><br><span class=\"line\">  <span class=\"keyword\">assign</span> out_not[<span class=\"number\">3</span>]=!b[<span class=\"number\">0</span>];</span><br><span class=\"line\">  <span class=\"keyword\">assign</span> out_not[<span class=\"number\">2</span>]=!a[<span class=\"number\">2</span>];</span><br><span class=\"line\">  <span class=\"keyword\">assign</span> out_not[<span class=\"number\">1</span>]=!a[<span class=\"number\">1</span>];</span><br><span class=\"line\">  <span class=\"keyword\">assign</span> out_not[<span class=\"number\">0</span>]=!a[<span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"位操作-1\">位操作</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module( </span><br><span class=\"line\">    <span class=\"keyword\">input</span> [<span class=\"number\">3</span>:<span class=\"number\">0</span>] in,</span><br><span class=\"line\">    <span class=\"keyword\">output</span> out_and,</span><br><span class=\"line\">    <span class=\"keyword\">output</span> out_or,</span><br><span class=\"line\">    <span class=\"keyword\">output</span> out_xor</span><br><span class=\"line\">);</span><br><span class=\"line\"><span class=\"keyword\">assign</span> out_and=&amp;in;</span><br><span class=\"line\">  <span class=\"keyword\">assign</span> out_or=|in;</span><br><span class=\"line\">  <span class=\"keyword\">assign</span> out_xor=^in;</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"向量拼接\">向量拼接</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module (</span><br><span class=\"line\">    <span class=\"keyword\">input</span> [<span class=\"number\">4</span>:<span class=\"number\">0</span>] a, b, c, d, e, f,</span><br><span class=\"line\">    <span class=\"keyword\">output</span> [<span class=\"number\">7</span>:<span class=\"number\">0</span>] w, x, y, z );</span><br><span class=\"line\">  <span class=\"keyword\">assign</span> w =&#123;a[<span class=\"number\">4</span>:<span class=\"number\">0</span>],b[<span class=\"number\">4</span>:<span class=\"number\">2</span>]&#125; ;</span><br><span class=\"line\">  <span class=\"keyword\">assign</span> x=&#123;b[<span class=\"number\">1</span>:<span class=\"number\">0</span>],c[<span class=\"number\">4</span>:<span class=\"number\">0</span>],d[<span class=\"number\">4</span>]&#125;;</span><br><span class=\"line\">  <span class=\"keyword\">assign</span> y=&#123;d[<span class=\"number\">3</span>:<span class=\"number\">0</span>],e[<span class=\"number\">4</span>:<span class=\"number\">1</span>]&#125;;</span><br><span class=\"line\">  <span class=\"keyword\">assign</span> z=&#123;e[<span class=\"number\">0</span>],f[<span class=\"number\">4</span>:<span class=\"number\">0</span>],<span class=\"number\">2&#x27;b11</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"向量翻转\">向量翻转</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module( </span><br><span class=\"line\">    <span class=\"keyword\">input</span> [<span class=\"number\">7</span>:<span class=\"number\">0</span>] in,</span><br><span class=\"line\">    <span class=\"keyword\">output</span> [<span class=\"number\">7</span>:<span class=\"number\">0</span>] out</span><br><span class=\"line\">);</span><br><span class=\"line\">  <span class=\"keyword\">assign</span> out[<span class=\"number\">0</span>]=in[<span class=\"number\">7</span>];</span><br><span class=\"line\">  <span class=\"keyword\">assign</span> out[<span class=\"number\">1</span>]=in[<span class=\"number\">6</span>];</span><br><span class=\"line\">  <span class=\"keyword\">assign</span> out[<span class=\"number\">2</span>]=in[<span class=\"number\">5</span>];</span><br><span class=\"line\">  <span class=\"keyword\">assign</span> out[<span class=\"number\">3</span>]=in[<span class=\"number\">4</span>];</span><br><span class=\"line\">  <span class=\"keyword\">assign</span> out[<span class=\"number\">4</span>]=in[<span class=\"number\">3</span>];</span><br><span class=\"line\">  <span class=\"keyword\">assign</span> out[<span class=\"number\">5</span>]=in[<span class=\"number\">2</span>];</span><br><span class=\"line\">  <span class=\"keyword\">assign</span> out[<span class=\"number\">6</span>]=in[<span class=\"number\">1</span>];</span><br><span class=\"line\">  <span class=\"keyword\">assign</span> out[<span class=\"number\">7</span>]=in[<span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"复制算子\">复制算子</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module (</span><br><span class=\"line\">    <span class=\"keyword\">input</span> [<span class=\"number\">7</span>:<span class=\"number\">0</span>] in,</span><br><span class=\"line\">    <span class=\"keyword\">output</span> [<span class=\"number\">31</span>:<span class=\"number\">0</span>] out );</span><br><span class=\"line\">  <span class=\"keyword\">assign</span> out = &#123; &#123;<span class=\"number\">24</span>&#123;in[<span class=\"number\">7</span>]&#125;&#125;,in[<span class=\"number\">7</span>:<span class=\"number\">0</span>] &#125;;</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"复制算子_2\">复制算子_2</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module (</span><br><span class=\"line\">    <span class=\"keyword\">input</span> a, b, c, d, e,</span><br><span class=\"line\">    <span class=\"keyword\">output</span> [<span class=\"number\">24</span>:<span class=\"number\">0</span>] out );</span><br><span class=\"line\">    <span class=\"comment\">// The output is XNOR of two vectors created by </span></span><br><span class=\"line\">    <span class=\"comment\">// concatenating and replicating the five inputs.</span></span><br><span class=\"line\">  <span class=\"keyword\">assign</span> out = ~&#123; &#123;<span class=\"number\">5</span>&#123;a&#125;&#125;,&#123;<span class=\"number\">5</span>&#123;b&#125;&#125;,&#123;<span class=\"number\">5</span>&#123;c&#125;&#125;,&#123;<span class=\"number\">5</span>&#123;d&#125;&#125;,&#123;<span class=\"number\">5</span>&#123;e&#125;&#125;&#125; ^ &#123; &#123;<span class=\"number\">5</span>&#123;a,b,c,d,e&#125;&#125; &#125;;</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"模块例化\">模块例化</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module(</span><br><span class=\"line\">  <span class=\"keyword\">input</span> \ta,</span><br><span class=\"line\">  <span class=\"keyword\">input</span> \tb,</span><br><span class=\"line\">  <span class=\"keyword\">output</span> \tout</span><br><span class=\"line\">);</span><br><span class=\"line\">  mod_a inst_name1(</span><br><span class=\"line\">    <span class=\"variable\">.out</span>\t(out),</span><br><span class=\"line\">    <span class=\"variable\">.in1</span>\t(a),</span><br><span class=\"line\">    <span class=\"variable\">.in2</span>\t(b));</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">module</span> mod_a ( </span><br><span class=\"line\">  <span class=\"keyword\">input</span> \tin1, </span><br><span class=\"line\">  <span class=\"keyword\">input</span> \tin2, </span><br><span class=\"line\">  <span class=\"keyword\">output</span> \tout </span><br><span class=\"line\">);</span><br><span class=\"line\"><span class=\"keyword\">assign</span> out = in1 &amp; in2;</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"基于端口位置的实例化\">基于端口位置的实例化</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> mod_a (</span><br><span class=\"line\">    <span class=\"keyword\">output</span>   out1\t,</span><br><span class=\"line\">    <span class=\"keyword\">output</span>   out2\t,</span><br><span class=\"line\">    <span class=\"keyword\">input</span>    in1\t,</span><br><span class=\"line\">    <span class=\"keyword\">input</span>    in2\t,</span><br><span class=\"line\">    <span class=\"keyword\">input</span>    in3\t,</span><br><span class=\"line\">    <span class=\"keyword\">input</span>    in4</span><br><span class=\"line\">);</span><br><span class=\"line\">    <span class=\"keyword\">assign</span> out1 = in1 &amp; in2 &amp; in3 &amp; in4;    </span><br><span class=\"line\">    <span class=\"keyword\">assign</span> out2 = in1 | in2 | in3 | in4;   </span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">module</span> top_module ( </span><br><span class=\"line\">\t<span class=\"keyword\">input</span>\ta\t,</span><br><span class=\"line\">    <span class=\"keyword\">input</span>\tb\t,</span><br><span class=\"line\">    <span class=\"keyword\">input</span>\tc\t,</span><br><span class=\"line\">    <span class=\"keyword\">input</span>\td\t,</span><br><span class=\"line\">    <span class=\"keyword\">output</span>\tout1,</span><br><span class=\"line\">    <span class=\"keyword\">output</span>\tout2</span><br><span class=\"line\">);</span><br><span class=\"line\">  mod_a mod_a(out1,out2,a,b,c,d);</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"基于端口名称的实例化\">基于端口名称的实例化</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> mod_a(</span><br><span class=\"line\">\t<span class=\"keyword\">output</span> out1, out2,</span><br><span class=\"line\">\t<span class=\"keyword\">input</span> in1,in2,in3,in4);</span><br><span class=\"line\">\t<span class=\"keyword\">assign</span> out1 = in1 &amp; in2 &amp; in3 &amp; in4; \t</span><br><span class=\"line\">\t<span class=\"keyword\">assign</span> out2 = in1 | in2 | in3 | in4;\t</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">module</span> top_module( </span><br><span class=\"line\">    <span class=\"keyword\">input</span> a, </span><br><span class=\"line\">    <span class=\"keyword\">input</span> b, </span><br><span class=\"line\">    <span class=\"keyword\">input</span> c,</span><br><span class=\"line\">    <span class=\"keyword\">input</span> d,</span><br><span class=\"line\">    <span class=\"keyword\">output</span> out1,</span><br><span class=\"line\">    <span class=\"keyword\">output</span> out2</span><br><span class=\"line\">);</span><br><span class=\"line\">  mod_a mod_a(</span><br><span class=\"line\">    <span class=\"variable\">.out1</span>\t(out1),</span><br><span class=\"line\">    <span class=\"variable\">.out2</span>\t(out2),</span><br><span class=\"line\">    <span class=\"variable\">.in1</span>\t(a),</span><br><span class=\"line\">    <span class=\"variable\">.in2</span>\t(b),</span><br><span class=\"line\">    <span class=\"variable\">.in3</span>\t(c),</span><br><span class=\"line\">    <span class=\"variable\">.in4</span>\t(d));</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"多个模块的例化\">多个模块的例化</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> my_dff(<span class=\"keyword\">input</span> clk,<span class=\"keyword\">input</span> d,<span class=\"keyword\">output</span> <span class=\"keyword\">reg</span> q);</span><br><span class=\"line\">\t<span class=\"keyword\">always</span>@(<span class=\"keyword\">posedge</span> clk)</span><br><span class=\"line\">    \tq &lt;= d;</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">module</span> top_module ( <span class=\"keyword\">input</span> clk, <span class=\"keyword\">input</span> d, <span class=\"keyword\">output</span> q );</span><br><span class=\"line\">  <span class=\"keyword\">wire</span> w1,w2;</span><br><span class=\"line\">  my_dff my_dff1(clk,d,w1);</span><br><span class=\"line\">  my_dff my_dff2(clk,w1,w2);</span><br><span class=\"line\">  my_dff my_dff3(clk,w2,q);</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"模块与向量信号\">模块与向量信号</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> my_dff8(</span><br><span class=\"line\">  <span class=\"keyword\">input</span> clk,</span><br><span class=\"line\">  <span class=\"keyword\">input</span> [<span class=\"number\">7</span>:<span class=\"number\">0</span>] d,</span><br><span class=\"line\">  <span class=\"keyword\">output</span> <span class=\"keyword\">reg</span> [<span class=\"number\">7</span>:<span class=\"number\">0</span>] q</span><br><span class=\"line\">);</span><br><span class=\"line\">\t<span class=\"keyword\">always</span>@(<span class=\"keyword\">posedge</span> clk)</span><br><span class=\"line\">    \tq &lt;= d;</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">module</span> top_module(</span><br><span class=\"line\">  <span class=\"keyword\">input</span> clk,</span><br><span class=\"line\">  <span class=\"keyword\">input</span> [<span class=\"number\">7</span>:<span class=\"number\">0</span>] d,</span><br><span class=\"line\">  <span class=\"keyword\">input</span> [<span class=\"number\">1</span>:<span class=\"number\">0</span>] sel,</span><br><span class=\"line\">  <span class=\"keyword\">output</span> <span class=\"keyword\">reg</span> [<span class=\"number\">7</span>:<span class=\"number\">0</span>] q</span><br><span class=\"line\">);</span><br><span class=\"line\">  <span class=\"keyword\">wire</span>[<span class=\"number\">7</span>:<span class=\"number\">0</span>]w1;</span><br><span class=\"line\">  <span class=\"keyword\">wire</span>[<span class=\"number\">7</span>:<span class=\"number\">0</span>]w2;</span><br><span class=\"line\">  <span class=\"keyword\">wire</span>[<span class=\"number\">7</span>:<span class=\"number\">0</span>]w3;</span><br><span class=\"line\">  my_dff8 my_dff81(clk,d,w1);</span><br><span class=\"line\">  my_dff8 my_dff82(clk,w1,w2);</span><br><span class=\"line\">  my_dff8 my_dff83(clk,w2,w3);</span><br><span class=\"line\">  <span class=\"keyword\">always</span> @*</span><br><span class=\"line\">    <span class=\"keyword\">begin</span> <span class=\"keyword\">case</span>(sel)</span><br><span class=\"line\">      <span class=\"number\">2&#x27;b00</span>:\tq=d;</span><br><span class=\"line\">      <span class=\"number\">2&#x27;b01</span>:\tq=w1;</span><br><span class=\"line\">      <span class=\"number\">2&#x27;b10</span>:\tq=w2;</span><br><span class=\"line\">      <span class=\"keyword\">default</span> :\tq=w3;</span><br><span class=\"line\">    <span class=\"keyword\">endcase</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"加法器\">加法器</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> add16 ( <span class=\"keyword\">input</span>[<span class=\"number\">15</span>:<span class=\"number\">0</span>] a, <span class=\"keyword\">input</span>[<span class=\"number\">15</span>:<span class=\"number\">0</span>] b, <span class=\"keyword\">input</span> cin, <span class=\"keyword\">output</span>[<span class=\"number\">15</span>:<span class=\"number\">0</span>] sum, <span class=\"keyword\">output</span> cout );</span><br><span class=\"line\">\t<span class=\"keyword\">assign</span> &#123;cout,sum&#125; = a + b + cin;</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">module</span> top_module(</span><br><span class=\"line\">    <span class=\"keyword\">input</span> [<span class=\"number\">31</span>:<span class=\"number\">0</span>] a,</span><br><span class=\"line\">    <span class=\"keyword\">input</span> [<span class=\"number\">31</span>:<span class=\"number\">0</span>] b,</span><br><span class=\"line\">    <span class=\"keyword\">output</span> [<span class=\"number\">31</span>:<span class=\"number\">0</span>] sum</span><br><span class=\"line\">);</span><br><span class=\"line\">  <span class=\"keyword\">wire</span> w1,w2;</span><br><span class=\"line\">  <span class=\"keyword\">wire</span>[<span class=\"number\">15</span>:<span class=\"number\">0</span>] s1;</span><br><span class=\"line\">  <span class=\"keyword\">wire</span>[<span class=\"number\">15</span>:<span class=\"number\">0</span>] s2;</span><br><span class=\"line\">  add16 add161(a[<span class=\"number\">15</span>:<span class=\"number\">0</span>],b[<span class=\"number\">15</span>:<span class=\"number\">0</span>],<span class=\"number\">1&#x27;b0</span>,s1,w1);</span><br><span class=\"line\">  add16 add162(a[<span class=\"number\">31</span>:<span class=\"number\">16</span>],b[<span class=\"number\">31</span>:<span class=\"number\">16</span>],w1,s2,w2);</span><br><span class=\"line\">  <span class=\"keyword\">assign</span> sum=&#123;s2,s1&#125;;</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"多层次例化加法器\">多层次例化加法器</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module (<span class=\"keyword\">input</span> [<span class=\"number\">31</span>:<span class=\"number\">0</span>] a,</span><br><span class=\"line\">                   <span class=\"keyword\">input</span> [<span class=\"number\">31</span>:<span class=\"number\">0</span>] b,</span><br><span class=\"line\">                   <span class=\"keyword\">output</span> [<span class=\"number\">31</span>:<span class=\"number\">0</span>] sum);</span><br><span class=\"line\"><span class=\"keyword\">wire</span> w1,w4;</span><br><span class=\"line\"><span class=\"keyword\">wire</span>[<span class=\"number\">15</span>:<span class=\"number\">0</span>]w2;</span><br><span class=\"line\"><span class=\"keyword\">wire</span>[<span class=\"number\">15</span>:<span class=\"number\">0</span>]w3;</span><br><span class=\"line\">\tadd16 inst_0(a[<span class=\"number\">15</span>:<span class=\"number\">0</span>],b[<span class=\"number\">15</span>:<span class=\"number\">0</span>],<span class=\"number\">1&#x27;b0</span>,w2,w1);</span><br><span class=\"line\">  \tadd16 inst_1(a[<span class=\"number\">31</span>:<span class=\"number\">16</span>],b[<span class=\"number\">31</span>:<span class=\"number\">16</span>],w1,w3,w4);</span><br><span class=\"line\"><span class=\"keyword\">assign</span> sum = &#123;w3,w2&#125;;</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">module</span> add1 (<span class=\"keyword\">input</span> a, <span class=\"keyword\">input</span> b, <span class=\"keyword\">input</span> cin,   <span class=\"keyword\">output</span> sum, <span class=\"keyword\">output</span> cout);</span><br><span class=\"line\">    <span class=\"comment\">// Full adder module here</span></span><br><span class=\"line\">    <span class=\"keyword\">assign</span> &#123;cout,sum&#125; = cin+a+b;</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"进位选择加法器\">进位选择加法器</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> add16 (<span class=\"keyword\">input</span>[<span class=\"number\">15</span>:<span class=\"number\">0</span>] a,</span><br><span class=\"line\">              <span class=\"keyword\">input</span>[<span class=\"number\">15</span>:<span class=\"number\">0</span>] b,</span><br><span class=\"line\">              <span class=\"keyword\">input</span> cin,</span><br><span class=\"line\">              <span class=\"keyword\">output</span>[<span class=\"number\">15</span>:<span class=\"number\">0</span>] sum,</span><br><span class=\"line\">              <span class=\"keyword\">output</span> cout);</span><br><span class=\"line\"><span class=\"keyword\">assign</span> &#123;cout,sum&#125; = a + b + cin;</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">module</span> top_module(</span><br><span class=\"line\">    <span class=\"keyword\">input</span> [<span class=\"number\">31</span>:<span class=\"number\">0</span>] a,</span><br><span class=\"line\">    <span class=\"keyword\">input</span> [<span class=\"number\">31</span>:<span class=\"number\">0</span>] b,</span><br><span class=\"line\">    <span class=\"keyword\">output</span> [<span class=\"number\">31</span>:<span class=\"number\">0</span>] sum</span><br><span class=\"line\">    );</span><br><span class=\"line\">    <span class=\"keyword\">wire</span>[<span class=\"number\">15</span>:<span class=\"number\">0</span>]w1,w2,w3,w4;</span><br><span class=\"line\">    <span class=\"keyword\">wire</span> w5,w6,w7;</span><br><span class=\"line\">    add16 add16_1(a[<span class=\"number\">15</span>:<span class=\"number\">0</span>],b[<span class=\"number\">15</span>:<span class=\"number\">0</span>],<span class=\"number\">1&#x27;b0</span>,w1,w5);</span><br><span class=\"line\">    add16 add16_2(a[<span class=\"number\">31</span>:<span class=\"number\">16</span>],b[<span class=\"number\">31</span>:<span class=\"number\">16</span>],<span class=\"number\">1&#x27;b0</span>,w2,w6);</span><br><span class=\"line\">  add16 add16_3(a[<span class=\"number\">31</span>:<span class=\"number\">16</span>],b[<span class=\"number\">31</span>:<span class=\"number\">16</span>],<span class=\"number\">1&#x27;b1</span>,w3,w7);</span><br><span class=\"line\">  <span class=\"keyword\">assign</span> sum=&#123;&#123;w5?w3:w2&#125;,w1&#125;;</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"加法减法器\">加法减法器</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> add16 (<span class=\"keyword\">input</span>[<span class=\"number\">15</span>:<span class=\"number\">0</span>] a,</span><br><span class=\"line\">              <span class=\"keyword\">input</span>[<span class=\"number\">15</span>:<span class=\"number\">0</span>] b,</span><br><span class=\"line\">              <span class=\"keyword\">input</span> cin,</span><br><span class=\"line\">              <span class=\"keyword\">output</span>[<span class=\"number\">15</span>:<span class=\"number\">0</span>] sum,</span><br><span class=\"line\">              <span class=\"keyword\">output</span> cout);</span><br><span class=\"line\">    <span class=\"keyword\">assign</span> &#123;cout,sum&#125; = a + b + cin;</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br><span class=\"line\">    <span class=\"keyword\">module</span> top_module(</span><br><span class=\"line\">        <span class=\"keyword\">input</span> [<span class=\"number\">31</span>:<span class=\"number\">0</span>] a,</span><br><span class=\"line\">        <span class=\"keyword\">input</span> [<span class=\"number\">31</span>:<span class=\"number\">0</span>] b,</span><br><span class=\"line\">        <span class=\"keyword\">input</span> sub,</span><br><span class=\"line\">        <span class=\"keyword\">output</span> [<span class=\"number\">31</span>:<span class=\"number\">0</span>] sum</span><br><span class=\"line\">        );</span><br><span class=\"line\">        <span class=\"keyword\">wire</span>[<span class=\"number\">31</span>:<span class=\"number\">0</span>]b1;</span><br><span class=\"line\">        <span class=\"keyword\">wire</span> w1,w2;</span><br><span class=\"line\">        <span class=\"keyword\">assign</span> b1 = b^&#123;<span class=\"number\">32</span>&#123;sub&#125;&#125;;</span><br><span class=\"line\">      add16 add16_0(a[<span class=\"number\">15</span>:<span class=\"number\">0</span>],b1[<span class=\"number\">15</span>:<span class=\"number\">0</span>],sub,sum[<span class=\"number\">15</span>:<span class=\"number\">0</span>],w1);</span><br><span class=\"line\">      add16 add16_1(a[<span class=\"number\">31</span>:<span class=\"number\">16</span>],b1[<span class=\"number\">31</span>:<span class=\"number\">16</span>],w1,sum[<span class=\"number\">31</span>:<span class=\"number\">16</span>],w2);</span><br><span class=\"line\">    <span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"always过程块_组合逻辑\">always过程块_组合逻辑</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module(</span><br><span class=\"line\">    <span class=\"keyword\">input</span> a, </span><br><span class=\"line\">    <span class=\"keyword\">input</span> b,</span><br><span class=\"line\">    <span class=\"keyword\">output</span> <span class=\"keyword\">wire</span> out_assign,</span><br><span class=\"line\">    <span class=\"keyword\">output</span> <span class=\"keyword\">reg</span> out_alwaysblock</span><br><span class=\"line\">);</span><br><span class=\"line\"><span class=\"keyword\">assign</span> out_assign=a&amp;b;</span><br><span class=\"line\">  <span class=\"keyword\">always</span>@(*)out_alwaysblock=a&amp;b;</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"always过程快_时序逻辑\">always过程快_时序逻辑</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module(</span><br><span class=\"line\">    <span class=\"keyword\">input</span> clk,</span><br><span class=\"line\">    <span class=\"keyword\">input</span> a,</span><br><span class=\"line\">    <span class=\"keyword\">input</span> b,</span><br><span class=\"line\">    <span class=\"keyword\">output</span> <span class=\"keyword\">wire</span> out_assign,</span><br><span class=\"line\">    <span class=\"keyword\">output</span> <span class=\"keyword\">reg</span> out_always_comb,</span><br><span class=\"line\">    <span class=\"keyword\">output</span> <span class=\"keyword\">reg</span> out_always_ff   </span><br><span class=\"line\">);</span><br><span class=\"line\"><span class=\"keyword\">assign</span> out_assign=a^b;</span><br><span class=\"line\">  <span class=\"keyword\">always</span>@(*)out_always_comb=a^b;</span><br><span class=\"line\">  <span class=\"keyword\">always</span>@(<span class=\"keyword\">posedge</span> clk)out_always_ff&lt;=a^b;</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"ifelse语句\">if…else…语句</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module(</span><br><span class=\"line\">    <span class=\"keyword\">input</span> a,</span><br><span class=\"line\">    <span class=\"keyword\">input</span> b,</span><br><span class=\"line\">    <span class=\"keyword\">input</span> sel_b1,</span><br><span class=\"line\">    <span class=\"keyword\">input</span> sel_b2,</span><br><span class=\"line\">    <span class=\"keyword\">output</span> <span class=\"keyword\">wire</span> out_assign,</span><br><span class=\"line\">    <span class=\"keyword\">output</span> <span class=\"keyword\">reg</span> out_always); </span><br><span class=\"line\"><span class=\"keyword\">assign</span> out_assign=sel_b1&amp;&amp;sel_b2?b:a;</span><br><span class=\"line\">  <span class=\"keyword\">always</span>@(*)</span><br><span class=\"line\">    <span class=\"keyword\">begin</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span>(sel_b1&amp;&amp;sel_b2)out_always=b;</span><br><span class=\"line\">      <span class=\"keyword\">else</span> out_always=a;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"if语句与锁存器\">if语句与锁存器</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module (</span><br><span class=\"line\">    <span class=\"keyword\">input</span>\t\tcpu_overheated\t\t,</span><br><span class=\"line\">    <span class=\"keyword\">output</span>\t<span class=\"keyword\">reg</span>\tshut_off_computer\t,</span><br><span class=\"line\">    <span class=\"keyword\">input</span>      \tarrived\t\t\t\t,</span><br><span class=\"line\">    <span class=\"keyword\">input</span>      \tgas_tank_empty\t\t,</span><br><span class=\"line\">    <span class=\"keyword\">output</span> \t<span class=\"keyword\">reg</span> keep_driving</span><br><span class=\"line\">);</span><br><span class=\"line\">  \t<span class=\"comment\">// Edit the code below</span></span><br><span class=\"line\">\t<span class=\"keyword\">always</span> @(*) <span class=\"keyword\">begin</span></span><br><span class=\"line\">    \t<span class=\"keyword\">if</span> (cpu_overheated)</span><br><span class=\"line\">        \tshut_off_computer = <span class=\"number\">1&#x27;b1</span>;</span><br><span class=\"line\">      <span class=\"keyword\">else</span> </span><br><span class=\"line\">        shut_off_computer=<span class=\"number\">1&#x27;b0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">always</span> @(*) <span class=\"keyword\">begin</span></span><br><span class=\"line\">    \t<span class=\"keyword\">if</span> (~arrived)</span><br><span class=\"line\">        \tkeep_driving = ~gas_tank_empty;</span><br><span class=\"line\">      <span class=\"keyword\">else</span></span><br><span class=\"line\">        keep_driving=<span class=\"number\">1&#x27;b0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"case语句\">case语句</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module ( </span><br><span class=\"line\">    <span class=\"keyword\">input</span> [<span class=\"number\">2</span>:<span class=\"number\">0</span>] sel, </span><br><span class=\"line\">    <span class=\"keyword\">input</span> [<span class=\"number\">3</span>:<span class=\"number\">0</span>] data0,</span><br><span class=\"line\">    <span class=\"keyword\">input</span> [<span class=\"number\">3</span>:<span class=\"number\">0</span>] data1,</span><br><span class=\"line\">    <span class=\"keyword\">input</span> [<span class=\"number\">3</span>:<span class=\"number\">0</span>] data2,</span><br><span class=\"line\">    <span class=\"keyword\">input</span> [<span class=\"number\">3</span>:<span class=\"number\">0</span>] data3,</span><br><span class=\"line\">    <span class=\"keyword\">input</span> [<span class=\"number\">3</span>:<span class=\"number\">0</span>] data4,</span><br><span class=\"line\">    <span class=\"keyword\">input</span> [<span class=\"number\">3</span>:<span class=\"number\">0</span>] data5,</span><br><span class=\"line\">    <span class=\"keyword\">output</span> <span class=\"keyword\">reg</span> [<span class=\"number\">3</span>:<span class=\"number\">0</span>] out   );</span><br><span class=\"line\">    <span class=\"keyword\">always</span>@(*) <span class=\"keyword\">begin</span>  <span class=\"comment\">// This is a combinational circuit</span></span><br><span class=\"line\">      <span class=\"keyword\">case</span>(sel)</span><br><span class=\"line\">        <span class=\"number\">3&#x27;b000</span>:out=data0;</span><br><span class=\"line\">        <span class=\"number\">3&#x27;b001</span>:out=data1;</span><br><span class=\"line\">        <span class=\"number\">3&#x27;b010</span>:out=data2;</span><br><span class=\"line\">        <span class=\"number\">3&#x27;b011</span>:out=data3;</span><br><span class=\"line\">        <span class=\"number\">3&#x27;b100</span>:out=data4;</span><br><span class=\"line\">        <span class=\"number\">3&#x27;b101</span>:out=data5;</span><br><span class=\"line\">        <span class=\"keyword\">default</span>:out=<span class=\"number\">3&#x27;b000</span>;</span><br><span class=\"line\">      <span class=\"keyword\">endcase</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"优先编码器\">优先编码器</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module(<span class=\"keyword\">input</span> [<span class=\"number\">3</span>:<span class=\"number\">0</span>] in,</span><br><span class=\"line\">                  <span class=\"keyword\">output</span> <span class=\"keyword\">reg</span> [<span class=\"number\">1</span>:<span class=\"number\">0</span>] pos);</span><br><span class=\"line\">    <span class=\"keyword\">always</span> @(*) <span class=\"keyword\">begin</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(in[<span class=\"number\">0</span>])</span><br><span class=\"line\">            pos = <span class=\"number\">2&#x27;d0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (in[<span class=\"number\">1</span>])</span><br><span class=\"line\">            pos = <span class=\"number\">2&#x27;d1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (in[<span class=\"number\">2</span>])</span><br><span class=\"line\">            pos = <span class=\"number\">2&#x27;d2</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (in[<span class=\"number\">3</span>])</span><br><span class=\"line\">            pos = <span class=\"number\">2&#x27;d3</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            pos = <span class=\"number\">2&#x27;d0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"casez语句\">casez语句</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module (<span class=\"keyword\">input</span> [<span class=\"number\">7</span>:<span class=\"number\">0</span>] in,</span><br><span class=\"line\">                   <span class=\"keyword\">output</span> <span class=\"keyword\">reg</span> [<span class=\"number\">2</span>:<span class=\"number\">0</span>] pos);</span><br><span class=\"line\">    <span class=\"keyword\">always</span> @(*) <span class=\"keyword\">begin</span></span><br><span class=\"line\">        <span class=\"keyword\">casez</span>(in[<span class=\"number\">7</span>:<span class=\"number\">0</span>])</span><br><span class=\"line\">            <span class=\"number\">8&#x27;bzzzzzzz1</span>:pos = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"number\">8&#x27;bzzzzzz1z</span>:pos = <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"number\">8&#x27;bzzzzz1zz</span>:pos = <span class=\"number\">2</span>;</span><br><span class=\"line\">            <span class=\"number\">8&#x27;bzzzz1zzz</span>:pos = <span class=\"number\">3</span>;</span><br><span class=\"line\">            <span class=\"number\">8&#x27;bzzz1zzzz</span>:pos = <span class=\"number\">4</span>;</span><br><span class=\"line\">            <span class=\"number\">8&#x27;bzz1zzzzz</span>:pos = <span class=\"number\">5</span>;</span><br><span class=\"line\">            <span class=\"number\">8&#x27;bz1zzzzzz</span>:pos = <span class=\"number\">6</span>;</span><br><span class=\"line\">            <span class=\"number\">8&#x27;b1zzzzzzz</span>:pos = <span class=\"number\">7</span>;</span><br><span class=\"line\">            <span class=\"keyword\">default</span>:pos     = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">endcase</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"避免锁存器\">避免锁存器</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module (<span class=\"keyword\">input</span> [<span class=\"number\">15</span>:<span class=\"number\">0</span>] scancode,</span><br><span class=\"line\">                   <span class=\"keyword\">output</span> <span class=\"keyword\">reg</span> left,</span><br><span class=\"line\">                   <span class=\"keyword\">output</span> <span class=\"keyword\">reg</span> down,</span><br><span class=\"line\">                   <span class=\"keyword\">output</span> <span class=\"keyword\">reg</span> right,</span><br><span class=\"line\">                   <span class=\"keyword\">output</span> <span class=\"keyword\">reg</span> up);</span><br><span class=\"line\">    <span class=\"keyword\">always</span> @(*) <span class=\"keyword\">begin</span></span><br><span class=\"line\">        left  = <span class=\"number\">1&#x27;b0</span>;</span><br><span class=\"line\">        down  = <span class=\"number\">1&#x27;b0</span>;</span><br><span class=\"line\">        right = <span class=\"number\">1&#x27;b0</span>;</span><br><span class=\"line\">        up    = <span class=\"number\">1&#x27;b0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> (scancode)</span><br><span class=\"line\">            <span class=\"number\">16&#x27;he06b</span>:left  = <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"number\">16&#x27;he072</span>:down  = <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"number\">16&#x27;he074</span>:right = <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"number\">16&#x27;he075</span>:up    = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">endcase</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"条件运算符\">条件运算符</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module (<span class=\"keyword\">input</span> [<span class=\"number\">7</span>:<span class=\"number\">0</span>] a,</span><br><span class=\"line\">                   b,</span><br><span class=\"line\">                   c,</span><br><span class=\"line\">                   d,</span><br><span class=\"line\">                   <span class=\"keyword\">output</span> [<span class=\"number\">7</span>:<span class=\"number\">0</span>] min);</span><br><span class=\"line\">    <span class=\"keyword\">wire</span>[<span class=\"number\">7</span>:<span class=\"number\">0</span>] min1,min2;</span><br><span class=\"line\">    <span class=\"keyword\">assign</span> min1 = a&lt;b?a:b;</span><br><span class=\"line\">    <span class=\"keyword\">assign</span> min2 = c&lt;d?c:d;</span><br><span class=\"line\">    <span class=\"keyword\">assign</span> min  = min1&lt;min2?min1:min2;</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"归约运算符\">归约运算符</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module (<span class=\"keyword\">input</span> [<span class=\"number\">7</span>:<span class=\"number\">0</span>] in,</span><br><span class=\"line\">                   <span class=\"keyword\">output</span> parity);</span><br><span class=\"line\">    <span class=\"keyword\">assign</span> parity = ^in;</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"d触发器\">D触发器</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module (<span class=\"keyword\">input</span> clk,     <span class=\"comment\">// Clocks are used in sequential circuits</span></span><br><span class=\"line\">                   <span class=\"keyword\">input</span> d,</span><br><span class=\"line\">                   <span class=\"keyword\">output</span> <span class=\"keyword\">reg</span> q);</span><br><span class=\"line\">    <span class=\"comment\">// Use a clocked always block</span></span><br><span class=\"line\">    <span class=\"comment\">//   copy d to q at every positive edge of clk</span></span><br><span class=\"line\">    <span class=\"comment\">//   Clocked always blocks should use non-blocking assignments</span></span><br><span class=\"line\">    <span class=\"keyword\">always</span> @(<span class=\"keyword\">posedge</span> clk) <span class=\"keyword\">begin</span></span><br><span class=\"line\">        q &lt;= d;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"寄存器\">寄存器</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module (<span class=\"keyword\">input</span> clk,</span><br><span class=\"line\">                   <span class=\"keyword\">input</span> [<span class=\"number\">7</span>:<span class=\"number\">0</span>] d,</span><br><span class=\"line\">                   <span class=\"keyword\">output</span> <span class=\"keyword\">reg</span> [<span class=\"number\">7</span>:<span class=\"number\">0</span>] q);</span><br><span class=\"line\">    <span class=\"keyword\">always</span> @(<span class=\"keyword\">posedge</span> clk) <span class=\"keyword\">begin</span></span><br><span class=\"line\">        q &lt;= d;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"有复位功能的寄存器\">有复位功能的寄存器</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module (<span class=\"keyword\">input</span> clk,</span><br><span class=\"line\">                   <span class=\"keyword\">input</span> reset,         <span class=\"comment\">// Synchronous reset</span></span><br><span class=\"line\">                   <span class=\"keyword\">input</span> [<span class=\"number\">7</span>:<span class=\"number\">0</span>] d,</span><br><span class=\"line\">                   <span class=\"keyword\">output</span> <span class=\"keyword\">reg</span> [<span class=\"number\">7</span>:<span class=\"number\">0</span>] q);</span><br><span class=\"line\">    <span class=\"keyword\">always</span> @(<span class=\"keyword\">posedge</span> clk) <span class=\"keyword\">begin</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (reset)</span><br><span class=\"line\">            q &lt;= <span class=\"number\">8&#x27;d0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            q &lt;= d;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"下降沿触发的寄存器\">下降沿触发的寄存器</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module (<span class=\"keyword\">input</span> clk,</span><br><span class=\"line\">                   <span class=\"keyword\">input</span> reset,         <span class=\"comment\">// Synchronous reset</span></span><br><span class=\"line\">                   <span class=\"keyword\">input</span> [<span class=\"number\">7</span>:<span class=\"number\">0</span>] d,</span><br><span class=\"line\">                   <span class=\"keyword\">output</span> <span class=\"keyword\">reg</span> [<span class=\"number\">7</span>:<span class=\"number\">0</span>] q);</span><br><span class=\"line\">    <span class=\"keyword\">always</span> @(<span class=\"keyword\">negedge</span> clk) <span class=\"keyword\">begin</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (reset)</span><br><span class=\"line\">            q &lt;= <span class=\"number\">8&#x27;h34</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            q &lt;= d;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"异步复位的寄存器\">异步复位的寄存器</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module (<span class=\"keyword\">input</span> clk,</span><br><span class=\"line\">                   <span class=\"keyword\">input</span> areset,         <span class=\"comment\">// Synchronous reset</span></span><br><span class=\"line\">                   <span class=\"keyword\">input</span> [<span class=\"number\">7</span>:<span class=\"number\">0</span>] d,</span><br><span class=\"line\">                   <span class=\"keyword\">output</span> <span class=\"keyword\">reg</span> [<span class=\"number\">7</span>:<span class=\"number\">0</span>] q);</span><br><span class=\"line\">  \t<span class=\"keyword\">always</span> @(<span class=\"keyword\">posedge</span> clk <span class=\"keyword\">or</span> <span class=\"keyword\">posedge</span> areset) <span class=\"keyword\">begin</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (areset)</span><br><span class=\"line\">            q &lt;= <span class=\"number\">8&#x27;h0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            q &lt;= d;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"带使能的寄存器\">带使能的寄存器</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module(<span class=\"keyword\">input</span> clk,</span><br><span class=\"line\">                  <span class=\"keyword\">input</span> resetn,</span><br><span class=\"line\">                  <span class=\"keyword\">input</span> [<span class=\"number\">1</span>:<span class=\"number\">0</span>] byteena,</span><br><span class=\"line\">                  <span class=\"keyword\">input</span> [<span class=\"number\">15</span>:<span class=\"number\">0</span>] d,</span><br><span class=\"line\">                  <span class=\"keyword\">output</span> <span class=\"keyword\">reg</span> [<span class=\"number\">15</span>:<span class=\"number\">0</span>] q);</span><br><span class=\"line\">    <span class=\"keyword\">always</span> @(<span class=\"keyword\">posedge</span> clk) <span class=\"keyword\">begin</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (~resetn)</span><br><span class=\"line\">            q &lt;= <span class=\"number\">8&#x27;d0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (byteena[<span class=\"number\">0</span>]&amp;&amp;byteena[<span class=\"number\">1</span>])</span><br><span class=\"line\">            q &lt;= d;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (byteena[<span class=\"number\">0</span>])</span><br><span class=\"line\">            q[<span class=\"number\">7</span>:<span class=\"number\">0</span>] &lt;= d[<span class=\"number\">7</span>:<span class=\"number\">0</span>];</span><br><span class=\"line\">        <span class=\"keyword\">else</span> </span><br><span class=\"line\">            q[<span class=\"number\">15</span>:<span class=\"number\">8</span>] &lt;= d[<span class=\"number\">15</span>:<span class=\"number\">8</span>];</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"触发器逻辑门\">触发器+逻辑门</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module (<span class=\"keyword\">input</span> clk,</span><br><span class=\"line\">                   <span class=\"keyword\">input</span> in,</span><br><span class=\"line\">                   <span class=\"keyword\">output</span> <span class=\"keyword\">reg</span> out);</span><br><span class=\"line\">    <span class=\"keyword\">always</span> @(<span class=\"keyword\">posedge</span> clk) <span class=\"keyword\">begin</span></span><br><span class=\"line\">        out &lt;= in^out;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"寄存器逻辑门\">寄存器+逻辑门</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module (<span class=\"keyword\">input</span> clk,</span><br><span class=\"line\">                   <span class=\"keyword\">input</span> x,</span><br><span class=\"line\">                   <span class=\"keyword\">output</span> z);</span><br><span class=\"line\">    <span class=\"keyword\">reg</span> q1,q2,q3;</span><br><span class=\"line\">    <span class=\"keyword\">always</span> @(<span class=\"keyword\">posedge</span> clk) <span class=\"keyword\">begin</span></span><br><span class=\"line\">        q1 &lt;= q1^x;</span><br><span class=\"line\">        q2 &lt;= ~q2&amp;x;</span><br><span class=\"line\">        q3 &lt;= ~q3|x;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">assign</span> z = ~(q1|q2|q3);</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"上升沿检测\">上升沿检测</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module (<span class=\"keyword\">input</span> clk,</span><br><span class=\"line\">                   <span class=\"keyword\">input</span> in,</span><br><span class=\"line\">                   <span class=\"keyword\">output</span> out);</span><br><span class=\"line\">    <span class=\"keyword\">reg</span> in_delay,out_r;</span><br><span class=\"line\">    <span class=\"keyword\">initial</span> <span class=\"keyword\">begin</span></span><br><span class=\"line\">        in_delay = <span class=\"number\">0</span>;</span><br><span class=\"line\">        out_r    = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">assign</span> out = out_r;</span><br><span class=\"line\">    <span class=\"keyword\">always</span> @(<span class=\"keyword\">posedge</span> clk) <span class=\"keyword\">begin</span></span><br><span class=\"line\">        in_delay &lt;= in;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">always</span> @(<span class=\"keyword\">posedge</span> clk) <span class=\"keyword\">begin</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (in&amp;&amp;!in_delay)</span><br><span class=\"line\">            out_r &lt;= <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            out_r &lt;= <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"双边沿检测\">双边沿检测</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module (<span class=\"keyword\">input</span> clk,</span><br><span class=\"line\">                   <span class=\"keyword\">input</span> in,</span><br><span class=\"line\">                   <span class=\"keyword\">output</span> out);</span><br><span class=\"line\">    <span class=\"keyword\">reg</span> in_delay,out_r;</span><br><span class=\"line\">    <span class=\"keyword\">initial</span> <span class=\"keyword\">begin</span></span><br><span class=\"line\">        in_delay = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"comment\">//#3 out_r    = 0;</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">assign</span> out = out_r;</span><br><span class=\"line\">    <span class=\"keyword\">always</span> @(<span class=\"keyword\">posedge</span> clk) <span class=\"keyword\">begin</span></span><br><span class=\"line\">        in_delay &lt;= in;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">always</span> @(<span class=\"keyword\">posedge</span> clk) <span class=\"keyword\">begin</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (in&amp;&amp;!in_delay||!in&amp;&amp;in_delay)</span><br><span class=\"line\">            out_r &lt;= <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(out_r==<span class=\"number\">1</span>)</span><br><span class=\"line\">            out_r &lt;= <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"计数器\">计数器</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module (<span class=\"keyword\">input</span> clk,</span><br><span class=\"line\">                   <span class=\"keyword\">input</span> reset,         </span><br><span class=\"line\">                   <span class=\"keyword\">output</span> <span class=\"keyword\">reg</span> [<span class=\"number\">3</span>:<span class=\"number\">0</span>] q);</span><br><span class=\"line\">    <span class=\"keyword\">always</span> @(<span class=\"keyword\">posedge</span> clk <span class=\"keyword\">or</span> <span class=\"keyword\">posedge</span> reset) <span class=\"keyword\">begin</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (reset||q == <span class=\"number\">4&#x27;b1111</span>)</span><br><span class=\"line\">            q &lt;= <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            q &lt;= q+<span class=\"number\">4&#x27;b0001</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"十进制计数器\">十进制计数器</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module (<span class=\"keyword\">input</span> clk,</span><br><span class=\"line\">                   <span class=\"keyword\">input</span> reset,         </span><br><span class=\"line\">                   <span class=\"keyword\">output</span> <span class=\"keyword\">reg</span> [<span class=\"number\">3</span>:<span class=\"number\">0</span>] q);</span><br><span class=\"line\">    <span class=\"keyword\">always</span> @(<span class=\"keyword\">posedge</span> clk) <span class=\"keyword\">begin</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (reset||q == <span class=\"number\">4&#x27;d10</span>)</span><br><span class=\"line\">            q &lt;= <span class=\"number\">4&#x27;d1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            q &lt;= q+<span class=\"number\">4&#x27;b0001</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"带使能的计数器\">带使能的计数器</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module(<span class=\"keyword\">input</span> clk,</span><br><span class=\"line\">                  <span class=\"keyword\">input</span> reset,</span><br><span class=\"line\">                  <span class=\"keyword\">input</span> en,</span><br><span class=\"line\">                  <span class=\"keyword\">output</span> <span class=\"keyword\">reg</span> [<span class=\"number\">3</span>:<span class=\"number\">0</span>]q);</span><br><span class=\"line\">    <span class=\"keyword\">always</span> @(<span class=\"keyword\">posedge</span> clk) <span class=\"keyword\">begin</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (en&amp;&amp;reset)</span><br><span class=\"line\">            q &lt;= <span class=\"number\">4&#x27;d5</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (en&amp;&amp;q != <span class=\"number\">4&#x27;d5</span>)</span><br><span class=\"line\">            q &lt;= q-<span class=\"number\">4&#x27;d1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (en&amp;&amp;q == <span class=\"number\">4&#x27;d5</span>)</span><br><span class=\"line\">            q &lt;= <span class=\"number\">4&#x27;d15</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"秒表\">秒表</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module(<span class=\"keyword\">input</span> \t\t\tclk\t\t,   <span class=\"comment\">//4Hz</span></span><br><span class=\"line\">                  <span class=\"keyword\">input</span> \t\t\treset\t,</span><br><span class=\"line\">                  <span class=\"keyword\">output</span>\t[<span class=\"number\">7</span>:<span class=\"number\">0</span>]\tss);</span><br><span class=\"line\">    <span class=\"keyword\">reg</span> [<span class=\"number\">7</span>:<span class=\"number\">0</span>]temp1,temp2,s;</span><br><span class=\"line\">    <span class=\"keyword\">initial</span> <span class=\"keyword\">begin</span></span><br><span class=\"line\">        temp1 = <span class=\"number\">0</span>;</span><br><span class=\"line\">        temp2 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">assign</span> ss=s;</span><br><span class=\"line\">    <span class=\"keyword\">always</span> @(<span class=\"keyword\">posedge</span> clk) <span class=\"keyword\">begin</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (reset)</span><br><span class=\"line\">            s &lt;= <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(reset)</span><br><span class=\"line\">            temp1&lt;=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(reset)</span><br><span class=\"line\">            temp2&lt;=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (temp1 == <span class=\"number\">7&#x27;d3</span>)</span><br><span class=\"line\">            s[<span class=\"number\">3</span>:<span class=\"number\">0</span>] &lt;= s[<span class=\"number\">3</span>:<span class=\"number\">0</span>]+<span class=\"number\">4&#x27;d1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">           temp1 &lt;= temp1+<span class=\"number\">7&#x27;d1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (reset)</span><br><span class=\"line\">            s &lt;= <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (temp2 == <span class=\"number\">7&#x27;d39</span>)</span><br><span class=\"line\">            s[<span class=\"number\">7</span>:<span class=\"number\">4</span>] &lt;= s[<span class=\"number\">7</span>:<span class=\"number\">4</span>]+<span class=\"number\">4&#x27;d1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            temp2 &lt;= temp2+<span class=\"number\">7&#x27;d1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(temp1==<span class=\"number\">7&#x27;d3</span>)</span><br><span class=\"line\">            temp1&lt;=<span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(temp2==<span class=\"number\">7&#x27;d39</span>)</span><br><span class=\"line\">            temp2&lt;=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (s[<span class=\"number\">3</span>:<span class=\"number\">0</span>] == <span class=\"number\">4&#x27;d10</span>)</span><br><span class=\"line\">            s[<span class=\"number\">3</span>:<span class=\"number\">0</span>] &lt;= <span class=\"number\">4&#x27;d0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (s[<span class=\"number\">7</span>:<span class=\"number\">4</span>] == <span class=\"number\">4&#x27;d6</span>)</span><br><span class=\"line\">            s[<span class=\"number\">7</span>:<span class=\"number\">4</span>] &lt;= <span class=\"number\">4&#x27;d0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"移位寄存器\">移位寄存器</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module(<span class=\"keyword\">input</span> clk,</span><br><span class=\"line\">                  <span class=\"keyword\">input</span> areset,        </span><br><span class=\"line\">                  <span class=\"keyword\">input</span> load,</span><br><span class=\"line\">                  <span class=\"keyword\">input</span> ena,</span><br><span class=\"line\">                  <span class=\"keyword\">input</span> [<span class=\"number\">3</span>:<span class=\"number\">0</span>] data,</span><br><span class=\"line\">                  <span class=\"keyword\">output</span> <span class=\"keyword\">reg</span> [<span class=\"number\">3</span>:<span class=\"number\">0</span>] q);</span><br><span class=\"line\">    <span class=\"keyword\">always</span> @(<span class=\"keyword\">posedge</span> clk <span class=\"keyword\">or</span> <span class=\"keyword\">posedge</span> areset) <span class=\"keyword\">begin</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (areset)</span><br><span class=\"line\">            q &lt;= <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (load)</span><br><span class=\"line\">            q &lt;= data;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (ena)</span><br><span class=\"line\">            q &lt;= q&gt;&gt;<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"查找表\">查找表</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module(</span><br><span class=\"line\">  <span class=\"keyword\">input</span> clk,</span><br><span class=\"line\">  <span class=\"keyword\">input</span> enable,</span><br><span class=\"line\">  <span class=\"keyword\">input</span> S,</span><br><span class=\"line\">  <span class=\"keyword\">input</span> A, B, C,</span><br><span class=\"line\">  <span class=\"keyword\">output</span> <span class=\"keyword\">reg</span> Z </span><br><span class=\"line\">);</span><br><span class=\"line\">  <span class=\"keyword\">reg</span>[<span class=\"number\">7</span>:<span class=\"number\">0</span>]q;</span><br><span class=\"line\">  <span class=\"keyword\">always</span>@(*)</span><br><span class=\"line\">    z&lt;=q[&#123;A,B,C&#125;];</span><br><span class=\"line\">  <span class=\"keyword\">always</span>@(<span class=\"keyword\">posedge</span> clk)</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(enable)</span><br><span class=\"line\">    q&lt;=&#123;q[<span class=\"number\">6</span>:<span class=\"number\">0</span>],S&#125;;</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"rom\">ROM</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module(<span class=\"keyword\">input</span>\t[<span class=\"number\">2</span>:<span class=\"number\">0</span>] addr,</span><br><span class=\"line\">                  <span class=\"keyword\">output</span>\t[<span class=\"number\">3</span>:<span class=\"number\">0</span>]\tq);</span><br><span class=\"line\"><span class=\"keyword\">reg</span>  [<span class=\"number\">3</span>:<span class=\"number\">0</span>] mem [<span class=\"number\">7</span>:<span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"keyword\">initial</span> <span class=\"keyword\">begin</span></span><br><span class=\"line\">    mem[<span class=\"number\">0</span>] = <span class=\"number\">8&#x27;h00</span>;</span><br><span class=\"line\">    mem[<span class=\"number\">1</span>] = <span class=\"number\">8&#x27;h01</span>;</span><br><span class=\"line\">    mem[<span class=\"number\">2</span>] = <span class=\"number\">8&#x27;h02</span>;</span><br><span class=\"line\">    mem[<span class=\"number\">3</span>] = <span class=\"number\">8&#x27;h03</span>;</span><br><span class=\"line\">    mem[<span class=\"number\">4</span>] = <span class=\"number\">8&#x27;h04</span>;</span><br><span class=\"line\">    mem[<span class=\"number\">5</span>] = <span class=\"number\">8&#x27;h05</span>;</span><br><span class=\"line\">    mem[<span class=\"number\">6</span>] = <span class=\"number\">8&#x27;h06</span>;</span><br><span class=\"line\">    mem[<span class=\"number\">7</span>] = <span class=\"number\">8&#x27;h07</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">assign</span> q = mem[addr];</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"ram\">RAM</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> ram_one_port(<span class=\"keyword\">input</span> \t\t clk,</span><br><span class=\"line\">                    <span class=\"keyword\">input</span>\t\t wr_en,</span><br><span class=\"line\">                    <span class=\"keyword\">input</span> \t[<span class=\"number\">2</span>:<span class=\"number\">0</span>] wr_addr,</span><br><span class=\"line\">                    <span class=\"keyword\">input</span>\t[<span class=\"number\">15</span>:<span class=\"number\">0</span>] wr_data,</span><br><span class=\"line\">                    <span class=\"keyword\">input</span>\t[<span class=\"number\">2</span>:<span class=\"number\">0</span>] rd_addr,</span><br><span class=\"line\">                    <span class=\"keyword\">output</span>\t[<span class=\"number\">15</span>:<span class=\"number\">0</span>] rd_data);</span><br><span class=\"line\">                    <span class=\"keyword\">reg</span>[<span class=\"number\">15</span>:<span class=\"number\">0</span>] mem[<span class=\"number\">7</span>:<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">initial</span> <span class=\"keyword\">begin</span></span><br><span class=\"line\">        <span class=\"built_in\">$readmemh</span>(<span class=\"string\">&quot;memfile.dat&quot;</span>,mem);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">assign</span> rd_data = mem[rd_addr];</span><br><span class=\"line\">    <span class=\"keyword\">always</span>@(<span class=\"keyword\">posedge</span> clk)</span><br><span class=\"line\">    <span class=\"keyword\">begin</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (wr_en)</span><br><span class=\"line\">            mem[wr_addr] &lt;= wr_data;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"有限状态机\">有限状态机</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module(<span class=\"keyword\">input</span> clk,</span><br><span class=\"line\">                  <span class=\"keyword\">input</span> areset, <span class=\"comment\">// Asynchronous reset to state B</span></span><br><span class=\"line\">                  <span class=\"keyword\">input</span> in,</span><br><span class=\"line\">                  <span class=\"keyword\">output</span> out);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">parameter</span> A = <span class=\"number\">0</span>, B = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">reg</span> state, next_state;</span><br><span class=\"line\">    <span class=\"keyword\">always</span> @(*) <span class=\"keyword\">begin</span>    <span class=\"comment\">//有限状态机第一段</span></span><br><span class=\"line\">        <span class=\"comment\">// State transition logic</span></span><br><span class=\"line\">        <span class=\"keyword\">case</span> (in)</span><br><span class=\"line\">            <span class=\"number\">1&#x27;b1</span>:next_state     &lt;= state;</span><br><span class=\"line\">            <span class=\"keyword\">default</span>: next_state &lt;= ~state;</span><br><span class=\"line\">        <span class=\"keyword\">endcase</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">always</span> @(<span class=\"keyword\">posedge</span> clk, <span class=\"keyword\">posedge</span> areset) <span class=\"keyword\">begin</span>    <span class=\"comment\">//有限状态机第二段</span></span><br><span class=\"line\">        <span class=\"comment\">// State flip-flops with asynchronous reset</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (areset)</span><br><span class=\"line\">            state &lt;= B;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(clk)</span><br><span class=\"line\">            state &lt;= next_state;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"comment\">//有限状态机第三段，信号输出逻辑</span></span><br><span class=\"line\">    <span class=\"keyword\">assign</span> out = (state == A)?<span class=\"number\">0</span>:<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"读代码找错误\">读代码找错误</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> top_module (</span><br><span class=\"line\">    <span class=\"keyword\">input</span> sel,</span><br><span class=\"line\">    <span class=\"keyword\">input</span> [<span class=\"number\">7</span>:<span class=\"number\">0</span>] a,</span><br><span class=\"line\">    <span class=\"keyword\">input</span> [<span class=\"number\">7</span>:<span class=\"number\">0</span>] b,</span><br><span class=\"line\">  \t<span class=\"keyword\">output</span>[<span class=\"number\">7</span>:<span class=\"number\">0</span>] out  );</span><br><span class=\"line\">  <span class=\"keyword\">assign</span> out = sel?b:a;</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"编写仿真文件\">编写仿真文件</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> tb();</span><br><span class=\"line\">    <span class=\"keyword\">reg</span> a,b;</span><br><span class=\"line\">    <span class=\"keyword\">initial</span> <span class=\"keyword\">begin</span></span><br><span class=\"line\">        a     = <span class=\"number\">1&#x27;b1</span>;</span><br><span class=\"line\">        b     = <span class=\"number\">1&#x27;b0</span>;</span><br><span class=\"line\">        #<span class=\"number\">10</span> b = <span class=\"number\">1&#x27;b1</span>;</span><br><span class=\"line\">        #<span class=\"number\">10</span> a = <span class=\"number\">1&#x27;b0</span>;</span><br><span class=\"line\">        #<span class=\"number\">10</span> b = <span class=\"number\">1&#x27;b0</span>;</span><br><span class=\"line\">        #<span class=\"number\">10</span> a = <span class=\"number\">1&#x27;b1</span>;</span><br><span class=\"line\">        #<span class=\"number\">20</span> <span class=\"built_in\">$finish</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"组合逻辑模块仿真\">组合逻辑模块仿真</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> tb();</span><br><span class=\"line\">    <span class=\"keyword\">reg</span> a,b;</span><br><span class=\"line\">    <span class=\"keyword\">wire</span> q;</span><br><span class=\"line\">    <span class=\"comment\">//对ab信号进行初始化</span></span><br><span class=\"line\">    <span class=\"keyword\">initial</span> <span class=\"keyword\">begin</span></span><br><span class=\"line\">        a    = <span class=\"number\">0</span>;b    = <span class=\"number\">0</span>;</span><br><span class=\"line\">        #<span class=\"number\">15</span> b = <span class=\"number\">1</span>;</span><br><span class=\"line\">        #<span class=\"number\">10</span> b = <span class=\"number\">0</span>;a    = <span class=\"number\">1</span>;</span><br><span class=\"line\">        #<span class=\"number\">10</span> b = <span class=\"number\">1</span>;</span><br><span class=\"line\">        #<span class=\"number\">10</span> a = <span class=\"number\">0</span>;b    = <span class=\"number\">0</span>;</span><br><span class=\"line\">        #<span class=\"number\">10</span> b = <span class=\"number\">1</span>;</span><br><span class=\"line\">        #<span class=\"number\">10</span> b = <span class=\"number\">0</span>;a    = <span class=\"number\">1</span>;</span><br><span class=\"line\">        #<span class=\"number\">10</span> b = <span class=\"number\">1</span>;</span><br><span class=\"line\">        #<span class=\"number\">10</span> b = <span class=\"number\">0</span>;a    = <span class=\"number\">0</span>;</span><br><span class=\"line\">        #<span class=\"number\">2</span> <span class=\"built_in\">$finish</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"comment\">//例化mymodule模块</span></span><br><span class=\"line\">    mymodule mymodule(a,b,q);</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">module</span> mymodule(</span><br><span class=\"line\">    <span class=\"keyword\">input</span> a,b,</span><br><span class=\"line\">    <span class=\"keyword\">output</span> q</span><br><span class=\"line\">);</span><br><span class=\"line\">    <span class=\"keyword\">assign</span> q = a &amp; b;</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"生成时钟信号\">生成时钟信号</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> tb();</span><br><span class=\"line\">    <span class=\"keyword\">wire</span> [<span class=\"number\">2</span>:<span class=\"number\">0</span>]out;</span><br><span class=\"line\">    <span class=\"keyword\">reg</span> clk;</span><br><span class=\"line\">    <span class=\"keyword\">initial</span> <span class=\"keyword\">begin</span></span><br><span class=\"line\">        clk    = <span class=\"number\">0</span>;</span><br><span class=\"line\">        #<span class=\"number\">5</span> clk = <span class=\"number\">1</span>;</span><br><span class=\"line\">        #<span class=\"number\">5</span> clk = <span class=\"number\">0</span>;</span><br><span class=\"line\">        #<span class=\"number\">5</span> clk = <span class=\"number\">1</span>;</span><br><span class=\"line\">        #<span class=\"number\">5</span> clk = <span class=\"number\">0</span>;</span><br><span class=\"line\">        #<span class=\"number\">5</span> clk = <span class=\"number\">1</span>;</span><br><span class=\"line\">        #<span class=\"number\">5</span> clk = <span class=\"number\">0</span>;</span><br><span class=\"line\">        #<span class=\"number\">5</span> clk = <span class=\"number\">1</span>;</span><br><span class=\"line\">        #<span class=\"number\">5</span> clk = <span class=\"number\">0</span>;</span><br><span class=\"line\">        #<span class=\"number\">5</span> clk = <span class=\"number\">1</span>;</span><br><span class=\"line\">        #<span class=\"number\">5</span> clk = <span class=\"number\">0</span>;</span><br><span class=\"line\">        #<span class=\"number\">5</span> <span class=\"built_in\">$finish</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    dut dut(clk,out);</span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">module</span> dut(<span class=\"keyword\">input</span> clk, <span class=\"keyword\">output</span> <span class=\"keyword\">reg</span> [<span class=\"number\">2</span>:<span class=\"number\">0</span>]out);</span><br><span class=\"line\">        <span class=\"comment\">//测试模块</span></span><br><span class=\"line\">        <span class=\"keyword\">always</span> @(<span class=\"keyword\">posedge</span> clk)</span><br><span class=\"line\">            out &lt;= out + <span class=\"number\">1&#x27;b1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">endmodule</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"单端口ram仿真\">单端口RAM仿真</h2>\n<figure class=\"highlight verilog\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">module</span> ram_one_port(</span><br><span class=\"line\">\t<span class=\"keyword\">input</span> \tclk,</span><br><span class=\"line\">\t<span class=\"keyword\">input</span>\t[<span class=\"number\">1</span>:<span class=\"number\">0</span>] addr,</span><br><span class=\"line\">\t<span class=\"keyword\">input</span>\twr_en,</span><br><span class=\"line\">\t<span class=\"keyword\">input</span>\t[<span class=\"number\">7</span>:<span class=\"number\">0</span>] wr_data,</span><br><span class=\"line\">\t<span class=\"keyword\">output</span>\t[<span class=\"number\">7</span>:<span class=\"number\">0</span>] rd_data</span><br><span class=\"line\">);</span><br><span class=\"line\">\t<span class=\"keyword\">reg</span>\t\t[<span class=\"number\">7</span>:<span class=\"number\">0</span>] mem[<span class=\"number\">3</span>:<span class=\"number\">0</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">initial</span></span><br><span class=\"line\">\t<span class=\"keyword\">begin</span></span><br><span class=\"line\">      mem[<span class=\"number\">0</span>] = <span class=\"number\">8&#x27;b0</span>;</span><br><span class=\"line\">      mem[<span class=\"number\">1</span>] = <span class=\"number\">8&#x27;b0</span>;</span><br><span class=\"line\">      mem[<span class=\"number\">2</span>] = <span class=\"number\">8&#x27;b0</span>;</span><br><span class=\"line\">      mem[<span class=\"number\">3</span>] = <span class=\"number\">8&#x27;b0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">end</span></span><br><span class=\"line\">\t<span class=\"keyword\">assign</span> rd_data = mem[addr];</span><br><span class=\"line\">\t<span class=\"keyword\">always</span>@(<span class=\"keyword\">posedge</span> clk)</span><br><span class=\"line\">\t<span class=\"keyword\">begin</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(wr_en)</span><br><span class=\"line\">\t\t\tmem[addr] &lt;= wr_data;</span><br><span class=\"line\">\t<span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">module</span> tb(</span><br><span class=\"line\">);</span><br><span class=\"line\">\t<span class=\"comment\">//信号定义</span></span><br><span class=\"line\">\t<span class=\"keyword\">reg</span>\t\t\t\tclk,wr_en;</span><br><span class=\"line\">\t<span class=\"keyword\">reg</span>\t\t[<span class=\"number\">1</span>:<span class=\"number\">0</span>] \taddr;</span><br><span class=\"line\">\t<span class=\"keyword\">reg</span>\t\t[<span class=\"number\">7</span>:<span class=\"number\">0</span>] \twr_data;</span><br><span class=\"line\">\t<span class=\"keyword\">wire</span>\t[<span class=\"number\">7</span>:<span class=\"number\">0</span>] \trd_data;</span><br><span class=\"line\">\t<span class=\"comment\">//信号生成</span></span><br><span class=\"line\">    <span class=\"keyword\">initial</span> <span class=\"keyword\">begin</span></span><br><span class=\"line\">    clk = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">forever</span> #<span class=\"number\">5</span> clk = ~clk; <span class=\"comment\">//生成周期为10的一个时钟信号，forever为verilog的关键字</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">initial</span> <span class=\"keyword\">begin</span></span><br><span class=\"line\">    addr = <span class=\"number\">2&#x27;b0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">repeat</span>(<span class=\"number\">4</span>) <span class=\"keyword\">begin</span> \t\t\t<span class=\"comment\">//repeat为verilog关键字，表示重复操作</span></span><br><span class=\"line\">\t@(<span class=\"keyword\">posedge</span> clk);\t\t<span class=\"comment\">//等待clk信号的上升沿到来</span></span><br><span class=\"line\">\t#<span class=\"number\">1</span> addr = addr + <span class=\"number\">1</span>;\t<span class=\"comment\">//clk上升沿1个时间单位后，addr加一</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">initial</span> <span class=\"keyword\">begin</span></span><br><span class=\"line\">\twr_en = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t#<span class=\"number\">501</span>;\t\t\t<span class=\"comment\">//延时一段时间，</span></span><br><span class=\"line\">\t@(<span class=\"keyword\">posedge</span> clk);</span><br><span class=\"line\">\t#<span class=\"number\">1</span> wr_en = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t@(<span class=\"keyword\">posedge</span> clk);</span><br><span class=\"line\">\t@(<span class=\"keyword\">posedge</span> clk);</span><br><span class=\"line\">\t@(<span class=\"keyword\">posedge</span> clk);</span><br><span class=\"line\">\t@(<span class=\"keyword\">posedge</span> clk);\t<span class=\"comment\">//等待4个clk上升沿</span></span><br><span class=\"line\">\t#<span class=\"number\">1</span> wr_en = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">initial</span> <span class=\"keyword\">begin</span></span><br><span class=\"line\">    wr_data = <span class=\"number\">8&#x27;h0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">repeat</span>(<span class=\"number\">4</span>) <span class=\"keyword\">begin</span></span><br><span class=\"line\">    \t<span class=\"keyword\">wait</span>(wr_en==<span class=\"number\">1&#x27;b1</span>);</span><br><span class=\"line\">\t#<span class=\"number\">1</span> wr_data = <span class=\"built_in\">$random</span>%<span class=\"number\">256</span>;</span><br><span class=\"line\">    \t@(<span class=\"keyword\">posedge</span> clk);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">\t<span class=\"comment\">//例化被测模块</span></span><br><span class=\"line\"><span class=\"keyword\">endmodule</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","categories":["Computer Science"],"tags":["Digital Circuit"]},{"title":"Setting up This Blog","url":"/2022/05/27/Setting-up-This-Blog/","content":"<p>博客的搭建经历：</p>\n<span id=\"more\"></span>\n<p>待续。</p>\n<p>hexo配置文件：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#################################################################</span></span><br><span class=\"line\"><span class=\"comment\">###################### Hexo Configuration #######################</span></span><br><span class=\"line\"><span class=\"comment\">#################################################################</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Site</span></span><br><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">SONGXIAO&#x27;S</span> <span class=\"string\">TOPBLOG</span></span><br><span class=\"line\"><span class=\"attr\">subtitle:</span> <span class=\"string\">&quot;VENI VIDI VICI&quot;</span></span><br><span class=\"line\"><span class=\"attr\">description:</span> <span class=\"string\">&quot;I must search. Even if the endless powdering of stars in the Galaxy makes the quest seem hopeless, and even if I must do it alone.&quot;</span></span><br><span class=\"line\"><span class=\"attr\">author:</span> <span class=\"string\">GUO</span> <span class=\"string\">Songxiao</span></span><br><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">en</span></span><br><span class=\"line\"><span class=\"attr\">timezone:</span> <span class=\"string\">UTC</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># URL</span></span><br><span class=\"line\"><span class=\"attr\">url:</span> <span class=\"string\">http://gsxgoldenlegendary.github.io</span></span><br><span class=\"line\"><span class=\"attr\">permalink:</span> <span class=\"string\">:year/:month/:day/:title/</span></span><br><span class=\"line\"><span class=\"attr\">permalink_defaults:</span></span><br><span class=\"line\"><span class=\"attr\">pretty_urls:</span></span><br><span class=\"line\">  <span class=\"attr\">trailing_index:</span> <span class=\"literal\">true</span> <span class=\"comment\"># Set to false to remove trailing &#x27;index.html&#x27; from permalinks</span></span><br><span class=\"line\">  <span class=\"attr\">trailing_html:</span> <span class=\"literal\">true</span> <span class=\"comment\"># Set to false to remove trailing &#x27;.html&#x27; from permalinks</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Directory</span></span><br><span class=\"line\"><span class=\"attr\">source_dir:</span> <span class=\"string\">source</span></span><br><span class=\"line\"><span class=\"attr\">public_dir:</span> <span class=\"string\">public</span></span><br><span class=\"line\"><span class=\"attr\">tag_dir:</span> <span class=\"string\">tags</span></span><br><span class=\"line\"><span class=\"attr\">archive_dir:</span> <span class=\"string\">archives</span></span><br><span class=\"line\"><span class=\"attr\">category_dir:</span> <span class=\"string\">categories</span></span><br><span class=\"line\"><span class=\"attr\">code_dir:</span> <span class=\"string\">downloads/code</span></span><br><span class=\"line\"><span class=\"attr\">i18n_dir:</span> <span class=\"string\">:lang</span></span><br><span class=\"line\"><span class=\"attr\">skip_render:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">README.md</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">robots.txt</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">animate/*</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">highlight/*</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Writing</span></span><br><span class=\"line\"><span class=\"attr\">new_post_name:</span> <span class=\"string\">:title.md</span> <span class=\"comment\"># File name of new posts</span></span><br><span class=\"line\"><span class=\"attr\">default_layout:</span> <span class=\"string\">post</span></span><br><span class=\"line\"><span class=\"attr\">titlecase:</span> <span class=\"literal\">false</span> <span class=\"comment\"># Transform title into titlecase</span></span><br><span class=\"line\"><span class=\"attr\">external_link:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span> <span class=\"comment\"># Open external links in new tab</span></span><br><span class=\"line\">  <span class=\"attr\">field:</span> <span class=\"string\">site</span> <span class=\"comment\"># Apply to the whole site</span></span><br><span class=\"line\">  <span class=\"attr\">exclude:</span> <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"attr\">filename_case:</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"attr\">render_drafts:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">post_asset_folder:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">relative_link:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">future:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">highlight:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">line_number:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">auto_detect:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">tab_replace:</span> <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"attr\">prismjs:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">preprocess:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">line_number:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">tab_replace:</span> <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Home page setting</span></span><br><span class=\"line\">  <span class=\"attr\">index_generator:</span></span><br><span class=\"line\">  <span class=\"attr\">path:</span> <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">per_page:</span> <span class=\"number\">10</span></span><br><span class=\"line\">  <span class=\"attr\">order_by:</span> <span class=\"string\">-date</span></span><br><span class=\"line\">  <span class=\"attr\">pagination_dir:</span> <span class=\"string\">page</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Category &amp; Tag</span></span><br><span class=\"line\"><span class=\"attr\">default_category:</span> <span class=\"string\">uncategorized</span></span><br><span class=\"line\"><span class=\"attr\">category_map:</span></span><br><span class=\"line\"><span class=\"attr\">tag_map:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Date / Time format</span></span><br><span class=\"line\"><span class=\"attr\">date_format:</span> <span class=\"string\">YYYY-MM-DD</span></span><br><span class=\"line\"><span class=\"attr\">time_format:</span> <span class=\"string\">HH:mm:ss</span></span><br><span class=\"line\"><span class=\"attr\">updated_option:</span> <span class=\"string\">&quot;mtime&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># Pagination</span></span><br><span class=\"line\"><span class=\"attr\">per_page:</span> <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"attr\">pagination_dir:</span> <span class=\"string\">page</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Extensions</span></span><br><span class=\"line\"><span class=\"attr\">theme:</span> <span class=\"string\">next</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">archive_generator:</span></span><br><span class=\"line\">  <span class=\"attr\">per_page:</span> <span class=\"number\">12</span></span><br><span class=\"line\">  <span class=\"attr\">yearly:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">monthly:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">daily:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">marked:</span></span><br><span class=\"line\">  <span class=\"comment\"># For preserve original quotes in code blocks.</span></span><br><span class=\"line\">  <span class=\"attr\">smartypants:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">lazyload:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">search:</span></span><br><span class=\"line\">  <span class=\"attr\">path:</span> <span class=\"string\">search.json</span></span><br><span class=\"line\">  <span class=\"attr\">field:</span> <span class=\"string\">all</span></span><br><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repository:</span> <span class=\"string\">git@github.com:gsxgoldenlegendary/gsxgoldenlegendary.github.io.git</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">main</span></span><br></pre></td></tr></table></figure>\n<p>NexT配置文件：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ===============================================================</span></span><br><span class=\"line\"><span class=\"comment\"># It&#x27;s recommended to use Alternate Theme Config to configure NexT</span></span><br><span class=\"line\"><span class=\"comment\"># Modifying this file may result in merge conflict</span></span><br><span class=\"line\"><span class=\"comment\"># See: https://theme-next.js.org/docs/getting-started/configuration</span></span><br><span class=\"line\"><span class=\"comment\"># ===============================================================</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\"># Theme Core Configuration Settings</span></span><br><span class=\"line\"><span class=\"comment\"># See: https://theme-next.js.org/docs/theme-settings/</span></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Allow to cache content generation.</span></span><br><span class=\"line\"><span class=\"attr\">cache:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Remove unnecessary files after hexo generate.</span></span><br><span class=\"line\"><span class=\"attr\">minify:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Define custom file paths.</span></span><br><span class=\"line\"><span class=\"comment\"># Create your custom files in site directory `source/_data` and uncomment needed files below.</span></span><br><span class=\"line\"><span class=\"attr\">custom_file_path:</span></span><br><span class=\"line\">  <span class=\"comment\">#head: source/_data/head.njk</span></span><br><span class=\"line\">  <span class=\"comment\">#header: source/_data/header.njk</span></span><br><span class=\"line\">  <span class=\"comment\">#sidebar: source/_data/sidebar.njk</span></span><br><span class=\"line\">  <span class=\"comment\">#postMeta: source/_data/post-meta.njk</span></span><br><span class=\"line\">  <span class=\"comment\">#postBodyEnd: source/_data/post-body-end.njk</span></span><br><span class=\"line\">  <span class=\"comment\">#footer: source/_data/footer.njk</span></span><br><span class=\"line\">  <span class=\"comment\">#bodyEnd: source/_data/body-end.njk</span></span><br><span class=\"line\">  <span class=\"comment\">#variable: source/_data/variables.styl</span></span><br><span class=\"line\">  <span class=\"comment\">#mixin: source/_data/mixins.styl</span></span><br><span class=\"line\">  <span class=\"comment\">#style: source/_data/styles.styl</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\"># Scheme Settings</span></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Schemes</span></span><br><span class=\"line\"><span class=\"attr\">scheme:</span> <span class=\"string\">Muse</span></span><br><span class=\"line\"><span class=\"comment\">#scheme: Mist</span></span><br><span class=\"line\"><span class=\"comment\">#scheme: Pisces</span></span><br><span class=\"line\"><span class=\"comment\">#scheme: Gemini</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Dark Mode</span></span><br><span class=\"line\"><span class=\"attr\">darkmode:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\"># Site Information Settings</span></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">favicon:</span></span><br><span class=\"line\">  <span class=\"attr\">small:</span> <span class=\"string\">/images/favicon-16x16.ico</span></span><br><span class=\"line\">  <span class=\"attr\">medium:</span> <span class=\"string\">/images/favicon-32x32.ico</span></span><br><span class=\"line\">  <span class=\"attr\">apple_touch_icon:</span> <span class=\"string\">/images/favicon-128x128.png</span></span><br><span class=\"line\">  <span class=\"attr\">safari_pinned_tab:</span> <span class=\"string\">/images/favicon.svg</span></span><br><span class=\"line\">  <span class=\"comment\">#android_manifest: /manifest.json</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Custom Logo (Warning: Do not support scheme Mist)</span></span><br><span class=\"line\"><span class=\"attr\">custom_logo:</span> <span class=\"comment\">#/uploads/custom-logo.jpg</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Creative Commons 4.0 International License.</span></span><br><span class=\"line\"><span class=\"comment\"># See: https://creativecommons.org/about/cclicenses/</span></span><br><span class=\"line\"><span class=\"attr\">creative_commons:</span></span><br><span class=\"line\">  <span class=\"comment\"># Available values: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | cc-zero</span></span><br><span class=\"line\">  <span class=\"attr\">license:</span> <span class=\"string\">by-nc-sa</span></span><br><span class=\"line\">  <span class=\"comment\"># Available values: big | small</span></span><br><span class=\"line\">  <span class=\"attr\">size:</span> <span class=\"string\">small</span></span><br><span class=\"line\">  <span class=\"attr\">sidebar:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">post:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># You can set a language value if you prefer a translated version of CC license, e.g. deed.zh</span></span><br><span class=\"line\">  <span class=\"comment\"># CC licenses are available in 39 languages, you can find the specific and correct abbreviation you need on https://creativecommons.org</span></span><br><span class=\"line\">  <span class=\"attr\">language:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Open graph settings</span></span><br><span class=\"line\"><span class=\"comment\"># See: https://hexo.io/docs/helpers#open-graph</span></span><br><span class=\"line\"><span class=\"attr\">open_graph:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">options:</span></span><br><span class=\"line\">    <span class=\"comment\">#twitter_card: &lt;twitter:card&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">#twitter_id: &lt;twitter:creator&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">#twitter_site: &lt;twitter:site&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">#twitter_image: &lt;twitter:image&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">#google_plus: &lt;g+:profile_link&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">#fb_admins: &lt;fb:admin_id&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">#fb_app_id: &lt;fb:app_id&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\"># Menu Settings</span></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Usage: `Key: /link/ || icon`</span></span><br><span class=\"line\"><span class=\"comment\"># Key is the name of menu item. If the translation for this item is available, the translated text will be loaded, otherwise the Key name will be used. Key is case-sensitive.</span></span><br><span class=\"line\"><span class=\"comment\"># Value before `||` delimiter is the target link, value after `||` delimiter is the name of Font Awesome icon.</span></span><br><span class=\"line\"><span class=\"comment\"># External url should start with http:// or https://</span></span><br><span class=\"line\"><span class=\"attr\">menu:</span></span><br><span class=\"line\">  <span class=\"attr\">home:</span> <span class=\"string\">/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-home</span></span><br><span class=\"line\">  <span class=\"comment\">#about: /about/ || fa fa-user</span></span><br><span class=\"line\">  <span class=\"attr\">tags:</span> <span class=\"string\">/tags/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-tags</span></span><br><span class=\"line\">  <span class=\"attr\">categories:</span> <span class=\"string\">/categories/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-th</span></span><br><span class=\"line\">  <span class=\"attr\">archives:</span> <span class=\"string\">/archives/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-archive</span></span><br><span class=\"line\">  <span class=\"comment\">#schedule: /schedule/ || fa fa-calendar</span></span><br><span class=\"line\">  <span class=\"comment\">#sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class=\"line\">  <span class=\"comment\">#commonweal: /404/ || fa fa-heartbeat</span></span><br><span class=\"line\">  <span class=\"attr\">friends:</span> <span class=\"string\">/links/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-link</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Enable / Disable menu icons / item badges.</span></span><br><span class=\"line\"><span class=\"attr\">menu_settings:</span></span><br><span class=\"line\">  <span class=\"attr\">icons:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">badges:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\"># Sidebar Settings</span></span><br><span class=\"line\"><span class=\"comment\"># See: https://theme-next.js.org/docs/theme-settings/sidebar</span></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">sidebar:</span></span><br><span class=\"line\">  <span class=\"comment\"># Sidebar Position.</span></span><br><span class=\"line\">  <span class=\"attr\">position:</span> <span class=\"string\">left</span></span><br><span class=\"line\">  <span class=\"comment\">#position: right</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Manual define the sidebar width. If commented, will be default for:</span></span><br><span class=\"line\">  <span class=\"comment\"># Muse | Mist: 320</span></span><br><span class=\"line\">  <span class=\"comment\"># Pisces | Gemini: 240</span></span><br><span class=\"line\">  <span class=\"comment\">#width: 300</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Sidebar Display (only for Muse | Mist), available values:</span></span><br><span class=\"line\">  <span class=\"comment\">#  - post    expand on posts automatically. Default.</span></span><br><span class=\"line\">  <span class=\"comment\">#  - always  expand for all pages automatically.</span></span><br><span class=\"line\">  <span class=\"comment\">#  - hide    expand only when click on the sidebar toggle icon.</span></span><br><span class=\"line\">  <span class=\"comment\">#  - remove  totally remove sidebar including sidebar toggle.</span></span><br><span class=\"line\">  <span class=\"attr\">display:</span> <span class=\"string\">always</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Sidebar padding in pixels.</span></span><br><span class=\"line\">  <span class=\"attr\">padding:</span> <span class=\"number\">18</span></span><br><span class=\"line\">  <span class=\"comment\"># Sidebar offset from top menubar in pixels (only for Pisces | Gemini).</span></span><br><span class=\"line\">  <span class=\"attr\">offset:</span> <span class=\"number\">12</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Sidebar Avatar</span></span><br><span class=\"line\"><span class=\"attr\">avatar:</span></span><br><span class=\"line\">  <span class=\"comment\"># Replace the default image and set the url here.</span></span><br><span class=\"line\">  <span class=\"attr\">url:</span> <span class=\"string\">/images/header.jpg</span></span><br><span class=\"line\">  <span class=\"comment\"># If true, the avatar will be displayed in circle.</span></span><br><span class=\"line\">  <span class=\"attr\">rounded:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># If true, the avatar will be rotated with the cursor.</span></span><br><span class=\"line\">  <span class=\"attr\">rotated:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Posts / Categories / Tags in sidebar.</span></span><br><span class=\"line\"><span class=\"attr\">site_state:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Social Links</span></span><br><span class=\"line\"><span class=\"comment\"># Usage: `Key: permalink || icon`</span></span><br><span class=\"line\"><span class=\"comment\"># Key is the link label showing to end users.</span></span><br><span class=\"line\"><span class=\"comment\"># Value before `||` delimiter is the target permalink, value after `||` delimiter is the name of Font Awesome icon.</span></span><br><span class=\"line\"><span class=\"attr\">social:</span></span><br><span class=\"line\">  <span class=\"attr\">RSS:</span> <span class=\"string\">/atom.xml</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-rss</span></span><br><span class=\"line\">  <span class=\"attr\">GitHub:</span> <span class=\"string\">https://github.com/gsxgoldenlegendary</span> <span class=\"string\">||</span> <span class=\"string\">fab</span> <span class=\"string\">fa-github</span></span><br><span class=\"line\">  <span class=\"attr\">E-Mail:</span> <span class=\"string\">mailto:gsxgoldenlegendary@gmail.com</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-envelope</span></span><br><span class=\"line\">  <span class=\"comment\">#Weibo: https://weibo.com/yourname || fab fa-weibo</span></span><br><span class=\"line\">  <span class=\"attr\">Twitter:</span> <span class=\"string\">https://twitter.com/GSongxiao</span> <span class=\"string\">||</span> <span class=\"string\">fab</span> <span class=\"string\">fa-twitter</span></span><br><span class=\"line\">  <span class=\"attr\">FB Page:</span> <span class=\"string\">https://www.facebook.com/songxiao.guo</span> <span class=\"string\">||</span> <span class=\"string\">fab</span> <span class=\"string\">fa-facebook</span></span><br><span class=\"line\">  <span class=\"comment\">#StackOverflow: https://stackoverflow.com/users/17206797/songxiao-guo || fab fa-stack-overflow</span></span><br><span class=\"line\">  <span class=\"comment\">#YouTube: https://www.youtube.com/channel/UCZYUxowAvCLIseYg_VtgiAw || fab fa-youtube</span></span><br><span class=\"line\">  <span class=\"comment\">#Instagram: https://instagram.com/yourname || fab fa-instagram</span></span><br><span class=\"line\">  <span class=\"comment\">#Skype: skype:yourname?call|chat || fab fa-skype</span></span><br><span class=\"line\">  <span class=\"attr\">CSDN:</span> <span class=\"string\">https://blog.csdn.net/weixin_52075219</span> <span class=\"string\">||</span> <span class=\"string\">fab</span> <span class=\"string\">fa-cuttlefish</span></span><br><span class=\"line\">  <span class=\"attr\">Zhihu:</span> <span class=\"string\">https://www.zhihu.com/people/jin-se-chuan-shuo-58-72</span> <span class=\"string\">||</span> <span class=\"string\">fab</span> <span class=\"string\">fa-zhihu</span></span><br><span class=\"line\">  <span class=\"comment\">#Bilibili: https://space.bilibili.com/1593220458 || fab fa-bilibili</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">social_icons:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">icons_only:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">transition:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Blog rolls</span></span><br><span class=\"line\"><span class=\"attr\">links_settings:</span></span><br><span class=\"line\">  <span class=\"attr\">icon:</span> <span class=\"string\">fa</span> <span class=\"string\">fa-globe</span></span><br><span class=\"line\">  <span class=\"attr\">title:</span> <span class=\"string\">Links</span></span><br><span class=\"line\">  <span class=\"comment\"># Available values: block | inline</span></span><br><span class=\"line\">  <span class=\"attr\">layout:</span> <span class=\"string\">block</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">links:</span></span><br><span class=\"line\">  <span class=\"attr\">Homepage:</span> <span class=\"string\">http://home.ustc.edu.cn/~logname</span></span><br><span class=\"line\"><span class=\"comment\"># Table of Contents in the Sidebar</span></span><br><span class=\"line\"><span class=\"comment\"># Front-matter variable (nonsupport wrap expand_all).</span></span><br><span class=\"line\"><span class=\"attr\">toc:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># Automatically add list number to toc.</span></span><br><span class=\"line\">  <span class=\"attr\">number:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># If true, all words will placed on next lines if header width longer then sidebar width.</span></span><br><span class=\"line\">  <span class=\"attr\">wrap:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># If true, all level of TOC in a post will be displayed, rather than the activated part of it.</span></span><br><span class=\"line\">  <span class=\"attr\">expand_all:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"comment\"># Maximum heading depth of generated toc.</span></span><br><span class=\"line\">  <span class=\"attr\">max_depth:</span> <span class=\"number\">6</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\"># Footer Settings</span></span><br><span class=\"line\"><span class=\"comment\"># See: https://theme-next.js.org/docs/theme-settings/footer</span></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Show multilingual switcher in footer.</span></span><br><span class=\"line\"><span class=\"attr\">language_switcher:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">footer:</span></span><br><span class=\"line\">  <span class=\"comment\"># Specify the year when the site was setup. If not defined, current year will be used.</span></span><br><span class=\"line\">  <span class=\"attr\">since:</span> <span class=\"number\">2018</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Icon between year and copyright info.</span></span><br><span class=\"line\">  <span class=\"attr\">icon:</span></span><br><span class=\"line\">    <span class=\"comment\"># Icon name in Font Awesome. See: https://fontawesome.com/icons</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">fa-solid</span> <span class=\"string\">fa-chess-king</span></span><br><span class=\"line\">    <span class=\"comment\"># If you want to animate the icon, set it to true.</span></span><br><span class=\"line\">    <span class=\"attr\">animated:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"comment\"># Change the color of icon, using Hex Code.</span></span><br><span class=\"line\">    <span class=\"attr\">color:</span> <span class=\"string\">&quot;#00ff00&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># If not defined, `author` from Hexo `_config.yml` will be used.</span></span><br><span class=\"line\">  <span class=\"attr\">copyright:</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Powered by Hexo &amp; NexT</span></span><br><span class=\"line\">  <span class=\"attr\">powered:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Beian ICP and gongan information for Chinese users. See: https://beian.miit.gov.cn, http://www.beian.gov.cn</span></span><br><span class=\"line\">  <span class=\"attr\">beian:</span></span><br><span class=\"line\">    <span class=\"attr\">enable:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"attr\">icp:</span></span><br><span class=\"line\">    <span class=\"comment\"># The digit in the num of gongan beian.</span></span><br><span class=\"line\">    <span class=\"attr\">gongan_id:</span></span><br><span class=\"line\">    <span class=\"comment\"># The full num of gongan beian.</span></span><br><span class=\"line\">    <span class=\"attr\">gongan_num:</span></span><br><span class=\"line\">    <span class=\"comment\"># The icon for gongan beian. See: http://www.beian.gov.cn/portal/download</span></span><br><span class=\"line\">    <span class=\"attr\">gongan_icon_url:</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\"># Post Settings</span></span><br><span class=\"line\"><span class=\"comment\"># See: https://theme-next.js.org/docs/theme-settings/posts</span></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Automatically excerpt description in homepage as preamble text.</span></span><br><span class=\"line\"><span class=\"attr\">excerpt_description:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Read more button</span></span><br><span class=\"line\"><span class=\"comment\"># If true, the read more button will be displayed in excerpt section.</span></span><br><span class=\"line\"><span class=\"attr\">read_more_btn:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Post meta display settings</span></span><br><span class=\"line\"><span class=\"attr\">post_meta:</span></span><br><span class=\"line\">  <span class=\"attr\">item_text:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">created_at:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">updated_at:</span></span><br><span class=\"line\">    <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">another_day:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">categories:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Post wordcount display settings</span></span><br><span class=\"line\"><span class=\"comment\"># Dependencies: https://github.com/next-theme/hexo-word-counter</span></span><br><span class=\"line\"><span class=\"attr\">symbols_count_time:</span></span><br><span class=\"line\">  <span class=\"attr\">separated_meta:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">item_text_total:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Use icon instead of the symbol # to indicate the tag at the bottom of the post</span></span><br><span class=\"line\"><span class=\"attr\">tag_icon:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Donate (Sponsor) settings</span></span><br><span class=\"line\"><span class=\"comment\"># Front-matter variable (nonsupport animation).</span></span><br><span class=\"line\"><span class=\"attr\">reward_settings:</span></span><br><span class=\"line\">  <span class=\"comment\"># If true, a donate button will be displayed in every article by default.</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">animation:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\">#comment: Buy me a coffee</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">reward:</span></span><br><span class=\"line\">  <span class=\"attr\">wechatpay:</span> <span class=\"string\">/images/wechatpay.jpg</span></span><br><span class=\"line\">  <span class=\"attr\">alipay:</span> <span class=\"string\">/images/alipay.jpg</span></span><br><span class=\"line\">  <span class=\"comment\">#paypal: /images/paypal.png</span></span><br><span class=\"line\">  <span class=\"attr\">bitcoin:</span> <span class=\"string\">/images/bitcoin.jpg</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Subscribe through Telegram Channel, Twitter, etc.</span></span><br><span class=\"line\"><span class=\"comment\"># Usage: `Key: permalink || icon` (Font Awesome)</span></span><br><span class=\"line\"><span class=\"attr\">follow_me:</span></span><br><span class=\"line\">  <span class=\"attr\">Twitter:</span> <span class=\"string\">https://twitter.com/GSongxiao</span> <span class=\"string\">||</span> <span class=\"string\">fab</span> <span class=\"string\">fa-twitter</span></span><br><span class=\"line\">  <span class=\"comment\">#Telegram: https://t.me/channel_name || fab fa-telegram</span></span><br><span class=\"line\">  <span class=\"comment\">#WeChat: /images/wechat_channel.jpg || fab fa-weixin</span></span><br><span class=\"line\">  <span class=\"attr\">RSS:</span> <span class=\"string\">/atom.xml</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-rss</span></span><br><span class=\"line\">  <span class=\"attr\">GitHub:</span> <span class=\"string\">https://github.com/gsxgoldenlegendary</span> <span class=\"string\">||</span> <span class=\"string\">fab</span> <span class=\"string\">fa-github</span></span><br><span class=\"line\">  <span class=\"attr\">E-Mail:</span> <span class=\"string\">mailto:gsxgoldenlegendary@gmail.com</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-envelope</span></span><br><span class=\"line\">  <span class=\"comment\">#Weibo: https://weibo.com/yourname || fab fa-weibo</span></span><br><span class=\"line\">  <span class=\"attr\">FB Page:</span> <span class=\"string\">https://www.facebook.com/songxiao.guo</span> <span class=\"string\">||</span> <span class=\"string\">fab</span> <span class=\"string\">fa-facebook</span></span><br><span class=\"line\">  <span class=\"comment\">#StackOverflow: https://stackoverflow.com/users/17206797/songxiao-guo || fab fa-stack-overflow</span></span><br><span class=\"line\">  <span class=\"comment\">#YouTube: https://www.youtube.com/channel/UCZYUxowAvCLIseYg_VtgiAw || fab fa-youtube</span></span><br><span class=\"line\">  <span class=\"comment\">#Instagram: https://instagram.com/yourname || fab fa-instagram</span></span><br><span class=\"line\">  <span class=\"comment\">#Skype: skype:yourname?call|chat || fab fa-skype</span></span><br><span class=\"line\">  <span class=\"attr\">CSDN:</span> <span class=\"string\">https://blog.csdn.net/weixin_52075219</span> <span class=\"string\">||</span> <span class=\"string\">fab</span> <span class=\"string\">fa-cuttlefish</span></span><br><span class=\"line\">  <span class=\"attr\">Zhihu:</span> <span class=\"string\">https://www.zhihu.com/people/jin-se-chuan-shuo-58-72</span> <span class=\"string\">||</span> <span class=\"string\">fab</span> <span class=\"string\">fa-zhihu</span></span><br><span class=\"line\">  <span class=\"comment\">#Bilibili: https://space.bilibili.com/1593220458 || fab fa-bilibili</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Related popular posts</span></span><br><span class=\"line\"><span class=\"comment\"># Dependencies: https://github.com/sergeyzwezdin/hexo-related-posts</span></span><br><span class=\"line\"><span class=\"attr\">related_posts:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">title:</span> <span class=\"comment\"># Custom header, leave empty to use the default one</span></span><br><span class=\"line\">  <span class=\"attr\">display_in_home:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Post edit</span></span><br><span class=\"line\"><span class=\"comment\"># Easily browse and edit blog source code online.</span></span><br><span class=\"line\"><span class=\"attr\">post_edit:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">url:</span> <span class=\"string\">https://github.com/user-name/repo-name/tree/branch-name/subdirectory-name/</span> <span class=\"comment\"># Link for view source</span></span><br><span class=\"line\">  <span class=\"comment\">#url: https://github.com/user-name/repo-name/edit/branch-name/subdirectory-name/ # Link for fork &amp; edit</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Show previous post and next post in post footer if exists</span></span><br><span class=\"line\"><span class=\"comment\"># Available values: left | right | false</span></span><br><span class=\"line\"><span class=\"attr\">post_navigation:</span> <span class=\"string\">left</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\"># Custom Page Settings</span></span><br><span class=\"line\"><span class=\"comment\"># See: https://theme-next.js.org/docs/theme-settings/custom-pages</span></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># TagCloud settings for tags page.</span></span><br><span class=\"line\"><span class=\"attr\">tagcloud:</span></span><br><span class=\"line\">  <span class=\"attr\">min:</span> <span class=\"number\">12</span> <span class=\"comment\"># Minimum font size in px</span></span><br><span class=\"line\">  <span class=\"attr\">max:</span> <span class=\"number\">30</span> <span class=\"comment\"># Maximum font size in px</span></span><br><span class=\"line\">  <span class=\"attr\">amount:</span> <span class=\"number\">200</span> <span class=\"comment\"># Total amount of tags</span></span><br><span class=\"line\">  <span class=\"attr\">orderby:</span> <span class=\"string\">name</span> <span class=\"comment\"># Order of tags</span></span><br><span class=\"line\">  <span class=\"attr\">order:</span> <span class=\"number\">1</span> <span class=\"comment\"># Sort order</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Google Calendar</span></span><br><span class=\"line\"><span class=\"comment\"># Share your recent schedule to others via calendar page.</span></span><br><span class=\"line\"><span class=\"attr\">calendar:</span></span><br><span class=\"line\">  <span class=\"attr\">calendar_id:</span> <span class=\"string\">&lt;required&gt;</span> <span class=\"comment\"># Your Google account E-Mail</span></span><br><span class=\"line\">  <span class=\"attr\">api_key:</span> <span class=\"string\">&lt;required&gt;</span></span><br><span class=\"line\">  <span class=\"attr\">orderBy:</span> <span class=\"string\">startTime</span></span><br><span class=\"line\">  <span class=\"attr\">showLocation:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">offsetMax:</span> <span class=\"number\">72</span> <span class=\"comment\"># Time Range</span></span><br><span class=\"line\">  <span class=\"attr\">offsetMin:</span> <span class=\"number\">4</span> <span class=\"comment\"># Time Range</span></span><br><span class=\"line\">  <span class=\"attr\">showDeleted:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">singleEvents:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">maxResults:</span> <span class=\"number\">250</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\"># Misc Theme Settings</span></span><br><span class=\"line\"><span class=\"comment\"># See: https://theme-next.js.org/docs/theme-settings/miscellaneous</span></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Preconnect CDN for fonts and plugins.</span></span><br><span class=\"line\"><span class=\"comment\"># For more information: https://www.w3.org/TR/resource-hints/#preconnect</span></span><br><span class=\"line\"><span class=\"attr\">preconnect:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Set the text alignment in posts / pages.</span></span><br><span class=\"line\"><span class=\"attr\">text_align:</span></span><br><span class=\"line\">  <span class=\"comment\"># Available values: start | end | left | right | center | justify | justify-all | match-parent</span></span><br><span class=\"line\">  <span class=\"attr\">desktop:</span> <span class=\"string\">justify</span></span><br><span class=\"line\">  <span class=\"attr\">mobile:</span> <span class=\"string\">justify</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Reduce padding / margin indents on devices with narrow width.</span></span><br><span class=\"line\"><span class=\"attr\">mobile_layout_economy:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Browser header panel color.</span></span><br><span class=\"line\"><span class=\"attr\">theme_color:</span></span><br><span class=\"line\">  <span class=\"attr\">light:</span> <span class=\"string\">&quot;#222&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">dark:</span> <span class=\"string\">&quot;#222&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Override browsers&#x27; default behavior.</span></span><br><span class=\"line\"><span class=\"attr\">body_scrollbar:</span></span><br><span class=\"line\">  <span class=\"comment\"># Place the scrollbar over the content.</span></span><br><span class=\"line\">  <span class=\"attr\">overlay:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"comment\"># Present the scrollbar even if the content is not overflowing.</span></span><br><span class=\"line\">  <span class=\"attr\">stable:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">codeblock:</span></span><br><span class=\"line\">  <span class=\"comment\"># Code Highlight theme</span></span><br><span class=\"line\">  <span class=\"comment\"># All available themes: https://theme-next.js.org/highlight/</span></span><br><span class=\"line\">  <span class=\"attr\">theme:</span></span><br><span class=\"line\">    <span class=\"attr\">light:</span> <span class=\"string\">default</span></span><br><span class=\"line\">    <span class=\"attr\">dark:</span> <span class=\"string\">stackoverflow-dark</span></span><br><span class=\"line\">  <span class=\"attr\">prism:</span></span><br><span class=\"line\">    <span class=\"attr\">light:</span> <span class=\"string\">prism</span></span><br><span class=\"line\">    <span class=\"attr\">dark:</span> <span class=\"string\">prism-dark</span></span><br><span class=\"line\">  <span class=\"comment\"># Add copy button on codeblock</span></span><br><span class=\"line\">  <span class=\"attr\">copy_button:</span></span><br><span class=\"line\">    <span class=\"attr\">enable:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"comment\"># Available values: default | flat | mac</span></span><br><span class=\"line\">    <span class=\"attr\">style:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">back2top:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># Back to top in sidebar.</span></span><br><span class=\"line\">  <span class=\"attr\">sidebar:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"comment\"># Scroll percent label in b2t button.</span></span><br><span class=\"line\">  <span class=\"attr\">scrollpercent:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Reading progress bar</span></span><br><span class=\"line\"><span class=\"attr\">reading_progress:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"comment\"># Available values: left | right</span></span><br><span class=\"line\">  <span class=\"attr\">start_at:</span> <span class=\"string\">left</span></span><br><span class=\"line\">  <span class=\"comment\"># Available values: top | bottom</span></span><br><span class=\"line\">  <span class=\"attr\">position:</span> <span class=\"string\">top</span></span><br><span class=\"line\">  <span class=\"attr\">reversed:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">color:</span> <span class=\"string\">&quot;#37c6c0&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">height:</span> <span class=\"string\">3px</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Bookmark Support</span></span><br><span class=\"line\"><span class=\"attr\">bookmark:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"comment\"># Customize the color of the bookmark.</span></span><br><span class=\"line\">  <span class=\"attr\">color:</span> <span class=\"string\">&quot;#222&quot;</span></span><br><span class=\"line\">  <span class=\"comment\"># If auto, save the reading progress when closing the page or clicking the bookmark-icon.</span></span><br><span class=\"line\">  <span class=\"comment\"># If manual, only save it by clicking the bookmark-icon.</span></span><br><span class=\"line\">  <span class=\"attr\">save:</span> <span class=\"string\">auto</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># `Follow me on GitHub` banner in the top-right corner.</span></span><br><span class=\"line\"><span class=\"attr\">github_banner:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">permalink:</span> <span class=\"string\">https://github.com/gsxgoldenlegendary</span></span><br><span class=\"line\">  <span class=\"attr\">title:</span> <span class=\"string\">Follow</span> <span class=\"string\">me</span> <span class=\"string\">on</span> <span class=\"string\">GitHub</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\"># Font Settings</span></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\"># Find fonts on Google Fonts (https://fonts.google.com)</span></span><br><span class=\"line\"><span class=\"comment\"># All fonts set here will have the following styles:</span></span><br><span class=\"line\"><span class=\"comment\">#   light | light italic | normal | normal italic | bold | bold italic</span></span><br><span class=\"line\"><span class=\"comment\"># Be aware that setting too much fonts will cause site running slowly</span></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\"># Web Safe fonts are recommended for `global` (and `title`):</span></span><br><span class=\"line\"><span class=\"comment\"># Arial | Tahoma | Helvetica | Times New Roman | Courier New | Verdana | Georgia | Palatino | Garamond | Comic Sans MS | Trebuchet MS</span></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">font:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Uri of fonts host, e.g. https://fonts.googleapis.com (Default).</span></span><br><span class=\"line\">  <span class=\"attr\">host:</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Font options:</span></span><br><span class=\"line\">  <span class=\"comment\"># `external: true` will load this font family from `host` above.</span></span><br><span class=\"line\">  <span class=\"comment\"># `family: Times New Roman`. Without any quotes.</span></span><br><span class=\"line\">  <span class=\"comment\"># `size: x.x`. Use `em` as unit. Default: 1 (16px)</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Global font settings used for all elements inside &lt;body&gt;.</span></span><br><span class=\"line\">  <span class=\"attr\">global:</span></span><br><span class=\"line\">    <span class=\"attr\">external:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">family:</span> <span class=\"string\">Lato</span></span><br><span class=\"line\">    <span class=\"attr\">size:</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Font settings for site title (.site-title).</span></span><br><span class=\"line\">  <span class=\"attr\">title:</span></span><br><span class=\"line\">    <span class=\"attr\">external:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">family:</span></span><br><span class=\"line\">    <span class=\"attr\">size:</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Font settings for headlines (&lt;h1&gt; to &lt;h6&gt;).</span></span><br><span class=\"line\">  <span class=\"attr\">headings:</span></span><br><span class=\"line\">    <span class=\"attr\">external:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">family:</span></span><br><span class=\"line\">    <span class=\"attr\">size:</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Font settings for posts (.post-body).</span></span><br><span class=\"line\">  <span class=\"attr\">posts:</span></span><br><span class=\"line\">    <span class=\"attr\">external:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">family:</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Font settings for &lt;code&gt; and code blocks.</span></span><br><span class=\"line\">  <span class=\"attr\">codes:</span></span><br><span class=\"line\">    <span class=\"attr\">external:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">family:</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\"># SEO Settings</span></span><br><span class=\"line\"><span class=\"comment\"># See: https://theme-next.js.org/docs/theme-settings/seo</span></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># If true, site-subtitle will be added to index page.</span></span><br><span class=\"line\"><span class=\"comment\"># Remember to set up your site-subtitle in Hexo `_config.yml` (e.g. subtitle: Subtitle)</span></span><br><span class=\"line\"><span class=\"attr\">index_with_subtitle:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Automatically add external URL with Base64 encrypt &amp; decrypt.</span></span><br><span class=\"line\"><span class=\"attr\">exturl:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># If true, an icon will be attached to each external URL</span></span><br><span class=\"line\"><span class=\"attr\">exturl_icon:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Google Webmaster tools verification.</span></span><br><span class=\"line\"><span class=\"comment\"># See: https://developers.google.com/search</span></span><br><span class=\"line\"><span class=\"attr\">google_site_verification:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Bing Webmaster tools verification.</span></span><br><span class=\"line\"><span class=\"comment\"># See: https://www.bing.com/webmasters</span></span><br><span class=\"line\"><span class=\"attr\">bing_site_verification:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Yandex Webmaster tools verification.</span></span><br><span class=\"line\"><span class=\"comment\"># See: https://webmaster.yandex.ru</span></span><br><span class=\"line\"><span class=\"attr\">yandex_site_verification:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Baidu Webmaster tools verification.</span></span><br><span class=\"line\"><span class=\"comment\"># See: https://ziyuan.baidu.com/site</span></span><br><span class=\"line\"><span class=\"attr\">baidu_site_verification:</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\"># Third Party Plugins &amp; Services Settings</span></span><br><span class=\"line\"><span class=\"comment\"># See: https://theme-next.js.org/docs/third-party-services/</span></span><br><span class=\"line\"><span class=\"comment\"># More plugins: https://github.com/next-theme/awesome-next</span></span><br><span class=\"line\"><span class=\"comment\"># You may need to install the corresponding dependency packages</span></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Math Formulas Render Support</span></span><br><span class=\"line\"><span class=\"comment\"># Warning: Please install / uninstall the relevant renderer according to the documentation.</span></span><br><span class=\"line\"><span class=\"comment\"># See: https://theme-next.js.org/docs/third-party-services/math-equations</span></span><br><span class=\"line\"><span class=\"comment\"># Server-side plugin: https://github.com/next-theme/hexo-filter-mathjax</span></span><br><span class=\"line\"><span class=\"attr\">math:</span></span><br><span class=\"line\">  <span class=\"comment\"># Default (false) will load mathjax / katex script on demand.</span></span><br><span class=\"line\">  <span class=\"comment\"># That is it only render those page which has `mathjax: true` in front-matter.</span></span><br><span class=\"line\">  <span class=\"comment\"># If you set it to true, it will load mathjax / katex script EVERY PAGE.</span></span><br><span class=\"line\">  <span class=\"attr\">every_page:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">mathjax:</span></span><br><span class=\"line\">    <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"comment\"># Available values: none | ams | all</span></span><br><span class=\"line\">    <span class=\"attr\">tags:</span> <span class=\"string\">none</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">katex:</span></span><br><span class=\"line\">    <span class=\"attr\">enable:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"comment\"># See: https://github.com/KaTeX/KaTeX/tree/master/contrib/copy-tex</span></span><br><span class=\"line\">    <span class=\"attr\">copy_tex:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Easily enable fast Ajax navigation on your website.</span></span><br><span class=\"line\"><span class=\"comment\"># For more information: https://github.com/next-theme/pjax</span></span><br><span class=\"line\"><span class=\"attr\">pjax:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># FancyBox is a tool that offers a nice and elegant way to add zooming functionality for images.</span></span><br><span class=\"line\"><span class=\"comment\"># For more information: https://fancyapps.com/fancybox/</span></span><br><span class=\"line\"><span class=\"attr\">fancybox:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># A JavaScript library for zooming images like Medium.</span></span><br><span class=\"line\"><span class=\"comment\"># Warning: Do not enable both `fancybox` and `mediumzoom`.</span></span><br><span class=\"line\"><span class=\"comment\"># For more information: https://medium-zoom.francoischalifour.com</span></span><br><span class=\"line\"><span class=\"attr\">mediumzoom:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Vanilla JavaScript plugin for lazyloading images.</span></span><br><span class=\"line\"><span class=\"comment\"># For more information: https://apoorv.pro/lozad.js/demo/</span></span><br><span class=\"line\"><span class=\"attr\">lazyload:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Pangu Support</span></span><br><span class=\"line\"><span class=\"comment\"># For more information: https://github.com/vinta/pangu.js</span></span><br><span class=\"line\"><span class=\"comment\"># Server-side plugin: https://github.com/next-theme/hexo-pangu</span></span><br><span class=\"line\"><span class=\"attr\">pangu:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Quicklink Support</span></span><br><span class=\"line\"><span class=\"comment\"># For more information: https://getquick.link</span></span><br><span class=\"line\"><span class=\"comment\"># Front-matter variable (nonsupport home archive).</span></span><br><span class=\"line\"><span class=\"attr\">quicklink:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Home page and archive page can be controlled through home and archive options below.</span></span><br><span class=\"line\">  <span class=\"comment\"># This configuration item is independent of `enable`.</span></span><br><span class=\"line\">  <span class=\"attr\">home:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">archive:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Default (true) will initialize quicklink after the load event fires.</span></span><br><span class=\"line\">  <span class=\"attr\">delay:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># Custom a time in milliseconds by which the browser must execute prefetching.</span></span><br><span class=\"line\">  <span class=\"attr\">timeout:</span> <span class=\"number\">3000</span></span><br><span class=\"line\">  <span class=\"comment\"># Default (true) will attempt to use the fetch() API if supported (rather than link[rel=prefetch]).</span></span><br><span class=\"line\">  <span class=\"attr\">priority:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\"># Comments Settings</span></span><br><span class=\"line\"><span class=\"comment\"># See: https://theme-next.js.org/docs/third-party-services/comments</span></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Multiple Comment System Support</span></span><br><span class=\"line\"><span class=\"attr\">comments:</span></span><br><span class=\"line\">  <span class=\"comment\"># Available values: tabs | buttons</span></span><br><span class=\"line\">  <span class=\"attr\">style:</span> <span class=\"string\">tabs</span></span><br><span class=\"line\">  <span class=\"comment\"># Choose a comment system to be displayed by default.</span></span><br><span class=\"line\">  <span class=\"comment\"># Available values: disqus | disqusjs | changyan | livere | gitalk | utterances</span></span><br><span class=\"line\">  <span class=\"attr\">active:</span> <span class=\"string\">utterances</span></span><br><span class=\"line\">  <span class=\"comment\"># Setting `true` means remembering the comment system selected by the visitor.</span></span><br><span class=\"line\">  <span class=\"attr\">storage:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># Lazyload all comment systems.</span></span><br><span class=\"line\">  <span class=\"attr\">lazyload:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"comment\"># Modify texts or order for any naves, here are some examples.</span></span><br><span class=\"line\">  <span class=\"attr\">nav:</span></span><br><span class=\"line\">    <span class=\"comment\">#disqus:</span></span><br><span class=\"line\">    <span class=\"comment\">#  text: Load Disqus</span></span><br><span class=\"line\">    <span class=\"comment\">#  order: -1</span></span><br><span class=\"line\">    <span class=\"comment\">#gitalk:</span></span><br><span class=\"line\">    <span class=\"comment\">#  order: -2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Disqus</span></span><br><span class=\"line\"><span class=\"comment\"># For more information: https://disqus.com</span></span><br><span class=\"line\"><span class=\"attr\">disqus:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">shortname:</span></span><br><span class=\"line\">  <span class=\"attr\">count:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># DisqusJS</span></span><br><span class=\"line\"><span class=\"comment\"># For more information: https://disqusjs.skk.moe</span></span><br><span class=\"line\"><span class=\"attr\">disqusjs:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"comment\"># API Endpoint of Disqus API (https://disqus.com/api/docs/).</span></span><br><span class=\"line\">  <span class=\"comment\"># Leave api empty if you are able to connect to Disqus API. Otherwise you need a reverse proxy for it.</span></span><br><span class=\"line\">  <span class=\"comment\"># For example:</span></span><br><span class=\"line\">  <span class=\"comment\"># api: https://disqus.skk.moe/disqus/</span></span><br><span class=\"line\">  <span class=\"attr\">api:</span></span><br><span class=\"line\">  <span class=\"attr\">apikey:</span> <span class=\"comment\"># Register new application from https://disqus.com/api/applications/</span></span><br><span class=\"line\">  <span class=\"attr\">shortname:</span> <span class=\"comment\"># See: https://disqus.com/admin/settings/general/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Changyan</span></span><br><span class=\"line\"><span class=\"comment\"># For more information: https://changyan.kuaizhan.com</span></span><br><span class=\"line\"><span class=\"attr\">changyan:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">appid:</span></span><br><span class=\"line\">  <span class=\"attr\">appkey:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># LiveRe comments system</span></span><br><span class=\"line\"><span class=\"comment\"># You can get your uid from https://livere.com/insight/myCode (General web site)</span></span><br><span class=\"line\"><span class=\"attr\">livere_uid:</span> <span class=\"comment\"># &lt;your_uid&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Gitalk</span></span><br><span class=\"line\"><span class=\"comment\"># For more information: https://gitalk.github.io</span></span><br><span class=\"line\"><span class=\"attr\">gitalk:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">github_id:</span> <span class=\"comment\"># GitHub repo owner</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"comment\"># Repository name to store issues</span></span><br><span class=\"line\">  <span class=\"attr\">client_id:</span> <span class=\"comment\"># GitHub Application Client ID</span></span><br><span class=\"line\">  <span class=\"attr\">client_secret:</span> <span class=\"comment\"># GitHub Application Client Secret</span></span><br><span class=\"line\">  <span class=\"attr\">admin_user:</span> <span class=\"comment\"># GitHub repo owner and collaborators, only these guys can initialize gitHub issues</span></span><br><span class=\"line\">  <span class=\"attr\">distraction_free_mode:</span> <span class=\"literal\">true</span> <span class=\"comment\"># Facebook-like distraction free mode</span></span><br><span class=\"line\">  <span class=\"comment\"># When the official proxy is not available, you can change it to your own proxy address</span></span><br><span class=\"line\">  <span class=\"attr\">proxy:</span> <span class=\"string\">https://cors-anywhere.azm.workers.dev/https://github.com/login/oauth/access_token</span> <span class=\"comment\"># This is official proxy address</span></span><br><span class=\"line\">  <span class=\"comment\"># Gitalk&#x27;s display language depends on user&#x27;s browser or system environment</span></span><br><span class=\"line\">  <span class=\"comment\"># If you want everyone visiting your site to see a uniform language, you can set a force language value</span></span><br><span class=\"line\">  <span class=\"comment\"># Available values: en | es-ES | fr | ru | zh-CN | zh-TW</span></span><br><span class=\"line\">  <span class=\"attr\">language:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Utterances</span></span><br><span class=\"line\"><span class=\"comment\"># For more information: https://utteranc.es</span></span><br><span class=\"line\"><span class=\"attr\">utterances:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">gsxgoldenlegendary/gsxgoldenlegendary.github.io</span> <span class=\"comment\"># Github repository name</span></span><br><span class=\"line\">  <span class=\"comment\"># Available values: pathname | url | title | og:title</span></span><br><span class=\"line\">  <span class=\"attr\">issue_term:</span> <span class=\"string\">pathname</span></span><br><span class=\"line\">  <span class=\"comment\"># Available values: github-light | github-dark | preferred-color-scheme | github-dark-orange | icy-dark | dark-blue | photon-dark | boxy-light</span></span><br><span class=\"line\">  <span class=\"attr\">theme:</span> <span class=\"string\">github-dark</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Isso</span></span><br><span class=\"line\"><span class=\"comment\"># For more information: https://posativ.org/isso/</span></span><br><span class=\"line\"><span class=\"attr\">isso:</span> <span class=\"comment\"># &lt;data_isso&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\"># Post Widgets &amp; Content Sharing Services</span></span><br><span class=\"line\"><span class=\"comment\"># See: https://theme-next.js.org/docs/third-party-services/post-widgets</span></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Star rating support to each article.</span></span><br><span class=\"line\"><span class=\"comment\"># To get your ID visit https://widgetpack.com</span></span><br><span class=\"line\"><span class=\"attr\">rating:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">id:</span>     <span class=\"comment\"># &lt;app_id&gt;</span></span><br><span class=\"line\">  <span class=\"attr\">color:</span>  <span class=\"string\">&quot;#fc6423&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># AddThis Share. See: https://www.addthis.com</span></span><br><span class=\"line\"><span class=\"comment\"># Go to https://www.addthis.com/dashboard to customize your tools.</span></span><br><span class=\"line\"><span class=\"attr\">add_this_id:</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\"># Statistics and Analytics</span></span><br><span class=\"line\"><span class=\"comment\"># See: https://theme-next.js.org/docs/third-party-services/statistics-and-analytics</span></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Google Analytics</span></span><br><span class=\"line\"><span class=\"comment\"># See: https://analytics.google.com</span></span><br><span class=\"line\"><span class=\"attr\">google_analytics:</span></span><br><span class=\"line\">  <span class=\"attr\">tracking_id:</span> <span class=\"comment\"># &lt;app_id&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># By default, NexT will load an external gtag.js script on your site.</span></span><br><span class=\"line\">  <span class=\"comment\"># If you only need the pageview feature, set the following option to true to get a better performance.</span></span><br><span class=\"line\">  <span class=\"attr\">only_pageview:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Baidu Analytics</span></span><br><span class=\"line\"><span class=\"comment\"># See: https://tongji.baidu.com</span></span><br><span class=\"line\"><span class=\"attr\">baidu_analytics:</span> <span class=\"comment\"># &lt;app_id&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Growingio Analytics</span></span><br><span class=\"line\"><span class=\"comment\"># See: https://www.growingio.com</span></span><br><span class=\"line\"><span class=\"attr\">growingio_analytics:</span> <span class=\"comment\"># &lt;project_id&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Cloudflare Web Analytics</span></span><br><span class=\"line\"><span class=\"comment\"># See: https://www.cloudflare.com/web-analytics/</span></span><br><span class=\"line\"><span class=\"attr\">cloudflare_analytics:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Microsoft Clarity Analytics</span></span><br><span class=\"line\"><span class=\"comment\"># See: https://clarity.microsoft.com/</span></span><br><span class=\"line\"><span class=\"attr\">clarity_analytics:</span> <span class=\"comment\"># &lt;project_id&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Show number of visitors of each article.</span></span><br><span class=\"line\"><span class=\"comment\"># You can visit https://www.leancloud.cn to get AppID and AppKey.</span></span><br><span class=\"line\"><span class=\"attr\">leancloud_visitors:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">app_id:</span> <span class=\"comment\"># &lt;your app id&gt;</span></span><br><span class=\"line\">  <span class=\"attr\">app_key:</span> <span class=\"comment\"># &lt;your app key&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># Required for apps from CN region</span></span><br><span class=\"line\">  <span class=\"attr\">server_url:</span> <span class=\"comment\"># &lt;your server url&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># Dependencies: https://github.com/theme-next/hexo-leancloud-counter-security</span></span><br><span class=\"line\">  <span class=\"comment\"># If you don&#x27;t care about security in leancloud counter and just want to use it directly</span></span><br><span class=\"line\">  <span class=\"comment\"># (without hexo-leancloud-counter-security plugin), set `security` to `false`.</span></span><br><span class=\"line\">  <span class=\"attr\">security:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Another tool to show number of visitors to each article.</span></span><br><span class=\"line\"><span class=\"comment\"># Visit https://console.firebase.google.com/u/0/ to get apiKey and projectId.</span></span><br><span class=\"line\"><span class=\"comment\"># Visit https://firebase.google.com/docs/firestore/ to get more information about firestore.</span></span><br><span class=\"line\"><span class=\"attr\">firestore:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">collection:</span> <span class=\"string\">articles</span> <span class=\"comment\"># Required, a string collection name to access firestore database</span></span><br><span class=\"line\">  <span class=\"attr\">apiKey:</span> <span class=\"comment\"># Required</span></span><br><span class=\"line\">  <span class=\"attr\">projectId:</span> <span class=\"comment\"># Required</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Show Views / Visitors of the website / page with busuanzi.</span></span><br><span class=\"line\"><span class=\"comment\"># For more information: http://ibruce.info/2015/04/04/busuanzi/</span></span><br><span class=\"line\"><span class=\"attr\">busuanzi_count:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">total_visitors:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">total_visitors_icon:</span> <span class=\"string\">fa</span> <span class=\"string\">fa-user</span></span><br><span class=\"line\">  <span class=\"attr\">total_views:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">total_views_icon:</span> <span class=\"string\">fa</span> <span class=\"string\">fa-eye</span></span><br><span class=\"line\">  <span class=\"attr\">post_views:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">post_views_icon:</span> <span class=\"string\">far</span> <span class=\"string\">fa-eye</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\"># Search Services</span></span><br><span class=\"line\"><span class=\"comment\"># See: https://theme-next.js.org/docs/third-party-services/search-services</span></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Algolia Search</span></span><br><span class=\"line\"><span class=\"comment\"># For more information: https://www.algolia.com</span></span><br><span class=\"line\"><span class=\"attr\">algolia_search:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">hits:</span></span><br><span class=\"line\">    <span class=\"attr\">per_page:</span> <span class=\"number\">10</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Local Search</span></span><br><span class=\"line\"><span class=\"comment\"># Dependencies: https://github.com/next-theme/hexo-generator-searchdb</span></span><br><span class=\"line\"><span class=\"attr\">local_search:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># If auto, trigger search by changing input.</span></span><br><span class=\"line\">  <span class=\"comment\"># If manual, trigger search by pressing enter key or search button.</span></span><br><span class=\"line\">  <span class=\"attr\">trigger:</span> <span class=\"string\">auto</span></span><br><span class=\"line\">  <span class=\"comment\"># Show top n results per article, show all results by setting to -1</span></span><br><span class=\"line\">  <span class=\"attr\">top_n_per_article:</span> <span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"comment\"># Unescape html strings to the readable one.</span></span><br><span class=\"line\">  <span class=\"attr\">unescape:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"comment\"># Preload the search data when the page loads.</span></span><br><span class=\"line\">  <span class=\"attr\">preload:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\"># Chat Services</span></span><br><span class=\"line\"><span class=\"comment\"># See: https://theme-next.js.org/docs/third-party-services/chat-services</span></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># A button to open designated chat widget in sidebar.</span></span><br><span class=\"line\"><span class=\"comment\"># Firstly, you need to enable and configure the chat service.</span></span><br><span class=\"line\"><span class=\"attr\">chat:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">icon:</span> <span class=\"string\">fa</span> <span class=\"string\">fa-comment</span> <span class=\"comment\"># Icon name in Font Awesome, set false to disable icon.</span></span><br><span class=\"line\">  <span class=\"attr\">text:</span> <span class=\"string\">Chat</span> <span class=\"comment\"># Button text, change it as you wish.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Chatra Support</span></span><br><span class=\"line\"><span class=\"comment\"># For more information: https://chatra.com</span></span><br><span class=\"line\"><span class=\"comment\"># Dashboard: https://app.chatra.io/settings/general</span></span><br><span class=\"line\"><span class=\"attr\">chatra:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">async:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">id:</span> <span class=\"comment\"># Visit Dashboard to get your ChatraID</span></span><br><span class=\"line\">  <span class=\"comment\">#embed: # Unfinished experimental feature for developers. See: https://chatra.com/help/api/#injectto</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Tidio Support</span></span><br><span class=\"line\"><span class=\"comment\"># For more information: https://www.tidio.com</span></span><br><span class=\"line\"><span class=\"comment\"># Dashboard: https://www.tidio.com/panel/dashboard</span></span><br><span class=\"line\"><span class=\"attr\">tidio:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">key:</span> <span class=\"comment\"># Public Key, get it from dashboard. See: https://www.tidio.com/panel/settings/developer</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Gitter Support</span></span><br><span class=\"line\"><span class=\"comment\"># For more information: https://gitter.im</span></span><br><span class=\"line\"><span class=\"attr\">gitter:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">room:</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\"># Tags Settings</span></span><br><span class=\"line\"><span class=\"comment\"># See: https://theme-next.js.org/docs/tag-plugins/</span></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Note tag (bootstrap callout)</span></span><br><span class=\"line\"><span class=\"attr\">note:</span></span><br><span class=\"line\">  <span class=\"comment\"># Note tag style values:</span></span><br><span class=\"line\">  <span class=\"comment\">#  - simple    bootstrap callout old alert style. Default.</span></span><br><span class=\"line\">  <span class=\"comment\">#  - modern    bootstrap callout new (v2-v3) alert style.</span></span><br><span class=\"line\">  <span class=\"comment\">#  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span></span><br><span class=\"line\">  <span class=\"comment\">#  - disabled  disable all CSS styles import of note tag.</span></span><br><span class=\"line\">  <span class=\"attr\">style:</span> <span class=\"string\">simple</span></span><br><span class=\"line\">  <span class=\"attr\">icons:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"comment\"># Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span></span><br><span class=\"line\">  <span class=\"comment\"># Offset also applied to label tag variables. This option can work with disabled note tag.</span></span><br><span class=\"line\">  <span class=\"attr\">light_bg_offset:</span> <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Tabs tag</span></span><br><span class=\"line\"><span class=\"attr\">tabs:</span></span><br><span class=\"line\">  <span class=\"comment\"># Make the nav bar of tabs with long content stick to the top.</span></span><br><span class=\"line\">  <span class=\"attr\">sticky:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">transition:</span></span><br><span class=\"line\">    <span class=\"attr\">tabs:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"attr\">labels:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># PDF tag</span></span><br><span class=\"line\"><span class=\"comment\"># NexT will try to load pdf files natively, if failed, pdf.js will be used.</span></span><br><span class=\"line\"><span class=\"comment\"># So, you have to install the dependency of pdf.js if you want to use pdf tag and make it available to all browsers.</span></span><br><span class=\"line\"><span class=\"comment\"># Dependencies: https://github.com/next-theme/theme-next-pdf</span></span><br><span class=\"line\"><span class=\"attr\">pdf:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># Default height</span></span><br><span class=\"line\">  <span class=\"attr\">height:</span> <span class=\"string\">600px</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Mermaid tag</span></span><br><span class=\"line\"><span class=\"attr\">mermaid:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"comment\"># Available themes: default | dark | forest | neutral</span></span><br><span class=\"line\">  <span class=\"attr\">theme:</span></span><br><span class=\"line\">    <span class=\"attr\">light:</span> <span class=\"string\">default</span></span><br><span class=\"line\">    <span class=\"attr\">dark:</span> <span class=\"string\">dark</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\"># Animation Settings</span></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Use Animate.css to animate everything.</span></span><br><span class=\"line\"><span class=\"comment\"># For more information: https://animate.style</span></span><br><span class=\"line\"><span class=\"attr\">motion:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">async:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">transition:</span></span><br><span class=\"line\">    <span class=\"comment\"># All available transition variants: https://theme-next.js.org/animate/</span></span><br><span class=\"line\">    <span class=\"attr\">post_block:</span> <span class=\"string\">fadeIn</span></span><br><span class=\"line\">    <span class=\"attr\">post_header:</span> <span class=\"string\">fadeInDown</span></span><br><span class=\"line\">    <span class=\"attr\">post_body:</span> <span class=\"string\">fadeInDown</span></span><br><span class=\"line\">    <span class=\"attr\">coll_header:</span> <span class=\"string\">fadeInLeft</span></span><br><span class=\"line\">    <span class=\"comment\"># Only for Pisces | Gemini.</span></span><br><span class=\"line\">    <span class=\"attr\">sidebar:</span> <span class=\"string\">fadeInUp</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Progress bar in the top during page loading.</span></span><br><span class=\"line\"><span class=\"comment\"># For more information: https://github.com/CodeByZach/pace</span></span><br><span class=\"line\"><span class=\"attr\">pace:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"comment\"># All available colors:</span></span><br><span class=\"line\">  <span class=\"comment\"># black | blue | green | orange | pink | purple | red | silver | white | yellow</span></span><br><span class=\"line\">  <span class=\"attr\">color:</span> <span class=\"string\">blue</span></span><br><span class=\"line\">  <span class=\"comment\"># All available themes:</span></span><br><span class=\"line\">  <span class=\"comment\"># big-counter | bounce | barber-shop | center-atom | center-circle | center-radar | center-simple</span></span><br><span class=\"line\">  <span class=\"comment\"># corner-indicator | fill-left | flat-top | flash | loading-bar | mac-osx | material | minimal</span></span><br><span class=\"line\">  <span class=\"attr\">theme:</span> <span class=\"string\">minimal</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Canvas ribbon</span></span><br><span class=\"line\"><span class=\"comment\"># For more information: https://github.com/hustcc/ribbon.js</span></span><br><span class=\"line\"><span class=\"attr\">canvas_ribbon:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">size:</span> <span class=\"number\">300</span> <span class=\"comment\"># The width of the ribbon</span></span><br><span class=\"line\">  <span class=\"attr\">alpha:</span> <span class=\"number\">0.6</span> <span class=\"comment\"># The transparency of the ribbon</span></span><br><span class=\"line\">  <span class=\"attr\">zIndex:</span> <span class=\"number\">-1</span> <span class=\"comment\"># The display level of the ribbon</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\"># CDN Settings</span></span><br><span class=\"line\"><span class=\"comment\"># See: https://theme-next.js.org/docs/advanced-settings/vendors</span></span><br><span class=\"line\"><span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">vendors:</span></span><br><span class=\"line\">  <span class=\"comment\"># The CDN provider of NexT internal scripts.</span></span><br><span class=\"line\">  <span class=\"comment\"># Available values: local | jsdelivr | unpkg | cdnjs | custom</span></span><br><span class=\"line\">  <span class=\"comment\"># Warning: If you are using the latest master branch of NexT, please set `internal: local`</span></span><br><span class=\"line\">  <span class=\"attr\">internal:</span> <span class=\"string\">local</span></span><br><span class=\"line\">  <span class=\"comment\"># The default CDN provider of third-party plugins.</span></span><br><span class=\"line\">  <span class=\"comment\"># Available values: local | jsdelivr | unpkg | cdnjs | custom</span></span><br><span class=\"line\">  <span class=\"comment\"># Dependencies for `plugins: local`: https://github.com/next-theme/plugins</span></span><br><span class=\"line\">  <span class=\"attr\">plugins:</span> <span class=\"string\">cdnjs</span></span><br><span class=\"line\">  <span class=\"comment\"># Custom CDN URL</span></span><br><span class=\"line\">  <span class=\"comment\"># For example:</span></span><br><span class=\"line\">  <span class=\"comment\"># custom_cdn_url: https://cdn.jsdelivr.net/npm/$&#123;npm_name&#125;@$&#123;version&#125;/$&#123;minified&#125;</span></span><br><span class=\"line\">  <span class=\"comment\"># custom_cdn_url: https://cdnjs.cloudflare.com/ajax/libs/$&#123;cdnjs_name&#125;/$&#123;version&#125;/$&#123;cdnjs_file&#125;</span></span><br><span class=\"line\">  <span class=\"attr\">custom_cdn_url:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Assets</span></span><br><span class=\"line\"><span class=\"comment\"># Accelerate delivery of static files using a CDN</span></span><br><span class=\"line\"><span class=\"comment\"># The js option is only valid when vendors.internal is local.</span></span><br><span class=\"line\"><span class=\"attr\">css:</span> <span class=\"string\">css</span></span><br><span class=\"line\"><span class=\"attr\">js:</span> <span class=\"string\">js</span></span><br><span class=\"line\"><span class=\"attr\">images:</span> <span class=\"string\">images</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","categories":["Computer Science"],"tags":["Blog Itself"]},{"title":"Comparative Appreciation among In the Wave of Kanagawaoki, Impression Sunrise and the Ninth Level Wave","url":"/2022/05/30/Comparative-Appreciation-among-In-the-Wave-of-Kanagawaoki-Impression-Sunrise-and-the-Ninth-Level-Wave/","content":"<p>日本美术导览课程论文《『神奈川沖浪裏』与Impression, Soleil levant和Девятый вал的比较赏析》：</p>\n<p><a href=\"https://gsxgoldenlegendary.github.io/files/20220530课程论文：『神奈川沖浪裏』与Impression,%20Soleil%20levant和Девятый%20вал的比较赏析.pdf\">移动端点击链接下载查看</a></p>\n<span id=\"more\"></span>\n<div class=\"pdf-container\" data-target=\"https://gsxgoldenlegendary.github.io/files/20220530课程论文：『神奈川沖浪裏』与Impression,\" data-height=\"Soleil\"></div>\n","categories":["Sociology"],"tags":["Japan Culture"]},{"title":"Solutions to Computer Orgnization and Design Homework","url":"/2022/06/06/Solution-to-Computer-Orgnazation-and-Design-Homework/","content":"<p>USTC-CODH课堂练习、课后作业及思考题总结。思考题答案仅供参考。</p>\n<span id=\"more\"></span>\n<h1 id=\"课程介绍及背景知识\">课程介绍及背景知识</h1>\n<p>1、复习二进制、八进制、十进制、十六进制之间的互相转换。</p>\n<ul>\n<li>十进制转二进制：十进制数除2取余法，即十进制数除2，余数为权位上的数，得到的商值继续除，直到商为0为止。</li>\n<li>二进制转十进制：把二进制数按权展开、相加即得十进制数。</li>\n<li>八进制转二进制：八进制数通过除2取余法，得到二进制数，对每个八进制为3个二进制，不足时在最左边补零。</li>\n<li>二进制转八进制：3位二进制数按权展开相加得到1位八进制数。（注意事项，3位二进制转成八进制是从右到左开始转换，不足时补0）。</li>\n<li>十六进制转二进制：十六进制数通过除2取余法，得到二进制数，对每个十六进制为4个二进制，不足时在最左边补零。</li>\n<li>二进制转十六进制：与二进制转八进制方法近似，八进制是取三合一，十六进制是取四合一。（注意事项，4位二进制转成十六进制是从右到左开始转换，不足时补0）。</li>\n</ul>\n<p>2、复习逻辑门和移位等操作的物理结构与操作原理。</p>\n<p>逻辑门是在集成电路上的基本组件。简单的逻辑门可由晶体管组成。这些晶体管的组合可以使代表两种信号的高低电平在通过它们之后产生高电平或者低电平的信号。高、低电平可以分别代表逻辑上的“真”与“假”或二进制当中的1和0，从而实现逻辑运算。</p>\n<p>移位运算符在程序设计中，是位操作运算符的一种。移位运算符可以在二进制的基础上对数字进行平移。按照平移的方向和填充数字的规则分为三种：&lt;&lt;(左移)、&gt;&gt;(带符号右移)和&gt;&gt;&gt;(无符号右移)。</p>\n<p>3、了解CPU制作过程。</p>\n<p><a href=\"https://v.qq.com/x/page/w0177nsqogb.html\">AMD CPU生产过程 (中文字幕)_半导体行业观察</a></p>\n<p>4、图灵奖报告。</p>\n<p><a href=\"http://foodnwine.ifeng.com/c/8Ap36Kt2hxt\">图灵奖得主谈全球教育：高校需改变评价体系</a></p>\n<p>5、思考不同的编码格式之间的区别和联系。</p>\n<p>区别：三进制逻辑相比较现今的计算机使用二进制数字系统更接近人类大脑的思维方式：二进制计算规则非常简单但并不能完全表达人类想法。在一般情况下，命题不一定为真或假，还可能为未知。在三进制逻辑学中，符号1代表真；符号-1代表假；符号0代表未知。这种逻辑表达方式更符合计算机在人工智能方面的发展趋势。它为计算机的模糊运算和自主学习提供了可能，但电子工程师对这种非二进制的研究大都停留在表面或形式上，没有真正深入到实际应用中去。三进制代码的一个特点是对称，即相反数的一致性，因此它就和二进制代码不同，不存在无符号数的概念。这样，三进制计算机的架构也要简单、稳定、经济得多。其指令系统也更便于阅读，而且非常高效。随着技术的进步，真空管和晶体管等计算机元器件被速度更快、可靠性更好的铁氧体磁芯和半导体二极管取代。这些电子元器件组成了一个很好的可控电流变压器，这为三进制逻辑电路的实现提供了可能，因为电压存在着三种状态：正电压（1）、零电压（0）和负电压（-1）。三进制逻辑电路非但比二进制逻辑电路速度更快、可靠性更高，而且需要的设备和电能也更少。这些原因促成了三进制计算机Сетунь的诞生。</p>\n<p>联系：不同进制的计算机都是以逻辑电路为基础，是现代一种用于高速计算的电子计算机器，可以进行数值计算，又可以进行逻辑计算，还具有存储记忆功能。是能够按照程序运行，自动、高速处理海量数据的现代化智能电子设备。</p>\n<h1 id=\"计算机系统概论\">计算机系统概论</h1>\n<p>6、一微处理器，主频为20MHz ，请计算其时钟周期。若一个机器周期由2个时钟周期组成，平均每条指令用3个机器周期的时间(即“指令执行时间”)，请计算该处理器的平均运行速度MIPS。 <span class=\"math display\">\\[\n时钟周期=\\frac1{时钟频率}=\\frac1{20MHz}=5\\times10^{-8}s.\n\\]</span></p>\n<p><span class=\"math display\">\\[\n平均速度=\\frac1{指令执行时间}=\\frac1{时钟周期\\times2\\times3}=3.33MIPS.\n\\]</span></p>\n<p>7、某台计算机只有Load/Store 指令能对存储器进行读/写操作，其它指令只对寄存器进行操作。根据对某程序跟踪实验结果，已知每种指令所占的比例及CPI数如下：</p>\n<table>\n<thead>\n<tr class=\"header\">\n<th>指令类型</th>\n<th>指令所占比例</th>\n<th>CPI</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>算术逻辑指令</td>\n<td>43%</td>\n<td>1</td>\n</tr>\n<tr class=\"even\">\n<td>Load指令</td>\n<td>21%</td>\n<td>2</td>\n</tr>\n<tr class=\"odd\">\n<td>Store指令</td>\n<td>12%</td>\n<td>2</td>\n</tr>\n<tr class=\"even\">\n<td>转移指令</td>\n<td>24%</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<p>求上述情况下的平均CPI。 <span class=\"math display\">\\[\n\\overline {CPI}=43\\%\\times1+21\\%\\times2+12\\%\\times2+24\\%\\times2=1.57.\n\\]</span></p>\n<p>假设该程序由M条指令组成。算逻运算中25%的指令两个操作数中的一个已在寄存器中，另一个必须在算逻指令执行前用Load指令从存储器取到寄存器。因此有人建议增加另一种算逻指令，其特点是一个操作数取自寄存器，另一个操作数取自存储器，即寄存器——存储器类型，假设这种指令的CPI等于2。同时，转移指令的CPI变为3。求新指令系统的平均CPI。</p>\n<table>\n<thead>\n<tr class=\"header\">\n<th>指令类型</th>\n<th>指令所占比例</th>\n<th>CPI</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>算术逻辑指令</td>\n<td>32.25%</td>\n<td>1</td>\n</tr>\n<tr class=\"even\">\n<td>新算术逻辑指令</td>\n<td>10.75%</td>\n<td>2</td>\n</tr>\n<tr class=\"odd\">\n<td>Load指令</td>\n<td>10.25%</td>\n<td>2</td>\n</tr>\n<tr class=\"even\">\n<td>Store指令</td>\n<td>12%</td>\n<td>2</td>\n</tr>\n<tr class=\"odd\">\n<td>转移指令</td>\n<td>24%</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p><span class=\"math display\">\\[\n\\overline{CPI}=\\frac{32.25\\%\\times1+10.75\\%\\times2+10.35\\%\\times2+12\\%\\times2+24\\%\\times3}{32.25\\%+10.75\\%+10.25\\%+12\\%+24\\%}=1.91.\n\\]</span></p>\n<p>8、 假设在某程序的执行过程中，浮点操作时间占整个执行时间的10%，现希望对浮点操作加速。设对浮点操作的加速比 <span class=\"math inline\">\\(S_f\\)</span> 。请画出程序总的加速比<span class=\"math inline\">\\(S\\)</span>和<span class=\"math inline\">\\(S_f\\)</span>之间的关系曲线；请问程序的最大加速比可达多少？ <span class=\"math display\">\\[\nS=\\frac1{1-10\\%+\\frac{10\\%}{S_f}}.\n\\]</span> <img src=\"https://gsxgoldenlegendary.github.io/images/codh8.png\" /> <span class=\"math display\">\\[\nS_{\\max}=\\lim\\limits_{S_f\\to\\infty}S=\\frac{10}9.\n\\]</span> 9、求平方根和浮点乘是图形应用中两种常用的转换。假设浮点操作在某机器的一个基准程序中占总执行时间的50%，求平方根操作在总执行时间的20%，现通过两种方法加速操作：</p>\n<p>①增加专门的软件加速库处理求平方根，使其执行速度为原来的10倍；</p>\n<p>②通过调整流水线把浮点速度提高为原来的1.6倍。</p>\n<p>问：分别采用两种方法增强后此基准程序加速比各是多少？</p>\n<p><span class=\"math display\">\\[\nS_1=\\frac1{1-0.2+\\frac{0.2}{10}}=1.22.\n\\]</span></p>\n<p><span class=\"math display\">\\[\nS_2=\\frac1{1-0.5+\\frac{0.5}{1.6}}=1.23.\n\\]</span></p>\n<p>10、 求平方根和浮点乘是图形应用中两种常用的转换，假设求平方根操作在某机器的一个基准程序中占总执行时间的20%，浮点乘操作在该程序中占总执行时间50%，现通过两种方法加速两操作：</p>\n<p>①增加专门的软件函数加速库求平方根，使其执行速度为原来的10倍；</p>\n<p>②通过调整流水线把浮点乘速度提高 为原来的1.6倍。</p>\n<p>问：同时采用两种方法增强后此基准程序加速比是多少？ <span class=\"math display\">\\[\nS=\\frac1{1-0.5-0.2+\\frac{0.5}{1.6}+\\frac{0.2}{10}}=1.58.\n\\]</span></p>\n<p>11、求平方根、浮点乘和定点乘是图形应用中三种常用的转换。假设浮点操作在某机器的一个基准程序中占总执行时间的30%，求平方根操作在总执行时间的20%，定点乘15%。现通过三种方法加速操作：</p>\n<p>①增加专门的硬件处理求平方根，使其执行速度为原来的10倍；</p>\n<p>②通过调整流水线把浮点速度提高为原来的1.6倍。</p>\n<p>③通过调整流水线把定点速度提高为原来的3倍。</p>\n<p>问：分别采用三种方法增强后此基准程序加速比各是多少？同时采用三种方法增强后此基准程序加速比各是多少？ <span class=\"math display\">\\[\nS_1=\\frac1{1-0.2+\\frac{0.2}{10}}=1.22.\n\\]</span></p>\n<p><span class=\"math display\">\\[\nS_2=\\frac1{1-0.3+\\frac{0.3}{1.6}}=1.13.\n\\]</span></p>\n<p><span class=\"math display\">\\[\nS_2=\\frac1{1-0.15+\\frac{0.15}{3}}=1.11.\n\\]</span></p>\n<p><span class=\"math display\">\\[\nS=\\frac1{1-0.2-0.3-0.15+\\frac{0.2}{10}+\\frac{0.3}{1.6}+\\frac{0.15}{3}}=1.65.\n\\]</span></p>\n<p>12、假设晶圆的成品率为<span class=\"math inline\">\\(100\\%\\)</span>，晶片为长为<span class=\"math inline\">\\(1.5cm\\)</span>的正方形。</p>\n<p>（1）直径为<span class=\"math inline\">\\(30cm\\)</span>的晶圆上有多少晶片？ <span class=\"math display\">\\[\nn=\\frac{\\pi\\cdot(15cm)^2}{(1.5cm)^2}-\\frac{\\pi\\cdot30cm}{\\sqrt{2\\cdot(1.5cm)^2}}=296.\n\\]</span> （2）假设单位面积的疵点密度为<span class=\"math inline\">\\(0.4/cm^2\\)</span> ，且<span class=\"math inline\">\\(\\alpha=4.0\\)</span>，求晶片的成品率？ <span class=\"math display\">\\[\n\\beta=100\\%\\cdot(1+\\frac{0.4/cm^2\\cdot(1.5cm)^2}{4.0})^{-4.0}=0.44.\n\\]</span> 13、COD RISC-V 1.12 Section 1.10 cites as a pitfall the utilization of a subset of the performance equation as a performance metric. To illustrate this, consider the following two processors. P1 has a clock rate of 4 GHz, average CPI of 0.9, and requires the execution of 5.0E9 instructions. P2 has a clock rate of 3 GHz, an average CPI of 0.75, and requires the execution of 1.0E9 instructions.</p>\n<p>1.12.1 One usual fallacy is to consider the computer with the largest clock rate as having the highest performance. Check if this is true for P1 and P2.s <span class=\"math display\">\\[\nT_{CPU}=CPI\\times IC\\times T_{CLK}.\n\\]</span></p>\n<p><span class=\"math display\">\\[\nT(P1)=\\frac{0.9\\times5.0\\times10^9}{4\\times10^{9}Hz}=1.125s\n\\]</span></p>\n<p><span class=\"math display\">\\[\nT(P2)=\\frac{0.75\\times1.0\\times10^9}{3\\times10^{9}Hz}=0.25s\n\\]</span></p>\n<p>clock rate(P1) &gt; clock rate(P2), performance(P1) &lt; performance(P2).</p>\n<p>1.12.2 Another fallacy is to consider that the processor executing the largest number of instructions will need a larger CPU time. Considering that processor P1 is executing a sequence of 1.0E9 instructions and that the CPI of processors P1 and P2 do not change, determine the number of instructions that P2 can execute in the same time that P1 needs to execute 1.0E9 instructions. <span class=\"math display\">\\[\nIC&#39;=\\frac{\\frac{1.125}{5}s\\times 3\\times10^9Hz}{0.75}=9\\times10^8.\n\\]</span></p>\n<p>1.12.3 A common fallacy is to use MIPS (millions of instructions per second) to compare the performance of two different processors, and consider that the processor with the largest MIPS has the largest performance. Check if this is true for P1 and P2. <span class=\"math display\">\\[\nMIPS(P1)=\\frac{4\\times10^9}{10^6\\times 0.9}=4.44\\times10^3.\n\\]</span></p>\n<p><span class=\"math display\">\\[\nMIPS(P2)=\\frac{3\\times10^9}{10^6\\times 0.75}=4\\times10^3.\n\\]</span></p>\n<p>MIPS(P1) &gt; MIPS(P2), performance(P1) &lt; performance(P2).</p>\n<p>1.12.4 Another common performance figure is MFLOPS (millions of floating-point operations per second), defined as <span class=\"math display\">\\[\nMFLOPS=\\frac{No.FPoperations}{executiontime\\times1E6},\n\\]</span> but this figure has the same problems as MIPS. Assume that 40% of the instructions executed on both P1 and P2 are floating-point instructions. Find the MFLOPS figures for the processors. <span class=\"math display\">\\[\nMFLOPS(P1)=\\frac{0.4\\times5\\times10^9}{1.125s\\times10^{-6}}=1.78\\times10^3.\n\\]</span></p>\n<p><span class=\"math display\">\\[\nMFLOPS(P2)=\\frac{0.4\\times1\\times10^9}{0.25s\\times10^{-6}}=1.6\\times10^3.\n\\]</span></p>\n<p>MFLOPS(P1) &gt; MFLOPS(P2), performance(P1) &lt; performance(P2).</p>\n<p>14、冯机架构中指令和数据都存储于存储器中，系统执行时如何区分？</p>\n<p>计算机区分指令和数据有以下2种方法：</p>\n<ul>\n<li><p>通过不同的时间段来区分指令和数据，即在取指令阶段（或取指微程序）取出的为指令，在执行指令阶段（或相应微程序）取出的即为数据。</p></li>\n<li><p>通过地址来源区分，由PC提供存储单元地址的取出的是指令，由指令地址码部分提供存储单元地址的取出的是操作数。</p></li>\n</ul>\n<p>15、“计算机组成”与“计算机系统结构”的关系？</p>\n<ul>\n<li>计算机体系结构\n<ul>\n<li>程序员可见的机器属性，即概念性的结构与功能特性\n<ul>\n<li>程序员特指机器语言/汇编语言程序员</li>\n<li>机器属性包括指令集、数据类型、存储器寻址技术、I/O机制等</li>\n</ul></li>\n</ul></li>\n<li>计算机组成\n<ul>\n<li>计算机体系结构的逻辑实现\n<ul>\n<li>具有对程序员透明的实现细节</li>\n</ul></li>\n<li>包含实际机器的数据流和控制流的组成和逻辑设计等</li>\n<li>着眼于物理机器内部各事件的排序方式与控制方式，各部件的功能以及相互间的联系</li>\n</ul></li>\n</ul>\n<p>16、比较Amdahl’s Law和古斯塔夫森定律 。</p>\n<ul>\n<li>阿姆达尔定律定义了串行系统并行化后加速比的计算公式与理论上限。如果仅仅对计算机中的一部分做性能改进，则改进越多，系统获得的效果越小。如果只针对整个任务的一部分进行优化，那么所获得的加速比不大于<span class=\"math inline\">\\(\\frac1{(1- f_e )}\\)</span>。</li>\n<li>古斯塔夫森定律是对阿姆达尔定律的补充，说明处理器个数，串行比例和加速比的关系。当问题的规模增大时，程序的串行部分保持不变。当增加处理器的数量时，每个处理器执行的任务仍然相同。加速比<span class=\"math inline\">\\(S(P)=P-\\alpha(P-1)\\)</span>，<span class=\"math inline\">\\(P\\)</span>为处理器数量，<span class=\"math inline\">\\(\\alpha\\)</span>是并行处理器的非并行部分。</li>\n</ul>\n<h1 id=\"指令系统\">指令系统</h1>\n<p>17、唐朔飞 7.4 假设指令字长为16位，操作数的地址码为6位，指令分零地址、一地址、二地址三种格式。</p>\n<p>（1）设操作码固定，若零地址指令有P种，一地址指令有Q种，问二地址指令最多有几种？ <span class=\"math display\">\\[\n2^{16-6*2}-P-Q.\n\\]</span> （2）采用扩展操作码技术，若二地址指令有X种，零地址指令最多有Y种，则一地址指令有几种？ <span class=\"math display\">\\[\n(2^{16-6*2}-X)*2^6-\\frac Y{2^6}.\n\\]</span> 18、 写出下面函数的汇编代码</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">cswap</span><span class=\"params\">(<span class=\"type\">int</span> v[], <span class=\"type\">int</span> k, <span class=\"type\">int</span> l)</span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> temp;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(v[k]!=v[l])&#123;</span><br><span class=\"line\">    \ttemp=v[k];</span><br><span class=\"line\">    \tv[k]=v[l];</span><br><span class=\"line\">    \tv[l]=temp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">cswap(int*, int, int):</span><br><span class=\"line\">        addi    sp,sp,-48</span><br><span class=\"line\">        sd      s0,40(sp)</span><br><span class=\"line\">        addi    s0,sp,48</span><br><span class=\"line\">        sd      a0,-40(s0)</span><br><span class=\"line\">        mv      a5,a1</span><br><span class=\"line\">        mv      a4,a2</span><br><span class=\"line\">        sw      a5,-44(s0)</span><br><span class=\"line\">        mv      a5,a4</span><br><span class=\"line\">        sw      a5,-48(s0)</span><br><span class=\"line\">        lw      a5,-44(s0)</span><br><span class=\"line\">        slli    a5,a5,2</span><br><span class=\"line\">        ld      a4,-40(s0)</span><br><span class=\"line\">        add     a5,a4,a5</span><br><span class=\"line\">        lw      a3,0(a5)</span><br><span class=\"line\">        lw      a5,-48(s0)</span><br><span class=\"line\">        slli    a5,a5,2</span><br><span class=\"line\">        ld      a4,-40(s0)</span><br><span class=\"line\">        add     a5,a4,a5</span><br><span class=\"line\">        lw      a5,0(a5)</span><br><span class=\"line\">        mv      a4,a3</span><br><span class=\"line\">        beq     a4,a5,.L3</span><br><span class=\"line\">        lw      a5,-44(s0)</span><br><span class=\"line\">        slli    a5,a5,2</span><br><span class=\"line\">        ld      a4,-40(s0)</span><br><span class=\"line\">        add     a5,a4,a5</span><br><span class=\"line\">        lw      a5,0(a5)</span><br><span class=\"line\">        sw      a5,-20(s0)</span><br><span class=\"line\">        lw      a5,-48(s0)</span><br><span class=\"line\">        slli    a5,a5,2</span><br><span class=\"line\">        ld      a4,-40(s0)</span><br><span class=\"line\">        add     a4,a4,a5</span><br><span class=\"line\">        lw      a5,-44(s0)</span><br><span class=\"line\">        slli    a5,a5,2</span><br><span class=\"line\">        ld      a3,-40(s0)</span><br><span class=\"line\">        add     a5,a3,a5</span><br><span class=\"line\">        lw      a4,0(a4)</span><br><span class=\"line\">        sw      a4,0(a5)</span><br><span class=\"line\">        lw      a5,-48(s0)</span><br><span class=\"line\">        slli    a5,a5,2</span><br><span class=\"line\">        ld      a4,-40(s0)</span><br><span class=\"line\">        add     a5,a4,a5</span><br><span class=\"line\">        lw      a4,-20(s0)</span><br><span class=\"line\">        sw      a4,0(a5)</span><br><span class=\"line\">.L3:</span><br><span class=\"line\">        nop</span><br><span class=\"line\">        ld      s0,40(sp)</span><br><span class=\"line\">        addi    sp,sp,48</span><br><span class=\"line\">        jr      ra</span><br></pre></td></tr></table></figure>\n<p>19、COD RISC-V 2.9 For each RISC-V instruction in</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">addi x30, x10, 8</span><br><span class=\"line\">addi x31, x10, 0</span><br><span class=\"line\">sd x31, 0(x30)</span><br><span class=\"line\">ld x30, 0(x30)</span><br><span class=\"line\">add x5, x30, x31</span><br></pre></td></tr></table></figure>\n<p>, show the value of the opcode (op), source register (rs1), and destination register (rd) fields. For the I-type instructions, show the value of the immediate field, and for the R-type instructions, show the value of the second source register (rs2). For non U- and UJ-type instructions, show the funct3 field, and for R-type and S-type instructions, also show the funct7 field.</p>\n<table>\n<thead>\n<tr class=\"header\">\n<th style=\"text-align: center;\"></th>\n<th style=\"text-align: center;\">type</th>\n<th style=\"text-align: center;\">opcode, funct7, funct3</th>\n<th style=\"text-align: center;\">rs1</th>\n<th style=\"text-align: center;\">rs2</th>\n<th style=\"text-align: center;\">rd</th>\n<th style=\"text-align: center;\">imm</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td style=\"text-align: center;\">1</td>\n<td style=\"text-align: center;\">I-</td>\n<td style=\"text-align: center;\">0x13, 0x0,</td>\n<td style=\"text-align: center;\">10</td>\n<td style=\"text-align: center;\"></td>\n<td style=\"text-align: center;\">30</td>\n<td style=\"text-align: center;\">8</td>\n</tr>\n<tr class=\"even\">\n<td style=\"text-align: center;\">2</td>\n<td style=\"text-align: center;\">I-</td>\n<td style=\"text-align: center;\">0x13, 0x0,</td>\n<td style=\"text-align: center;\">10</td>\n<td style=\"text-align: center;\"></td>\n<td style=\"text-align: center;\">31</td>\n<td style=\"text-align: center;\">0</td>\n</tr>\n<tr class=\"odd\">\n<td style=\"text-align: center;\">3</td>\n<td style=\"text-align: center;\">S-</td>\n<td style=\"text-align: center;\">0x23, 0x3,</td>\n<td style=\"text-align: center;\">31</td>\n<td style=\"text-align: center;\">30</td>\n<td style=\"text-align: center;\"></td>\n<td style=\"text-align: center;\">0</td>\n</tr>\n<tr class=\"even\">\n<td style=\"text-align: center;\">4</td>\n<td style=\"text-align: center;\">I-</td>\n<td style=\"text-align: center;\">0x3, 0x3,</td>\n<td style=\"text-align: center;\">30</td>\n<td style=\"text-align: center;\"></td>\n<td style=\"text-align: center;\">30</td>\n<td style=\"text-align: center;\">0</td>\n</tr>\n<tr class=\"odd\">\n<td style=\"text-align: center;\">5</td>\n<td style=\"text-align: center;\">R-</td>\n<td style=\"text-align: center;\">0x33, 0x0, 0x0</td>\n<td style=\"text-align: center;\">30</td>\n<td style=\"text-align: center;\">31</td>\n<td style=\"text-align: center;\">5</td>\n<td style=\"text-align: center;\"></td>\n</tr>\n</tbody>\n</table>\n<p>20、COD RISC-V 2.24 Consider the following RISC-V loop:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">LOOP:</span><br><span class=\"line\">beq x6, x0, DONE</span><br><span class=\"line\">addi x6, x6, -1</span><br><span class=\"line\">addi x5, x5, 2</span><br><span class=\"line\">jal x0, LOOP</span><br><span class=\"line\">DONE:</span><br></pre></td></tr></table></figure>\n<p>2.24.1 Assume that the register <code>x6</code> is initialized to the value 10. What is the final value in register <code>x5</code> assuming the <code>x5</code> is initially zero?</p>\n<p>Th e final value of <code>x5</code> is <code>20</code> .</p>\n<p>2.24.2 For the loop above, write the equivalent C code. Assume that the registers <code>x5</code> and <code>x6</code> are integers acc and i , respectively.</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">acc=<span class=\"number\">0</span>;</span><br><span class=\"line\">i=<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span>(i!=<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">    i-=<span class=\"number\">1</span>;</span><br><span class=\"line\">    acc+=<span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>2.24.3 For the loop written in RISC-V assembly above, assume that the register <code>x6</code> is initialized to the value N. How many RISC-V instructions are executed?</p>\n<p><code>4N+1</code>.</p>\n<p>2.24.4 For the loop written in RISC-V assembly above, replace the instruction “ <code>beq x6, x0, DONE</code> ” with the instruction “ <code>blt x6, x0, DONE</code> ” and write the equivalent C code.</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">acc=<span class=\"number\">0</span>;</span><br><span class=\"line\">i=<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span>(i&gt;=<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">    i-=<span class=\"number\">1</span>;</span><br><span class=\"line\">    acc+=<span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>21、COD RISC-V 2.35 Consider the following code:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">lb x6, 0(x7)</span><br><span class=\"line\">sd x6, 8(x7)</span><br></pre></td></tr></table></figure>\n<p>Assume that the register <code>x7</code> contains the address <code>0×10000000</code> and the data at address is <code>0×1122334455667788</code> .</p>\n<p>2.35.1 What value is stored in <code>0×10000008</code> on a big-endian machine?</p>\n<p><code>0x11</code>.</p>\n<p>2.35.2 What value is stored in <code>0×10000008</code> on a little-endian machine?</p>\n<p><code>0x88</code>.</p>\n<p>22、COD RISC-V 2.40 Assume that for a given program 70% of the executed instructions are arithmetic, 10% are load/store, and 20% are branch.</p>\n<p>2.40.1 Given this instruction mix and the assumption that an arithmetic instruction requires two cycles, a load/store instruction takes six cycles, and a branch instruction takes three cycles, find the average CPI. <span class=\"math display\">\\[\n\\overline{CPI}=0.7*2+0.1*6+0.2*3=2.6.\n\\]</span> 2.40.2 For a 25% improvement in performance, how many cycles, on average, may an arithmetic instruction take if load/store and branch instructions are not improved at all? <span class=\"math display\">\\[\n0.7x+0.1*6+0.2*3=2.6*0.75\\Rightarrow x=1.07.\n\\]</span> 2.40.3 For a 50% improvement in performance, how many cycles, on average, may an arithmetic instruction take if load/store and branch instructions are not improved at all? <span class=\"math display\">\\[\n0.7x+0.1*6+0.2*3=2.6*0.5\\Rightarrow x=0.143.\n\\]</span> 23、CPU的ISA要定义哪些内容？</p>\n<p>数据类型及格式，指令格式，寻址方式和可访问地址空间的大小，程序可访问的寄存器个数、位数和编号，控制寄存器的定义，I/O空间的编制方式，中断结构，机器工作状态的定义和切换，输入输出结构和数据传送方式，存储保护方式等。</p>\n<p>24、8086为什么要采用段式内存管理模式？</p>\n<p>便于存储器的管理，使得可以用16位寄存器来寻址20位的内存空间。</p>\n<p>25、Windows系统中可执行程序的格式？</p>\n<p>26、调研现在常用的处理器是大尾端还是小尾端，如x86、ARM、MIPS、PowerPC等？</p>\n<p>x86：小尾端；</p>\n<p>ARM：默认小尾端，可以通过寄存器置位进入大尾端的工作模式；</p>\n<p>MIPS：可以通过寄存器置位进入两个尾端的工作模式；</p>\n<p>PowerPC：大尾端。</p>\n<p>27、分析MIPS、x86、RISC-V指令集架构、比较相同不同点。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210314160859450.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1NjA4Mjc3,size_16,color_FFFFFF,t_70\" /></p>\n<p>28、调研国内外典型的RISC-V处理器核、比较相同不同点。</p>\n<p><a href=\"https://baijiahao.baidu.com/s?id=1664724825695807851\">简评几款开源 RISC-V 处理器</a></p>\n<p>29、扩展阅读Rocket及BOOM的资料。</p>\n<p><a href=\"https://www2.eecs.berkeley.edu/Pubs/TechRpts/2016/EECS-2016-17.pdf\">Rocket</a>：标量；机器字长64 位；5 级pipeline，采用单发射；支持虚拟内存，可以兼容的移植开源操作系统；分支推断缓存（Branch Prediction Buff）、分支历史表（Branch History Table）、返回栈（Return Address Stack）；Rocket Custom Coprocessor Interface (RoCC)。</p>\n<p><a href=\"https://docs.boom-core.org/en/latest/\">BOOM（Berkeley Out-of-Order Machine）</a>：超标量；机器字长为64 位，支持指令集为RV64G；6 级流水线，乱序发射；</p>\n<h1 id=\"程序的编译过程\">程序的编译过程</h1>\n<p>30、以GCC为例，代码是如何转换为指令的。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-d6bfa8042150d2becd581266c907be17_r.jpg\" /></p>\n<p>31、GCC的不同优化之间的区别在哪些方面？</p>\n<ul>\n<li>O0选项不进行任何优化，在这种情况下，编译器尽量的缩短编译消耗（时间，空间），此时，debug会产出和程序预期的结果。当程序运行被断点打断，此时程序内的各种声明是独立的，我们可以任意的给变量赋值，或者在函数体内把程序计数器指到其他语句,以及从源程序中 精确地获取你期待的结果。</li>\n<li>O1优化会消耗少多的编译时间，它主要对代码的分支，常量以及表达式等进行优化。</li>\n<li>O2会尝试更多的寄存器级的优化以及指令级的优化，它会在编译期间占用更多的内存和编译时间。</li>\n<li>O3在O2的基础上进行更多的优化，例如使用伪寄存器网络，普通函数的内联，以及针对循环的更多优化。</li>\n<li>Os主要是对代码大小的优化，我们基本不用做更多的关心。 通常各种优化都会打乱程序的结构，让调试工作变得无从着手。并且会打乱执行顺序，依赖内存操作顺序的程序需要做相关处理才能确保程序的正确性。</li>\n</ul>\n<p>\"The more we study, the more we discoverour ignorance.\" by Percy Bysshe Shelley.</p>\n<h1 id=\"cpu设计-单周期多周期\">CPU设计-单周期、多周期</h1>\n<p>32、设程序中<code>load</code>有<code>24％</code>，<code>store</code>有<code>12％</code>，<code>R-type</code>有<code>44％</code>，<code>beq</code>有<code>18％</code>，<code>jump</code>有<code>2％</code>。假设<code>load</code>，<code>store</code>，<code>R</code>，<code>beq</code>，<code>jump</code>指令的时间分别是<code>8,7,6,5,2ns</code>（如下表）。如果时钟周期固定，单周期的时钟为<code>8ns</code>；如果时钟周期不定长，单周期的时钟可以是<code>2ns~8ns</code>。试比较时钟定长单周期实现和不定长单周期实现的性能。</p>\n<table>\n<thead>\n<tr class=\"header\">\n<th style=\"text-align: center;\">指令</th>\n<th style=\"text-align: center;\">inst MEM</th>\n<th style=\"text-align: center;\">Reg Read</th>\n<th style=\"text-align: center;\">ALU</th>\n<th style=\"text-align: center;\">Data MEM</th>\n<th style=\"text-align: center;\">Reg Write</th>\n<th style=\"text-align: center;\">Total</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td style=\"text-align: center;\"><code>R-Type</code></td>\n<td style=\"text-align: center;\">2</td>\n<td style=\"text-align: center;\">1</td>\n<td style=\"text-align: center;\">2</td>\n<td style=\"text-align: center;\"></td>\n<td style=\"text-align: center;\">1</td>\n<td style=\"text-align: center;\">6ns</td>\n</tr>\n<tr class=\"even\">\n<td style=\"text-align: center;\"><code>lw</code></td>\n<td style=\"text-align: center;\">2</td>\n<td style=\"text-align: center;\">1</td>\n<td style=\"text-align: center;\">2</td>\n<td style=\"text-align: center;\">2</td>\n<td style=\"text-align: center;\">1</td>\n<td style=\"text-align: center;\">8ns</td>\n</tr>\n<tr class=\"odd\">\n<td style=\"text-align: center;\"><code>sw</code></td>\n<td style=\"text-align: center;\">2</td>\n<td style=\"text-align: center;\">1</td>\n<td style=\"text-align: center;\">2</td>\n<td style=\"text-align: center;\">2</td>\n<td style=\"text-align: center;\"></td>\n<td style=\"text-align: center;\">7ns</td>\n</tr>\n<tr class=\"even\">\n<td style=\"text-align: center;\"><code>beq</code></td>\n<td style=\"text-align: center;\">2</td>\n<td style=\"text-align: center;\">1</td>\n<td style=\"text-align: center;\">2</td>\n<td style=\"text-align: center;\"></td>\n<td style=\"text-align: center;\"></td>\n<td style=\"text-align: center;\">5ns</td>\n</tr>\n<tr class=\"odd\">\n<td style=\"text-align: center;\"><code>jal</code></td>\n<td style=\"text-align: center;\">2</td>\n<td style=\"text-align: center;\"></td>\n<td style=\"text-align: center;\"></td>\n<td style=\"text-align: center;\"></td>\n<td style=\"text-align: center;\"></td>\n<td style=\"text-align: center;\">2ns</td>\n</tr>\n</tbody>\n</table>\n<p>定长单周期：平均指令执行时间：<code>8ns</code>。</p>\n<p>不定长单周期：平均指令执行时间<code>＝8×24％＋7×12％＋6×44％＋5×18％＋2×2％＝6.3ns</code>。</p>\n<p>因此，变长单周期实现较定长单周期实现快<span class=\"math inline\">\\(\\frac8{6.3}=1.27\\)</span>倍。</p>\n<p>33、为何单周期不需要PC写控制？</p>\n<p>单周期的PC在更新前的值已经通过组合逻辑选择完毕。</p>\n<p>34、分析以下两条指令的数据通路和每个周期的控制信号，画出状态机的转换。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Load x1,100(x2);</span><br><span class=\"line\">Addi x1, x2, 100;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://gsxgoldenlegendary.github.io/images/codh34.png\" alt=\"The finite-state diagram for multicycle control\" /> <span class=\"math display\">\\[\nstart\\to0\\to1\\to2\\to3\\to4\\to0\\to1\\to6\\to7\\to0.\n\\]</span> 35、找找两张图的区别。</p>\n<figure>\n<img src=\"https://gsxgoldenlegendary.github.io/images/codh35-0.png\" alt=\"单周期RISC-V处理器数据通路\" /><figcaption>单周期RISC-V处理器数据通路</figcaption>\n</figure>\n<figure>\n<img src=\"https://gsxgoldenlegendary.github.io/images/codh35-1.png\" alt=\"多周期RISC-V处理器数据通路\" /><figcaption>多周期RISC-V处理器数据通路</figcaption>\n</figure>\n<p>一、数据通路的区别</p>\n<ol type=\"1\">\n<li>存储器：单周期数据与地址分开，多周期数据与地址在一起。</li>\n<li>寄存器：单周期读出后直接进入ALU，多周期读出后存入段间寄存器。</li>\n<li>ALU：单周期有两个ALU，分别计算运算指令与访存指令，多周期只有一个ALU，负责所有的算术运算。</li>\n<li>MUX：单周期的MUX比较少，多周期由于要多次访存，需要更多的选择，MUL更多。</li>\n</ol>\n<p>二、控制信号的区别</p>\n<ol type=\"1\">\n<li>寄存器文件写使能：二者类似。</li>\n<li>存储器读写使能：均需要写使能，多周期还需要读使能。</li>\n<li>ALU控制：二者类似。</li>\n<li>PC/IR 寄存器写：单周期不需要控制信号，多周期需要单独的控制信号。</li>\n<li>多路选择器：多周期的MUX的控制信号包含单周期的，还增加了寄存器文件写数据及第一个ALU操作数的选择信号。</li>\n</ol>\n<p>36、如何设计一款单周期/多周期CPU？</p>\n<p>确定指令，实现操作，数据通路，运行部件，RTL实现，控制信号，综合仿真，开发板调试，性能评测，迭代。</p>\n<p>37、有一段程序共有100条指令，其中<code>Load</code>指令为<code>20%</code>，<code>Store</code>指令为<code>20%</code>，<code>R</code>类的ALU指令为<code>40%</code>，<code>Beq</code>指令为<code>10%</code>，<code>JUMP</code>指令为<code>10%</code>。这段程序分别在单周期和多周期的CPU上实现（多周期参考RISC-V的CPI），其中单周期CPU时钟为<code>200MHz</code>，多周期CPU时钟为<code>800MHz</code>（考虑到存储器、ALU实现复杂），问在何种CPU上运行时快，快多少？</p>\n<p>定长单周期所需时间<span class=\"math inline\">\\(\\frac{100}{200MHz}=5\\times10^{-7}s\\)</span>。</p>\n<p>多周期所需时间 <span class=\"math display\">\\[\n\\frac{20*5+20*4+20*4+10*3+10*3}{800MHz}=4.75\\times10^{-7}s.\n\\]</span> 多周期快，快<span class=\"math inline\">\\(5\\%\\)</span>。</p>\n<p>38、COD RISC-V 4.1 Consider the following instruction:</p>\n<p>Instruction: <code>and rd, rs1, rs2</code>.</p>\n<p>Interpretation: <code>Reg[rd] = Reg[rs1] AND Reg[rs2]</code>.</p>\n<figure>\n<img src=\"https://gsxgoldenlegendary.github.io/images/codh35-0.png\" alt=\"The datapath for the memory instructions and the R-type instructions.\" /><figcaption>The datapath for the memory instructions and the R-type instructions.</figcaption>\n</figure>\n<p>4.1.1 What are the values of control signals generated by the control in Figure 4.10 for this instruction?</p>\n<table>\n<thead>\n<tr class=\"header\">\n<th style=\"text-align: center;\">RegWrite</th>\n<th style=\"text-align: center;\">ALUSrc</th>\n<th style=\"text-align: center;\">ALUoperations</th>\n<th style=\"text-align: center;\">MemWrite</th>\n<th style=\"text-align: center;\">MemRead</th>\n<th style=\"text-align: center;\">MemToReg</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td style=\"text-align: center;\">true</td>\n<td style=\"text-align: center;\">0</td>\n<td style=\"text-align: center;\">\"and\"</td>\n<td style=\"text-align: center;\">false</td>\n<td style=\"text-align: center;\">false</td>\n<td style=\"text-align: center;\">0</td>\n</tr>\n</tbody>\n</table>\n<p>4.1.2 Which resources (blocks) perform a useful function for this instruction?</p>\n<p>Registers, ALUsrc mux, ALU, and the MemToReg mux.</p>\n<p>4.1.3 Which resources (blocks) produce no output for this instruction? Which resources produce output that is not used?</p>\n<p>All blocks produce some output. The outputs of DataMemory and Imm Gen are not used.</p>\n<p>39、COD RISC-V 4.7 Problems in this exercise assume that the logic blocks used to implement a processor’s datapath have the following latencies:</p>\n<table style=\"width:100%;\">\n<colgroup>\n<col style=\"width: 11%\" />\n<col style=\"width: 13%\" />\n<col style=\"width: 4%\" />\n<col style=\"width: 5%\" />\n<col style=\"width: 5%\" />\n<col style=\"width: 11%\" />\n<col style=\"width: 13%\" />\n<col style=\"width: 14%\" />\n<col style=\"width: 11%\" />\n<col style=\"width: 7%\" />\n</colgroup>\n<thead>\n<tr class=\"header\">\n<th>I-Mem/D-Mem</th>\n<th>Register File</th>\n<th>Mux</th>\n<th>ALU</th>\n<th>Adder</th>\n<th>Single gate</th>\n<th>Register Read</th>\n<th>Register Setup</th>\n<th>Sign extend</th>\n<th>Control</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>250ps</td>\n<td>150ps</td>\n<td>25ps</td>\n<td>200ps</td>\n<td>150ps</td>\n<td>5ps</td>\n<td>30ps</td>\n<td>20ps</td>\n<td>50ps</td>\n<td>50ps</td>\n</tr>\n</tbody>\n</table>\n<p>\"Register read\" is the time needed after the rising clock edge for the new register value to appear on the output. This value applies to the PC only. “Register setup” is the amount of time a register’s data input must be stable before the rising edge of the clock. This value applies to both the PC and Register File.</p>\n<p>4.7.1 What is the latency of an R-type instruction (i.e., how long must the clock period be to ensure that this instruction works correctly)? <span class=\"math display\">\\[\n30 + 250 + 150 + 25 + 200 + 25 + 20 = 700ps.\n\\]</span> 4.7.2 What is the latency of <code>ld</code>? (Check your answer carefully. Many students place extra muxes on the critical path.) <span class=\"math display\">\\[\n30 + 250 + 150 + 25 + 200 + 250 + 25 + 20 = 950 ps.\n\\]</span> 4.7.3 What is the latency of <code>sd</code>? (Check your answer carefully. Many students place extra muxes on the critical path.) <span class=\"math display\">\\[\n30 + 250 + 150 + 200 + 25 + 250 = 905ps.\n\\]</span> 4.7.4 What is the latency of <code>beq</code>? <span class=\"math display\">\\[\n30 + 250 + 150 + 25 + 200 + 5 + 25 + 20 = 705.\n\\]</span> 4.7.5 What is the latency of an I-type instruction? <span class=\"math display\">\\[\n30 + 250 + 150 + 25 + 200 + 25 + 20 = 700ps.\n\\]</span> 4.7.6 What is the minimum clock period for this CPU?</p>\n<p><code>925ps</code>.</p>\n<p>40、单周期处理器在一个周期内完成指令所有的微操作，思考：寻址方式如何实现？周期宽度如何确定？能否在一个clk内完成？能否将两个adder合二为一？能否将两个memory合二为一？</p>\n<p>指令立即寻址，数据偏移寻址或立即寻址；周期宽度以总延迟确定；不能，因为写入数据存储器或寄存器堆的数据需要下一个时钟周期才能写入；不能，因为二者可能同时使用；不能，因为同时读写会造成冲突。</p>\n<p>41、根据图4-22 ，画出主控制器的PLA实现图。 <img src=\"https://gsxgoldenlegendary.github.io/images/codh41-0.png\" alt=\"The control function for the simple single-cycle implementation is completely specified by this truth table.\" /></p>\n<figure>\n<img src=\"https://gsxgoldenlegendary.github.io/images/codh41-1.png\" alt=\"This PLA implements the control function logic for the multicycle implementation.\" /><figcaption>This PLA implements the control function logic for the multicycle implementation.</figcaption>\n</figure>\n<p>42、每一类指令的指令周期各含多少个时钟周期？</p>\n<table>\n<thead>\n<tr class=\"header\">\n<th style=\"text-align: center;\">R</th>\n<th style=\"text-align: center;\">I</th>\n<th style=\"text-align: center;\">S</th>\n<th style=\"text-align: center;\">SB</th>\n<th style=\"text-align: center;\">UJ</th>\n<th style=\"text-align: center;\">U</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td style=\"text-align: center;\">4</td>\n<td style=\"text-align: center;\">5</td>\n<td style=\"text-align: center;\">4</td>\n<td style=\"text-align: center;\">3</td>\n<td style=\"text-align: center;\">3</td>\n<td style=\"text-align: center;\">4</td>\n</tr>\n</tbody>\n</table>\n<p>43、分别分析R/I/S/B-type指令的多周期设计方案中每个周期所用到的功能部件。</p>\n<table>\n<thead>\n<tr class=\"header\">\n<th></th>\n<th>R</th>\n<th>I</th>\n<th>S</th>\n<th>B</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>IF</td>\n<td>PC, Mem</td>\n<td>PC,Mem</td>\n<td>PC,Mem</td>\n<td>PC,Mem</td>\n</tr>\n<tr class=\"even\">\n<td>ID</td>\n<td>IR, Reg, SE</td>\n<td>IR, Reg, SE</td>\n<td>IR,Reg,SE</td>\n<td>IR,Reg,SE</td>\n</tr>\n<tr class=\"odd\">\n<td>EX</td>\n<td>ALU</td>\n<td>ALU</td>\n<td>ALU</td>\n<td>ALU,PC</td>\n</tr>\n<tr class=\"even\">\n<td>MEM</td>\n<td>Reg, IR</td>\n<td>MDR, Mem</td>\n<td>MDR,Mem</td>\n<td></td>\n</tr>\n<tr class=\"odd\">\n<td>WB</td>\n<td></td>\n<td>Reg, IR</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>44、调研不同FSM控制器实现方式的特点。</p>\n<ol type=\"1\">\n<li><p>Mealy机比Moore机“响应”速度快。</p>\n<p>Mealy机的输出与当前状态和输入有关，而Moore机输出仅与当前状态有关。Mealy机的输入立即反应在当前周期；Moore机的输入影响下一状态，通过下一状态影响输出。为此Mealy机比Moore机输出序列超前一个周期，即“响应速度”较快。Mealy机的输出在当前周期，具有较长的路径（组合逻辑）；Moore机的输出具有一个周期的延时，容易利用时钟同步，Moore机具有较好的时序。因为Mealy机的输出不与时钟同步，当状态译码比较复杂时，易在输出端产生不可避免的竞争毛刺；而Moore机的输出与时钟保持同步，则在一定的程度上可以消除抖动，因此经常使用Moore机设计来提高系统的稳定性。</p></li>\n<li><p>Mealy机状态少，Moore机结构简单。</p>\n<p>由于Moore机的输出只有当前的状态有关，一个状态对应一个输出，Moore机具有更多的状态。Mealy和Moore机之间可以相互转化，对于每个Mealy机，都有一个等价的Moore机，Moore机状态的上限为所对应的Mealy机状态的数量和输出数量的乘积。状态机的状态通过触发器的数量来反应，Mealy机具有较少的状态，为此具有较少的触发器。</p></li>\n</ol>\n<p>45、调研水平微指令和垂直微指令的特点。</p>\n<ul>\n<li><p>水平型微指令：一次能定义并执行多个并行操作微命令的微指令。并行操作能力强，效率高，灵活性强，而且执行一条指令的时间短，并且解释指令的微程序，有微指令字较长而微程序短的特点，但是用户难以掌握。水平型微指令的大多数微命令一般可直接控制对象故执行每条微指令的时间短。并且它要经过译码后控制对象影响每条微指令的执行时间。</p></li>\n<li><p>垂直型微指令：微指令中设置微操作码字段，采用微操作码编译法，由微操作码规定微指令的功能。并行操作能力弱，效率低，灵活性较弱，而且执行一条指令的时间较长，并且解释指令的微程序，有微指令字较短而微程序长的特点，对于用户来说比较容易掌握。垂直型微指令的结构类似于一般机器指令的结构由微操作码译码确定微指令的功能。垂直型微指令字长较短实现一条机器指令的微程序要比水平型微指令编写的微程序长得多它是用较长的微程序结构来换取较短的微指令结构。</p></li>\n</ul>\n<h1 id=\"处理器设计-流水线\">处理器设计-流水线</h1>\n<p>46、假设某产品的生产需要4道工序，该产品生产车间以前只有1个工人，1套生产该产品的机器。该工人工作8小时，可以生产120件（即每4分钟生产1件）。要将该产品日产量提高到480件，如何能实现目标？</p>\n<p>两种解决方案：方案一：增加3名工人、3套设备。方案二：产品生产采用流水线方式，分为4道工序；增加3名工人，每人负责一道工序。</p>\n<p>两种方案的工作过程对比：两种方案中，单件产品的生产时间均不变。但在稳定情况下，方案一：每4分钟，4件产品同时进入流水线，4件成品同时离开流水线，需要增加3套设备。方案二：每分钟，1件产品进入流水线，1件成品离开流水线，不需要增加任何设备。</p>\n<p>方案二的主要特点：每件产品还是要经过4道工序处理，单件产品的加工时间并没有改变，但它将不同产品的不同步骤重叠在一起，使得每件产品的产出时间从表面上看是从原来的4分钟缩减到1分钟，提高了产品的产出率。</p>\n<p>47、RISC-V五级流水处理器为何没有PC写入信号？</p>\n<p>没有发生阻塞时，每一个周期PC都需要更新，故不需要写入信号。当发生阻塞时，可以使向PC写入的数据保持不变。</p>\n<p>48、访存相关和寄存器相关的例子？</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">sw a0,0(a1);</span><br><span class=\"line\">lw a2,0(a1);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">add a0,a0,a1;</span><br><span class=\"line\">add a0,a0,a1;</span><br></pre></td></tr></table></figure>\n<p>49、流水线何时会产生WAW和WAR相关？</p>\n<p>普通运算指令提前写回可能产生WAW相关。</p>\n<p>ALU指令访存且访存需要多个周期时可能产生WAR相关。</p>\n<p>50、如何让BEQ指令在第三和第五个周期内完成？</p>\n<p>在EX段增加一个专用比较器进行分支成功的判断即可将BEQ指令在第三个周期内完成。</p>\n<p>在第五个周期完成的话，需要考虑分支失败但是访存指令已经执行的情况，此时可以立刻执行一条恢复性质的指令。</p>\n<p>51、如何提前知道分支是否成功？</p>\n<p>根据该指令历史的分支情况进行预测。</p>\n<p>52、预测成功和预测失败应该采取什么策略？</p>\n<p>预测成功时，应该记录下这次的成功经验，便于下次预测；预测失败时，需要立即停止流水线中的指令，重新回到正确的分支处运行，并且记录下这次的失败经验，便于下次预测。</p>\n<p>53、如何使得IPC&gt;1?</p>\n<p>采用特别的技术，比如超标量、超流水、超长指令字，总之就是在一个时钟周期内流出多条指令。</p>\n<p>54、画出下边指令序列中的定向路径：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">SUB x1,x5, x4 </span><br><span class=\"line\">ADD x1, x1, x4 </span><br><span class=\"line\">BEQ x1, x4, Offset</span><br><span class=\"line\">LW x1, 45(x3)</span><br><span class=\"line\">ADD x1, x1, x4</span><br><span class=\"line\">SW x1, 5(x3)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>SUB-&gt;ADD: EX/MEM.ALUOUT-&gt;ID/EX.A</p>\n<p>ADD-&gt;BEQ: EX/MEM.ALUOUT-&gt;ID/EX.A</p>\n<p>LW-&gt;ADD: MEM/WB.MDR-&gt;ID/EX.A</p>\n<p>ADD-&gt;SW: EX/MEM.ALUOUT-&gt;ID/EX.B</p>\n</blockquote>\n<p>55、假设部件延迟MEM=2ns， R-Type ALU=2ns，Reg=1ns，其他部件没有延时。某程序编译生成100条指令，其中LW 20%，SW20%，R-Type ALU 40%，BEQ 20%。采用MIPS/RISC-V的5级流水线，并假设LW互锁和分支延迟如下，其他无开销：有一半的LW执行后为R-Type ALU，因此需要互锁1个周期；分支延迟为1个周期，采用等待策略。求这段代码在单周期、多周期、流水线三种方式的性能对比。</p>\n<p>单周期： <span class=\"math display\">\\[\n(2+1+2+2+1)*100=800ns.\n\\]</span> 多周期： <span class=\"math display\">\\[\n(20*5+20*4+20*4+20*3)*2=800ns.\n\\]</span> 流水线： <span class=\"math display\">\\[\n10+99*2+(10+20)*2=268ns.\n\\]</span> 单周期与多周期性能相同，流水线加速比为<span class=\"math inline\">\\(\\frac{800}{268}=2.99\\)</span>。</p>\n<p>56、COD RISC-V 4.16 In this exercise, we examine how pipelining affects the clock cycle time of the processor. Problems in this exercise assume that individual stages of the datapath have the following latencies:</p>\n<table>\n<thead>\n<tr class=\"header\">\n<th>IF</th>\n<th>ID</th>\n<th>EX</th>\n<th>MEM</th>\n<th>WB</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>250ps</td>\n<td>350ps</td>\n<td>150ps</td>\n<td>300ps</td>\n<td>200ps</td>\n</tr>\n</tbody>\n</table>\n<p>Also, assume that instructions executed by the processor are broken down as follows:</p>\n<table>\n<thead>\n<tr class=\"header\">\n<th>ALU/Logic</th>\n<th>Jump/Branch</th>\n<th>Load</th>\n<th>Store</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>45%</td>\n<td>20%</td>\n<td>20%</td>\n<td>15%</td>\n</tr>\n</tbody>\n</table>\n<p>4.16.1 What is the clock cycle time in a pipelined and non-pipelined processor?</p>\n<p>Pipelined:<code>350ps</code>.</p>\n<p>Non-pipelined:<code>250+350+150+300+200=1250ps</code>.</p>\n<p>4.16.2 What is the total latency of an ld instruction in a pipelined and non-pipelined processor?</p>\n<p>Pipelined:<code>350*5=1750ps</code>.</p>\n<p>Non-pipelined:<code>1250ps</code>.</p>\n<p>4.16.3 If we can split one stage of the pipelined datapath into two new stages, each with half the latency of the original stage, which stage would you split and what is the new clock cycle time of the processor?</p>\n<p>ID, <code>300ps</code>.</p>\n<p>4.16.4 Assuming there are no stalls or hazards, what is the utilization of the data memory?</p>\n<p><code>20%+15%=35%</code>.</p>\n<p>4.16.5 Assuming there are no stalls or hazards, what is the utilization of the write-register port of the “Registers” unit?</p>\n<p><code>45%+20%=65%</code></p>\n<p>57、COD RISC-V 4.23 If we change load/store instructions to use a register (without an offset) as the address, these instructions no longer need to use the ALU. (See Exercise 4.15.) As a result, the MEM and EX stages can be overlapped and the pipeline has only four stages.</p>\n<p>4.23.1 How will the reduction in pipeline depth affect the cycle time?</p>\n<p>Th e clock period won’t change because we aren’t making any changes to the slowest stage.</p>\n<p>4.23.2 How might this change improve the performance of the pipeline?</p>\n<p>Moving the MEM stage in parallel with the EX stage will eliminate the need for a cycle between loads and operations that use the result of the loads. This can potentially reduce the number of stalls in a program.</p>\n<p>4.23.3 How might this change degrade the performance of the pipeline?</p>\n<p>Removing the offset from <code>ld</code> and <code>sd</code> may increase the total number of instructions because some <code>ld</code> and <code>sd</code> instructions will need to be replaced with a <code>addi</code>/<code>ld</code> or <code>addi</code>/<code>sd</code> pair.</p>\n<p>58、单周期和流水线的关系？</p>\n<p>流水线是单周期的升华。具体表现在：单周期的各个主要部件在流水线中仍然得以使用，并且流水线需要采用与单周期相同的哈佛架构；当流水线的拆分合理时，可以达到同时各个部件的同时充分利用，这一点是单周期所做不到的。</p>\n<p>59、流水线中实现一个周期访存（取指，取数）的前提条件是什么？</p>\n<p>使用块式存储器存储，并且不使用二次存储器寻址方式。</p>\n<p>60、流水线执行第一条指令时，IF在取指，其他段在做什么？</p>\n<p>什么都没做。</p>\n<p>61、各流水段的控制信号何时生成与释放？</p>\n<p>控制信号都在上一个时钟周期执行完毕后生成，当前时钟周期执行后释放。</p>\n<p>62、寻址方式如何实现的？哪些寻址方式适合流水线？</p>\n<p>寻址方式通过硬件电路直接实现。</p>\n<p>隐含寻址、立即寻址、直接寻址、寄存器寻址、偏移寻址适合流水线。</p>\n<p>63、如果R-type指令也可访存，则应如何设计流水线？</p>\n<p>需要在MEM段后面或内部再加一个ALU。</p>\n<p>64、MIPS能否采用“取指、译码、执行”三段流水线？</p>\n<p>可以。单周期都可以，理论上更多段流水都可以。</p>\n<p>65、Stall原因与判断规则？如何实现stall？</p>\n<p>原因：当前段的指令不需要执行而被执行，需要立刻阻止。</p>\n<p>判断规则：分支失败或Load后接ALU指令。</p>\n<p>实现：给段间寄存器和PC加写使能。</p>\n<p>66、理想流水线加速比=？IPC=？</p>\n<p>加速比与流水级数相同，IPC=1。</p>\n<p>67、为何单周期、多周期的控制信号不需要buffer，而流水线的控制信号需要buffer？</p>\n<p>单周期与多周期同时执行的都是同一条指令，控制需要立刻发生；流水线同时执行多条指令，控制信号组要等到特定指令到达特定段再执行，若无buffer，立刻操作的是其他指令，与设计不符。</p>\n<p>68、哪些情形可能造成流水线stall，有哪些解决方案？</p>\n<p>分支失败或Load后接ALU指令，可以采取等待或者分支预测技术。</p>\n<p>69、影响流水线性能发挥的因素有哪些，可以采用哪些手段减小这些因素的影响？</p>\n<ul>\n<li>多个任务在同一时间周期内争用同一个流水段：合理设计。</li>\n<li>数据依赖：做好几种相关的处理。</li>\n<li>条件转移的影响 ：做好分支预测。</li>\n</ul>\n<p>70、指令流水线中在哪个阶段会产生什么相关？</p>\n<p>ID：结构相关。</p>\n<p>EX：控制相关、数据相关。</p>\n<p>MEM：数据相关。</p>\n<p>WB：数据相关。</p>\n<p>71、为何MIPS只有I-type指令访存/RISC-V的I类S类？</p>\n<p>MIPS把store指令设计为I-type，而RISC-V把store类指令设计为S-type。这样MIPS的store指令的第一个寄存器作为了源，与其他I-type指令不统一；RISC-Vstore指令相当于空开了第一个寄存器，使得第一个寄存器仅用于目的，对硬件更友好。</p>\n<p>72、典型的流水线的多发射技术有哪些？</p>\n<ul>\n<li>集中式与分布式</li>\n<li>数据捕捉与非数据捕捉</li>\n<li>压缩与非压缩</li>\n</ul>\n<p>73、为何RISC-V只有Load/store指令访存？</p>\n<p>因为RISC-V是简单指令集，没用那么多功能复杂的指令。</p>\n<p>74、流水线控制器的实现方式。</p>\n<p>全组合式实现。</p>\n<h1 id=\"深度与浮点流水线举例-mipsr4000\">深度与浮点流水线举例-MIPSR4000</h1>\n<p>“The more we study, the more we discover our ignorance.\"by Percy Bysshe Shelley.</p>\n<h1 id=\"中断与异常\">中断与异常</h1>\n<p>75、各中断源如何向 CPU 提出请求？</p>\n<p>使用中断请求标记INTR。一个请求源对应一个INTR中断请求标记触发器，多个INTR组成中断请求标记寄存器。</p>\n<p>76、各中断源同时提出请求怎么办？</p>\n<p>软件实现（程序查询）；硬件实现（排队器）。</p>\n<p>77、CPU什么条件、什么时间、以什么方式响应中断？</p>\n<ol type=\"1\">\n<li>响应中断的条件：CPU允许中断触发器 EINT = 1。</li>\n<li>响应中断的时间：指令执行周期结束时刻由CPU 发查询信号。</li>\n<li>响应中断的方式：中断周期完成的主要操作，通过中断隐指令（保护程序断点、寻找服务程序入口地址、硬件关中断）完成。</li>\n</ol>\n<p>78、如何恢复现场，如何返回？</p>\n<p>由中断服务程序ISR完成。</p>\n<p>79、如何寻找入口地址？</p>\n<p>硬件向量法、软件查询法。</p>\n<p>80、处理中断的过程中又出现新的中断怎么办？</p>\n<ol type=\"1\">\n<li>提前设置开中断。</li>\n<li>优先级别高的中断源有权中断优先级别低的中断源。</li>\n</ol>\n<p>81、多重中断的优先级如何设定？</p>\n<p>屏蔽触发器的作用——动态优先级设定。</p>\n<p>82、为何不改变响应优先级？</p>\n<p>响应优先级是根据硬件排队器确定的，采用屏蔽触发器只能改变处理优先级。</p>\n<p>83、结合屏蔽字设置的响应和处理流程，分析红色圈中的“锯齿”是从何来的？</p>\n<p><img src=\"https://gsxgoldenlegendary.github.io/images/codh83-0.png\" /></p>\n<p>响应优先级与处理优先级不同。A结束以后，先响应B，再响应C，最后响应D，但是需要先处理D。锯齿段是对响应操作的执行。</p>\n<p>84、MIPS算术溢出应该在哪个周期？</p>\n<p>EX。</p>\n<p>85、根据RISC-V与MIPS的多周期数据通路区别考虑异常处理方式？</p>\n<p>RISC-V：保存导致异常（或被中断）的指令的PC值、保存问题的表征、跳转到处理程序；</p>\n<p>MIPS：断点保存、异常识别、跳转异常服务程序（PC）。</p>\n<p>86、COD RISC-V 4.22 Consider the fragment of RISC-V assembly below:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">sd x29, 12(x16)</span><br><span class=\"line\">ld x29, 8(x16)</span><br><span class=\"line\">sub x17, x15, x14</span><br><span class=\"line\">beqz x17, label</span><br><span class=\"line\">add x15, x11, x14</span><br><span class=\"line\">sub x15, x30, x14</span><br></pre></td></tr></table></figure>\n<p>Suppose we modify the pipeline so that it has only one memory (that handles both instructions and data). In this case, there will be a structural hazard every time a program needs to fetch an instruction during the same cycle in which another instruction accesses data.</p>\n<p>4.22.1 Draw a pipeline diagram to show where the code above will stall.</p>\n<p>Stalls are marked with **:</p>\n<blockquote>\n<p><code>sd x29, 12(x16)       IF ID EX ME WB</code></p>\n<p><code>ld x29, 8(x16)           IF ID EX ME WB</code></p>\n<p><code>sub x17, x15, x14           IF ID EX ME WB</code></p>\n<p><code>bez x17, label                     ** ** IF ID EX ME WB</code></p>\n<p><code>add x15, x11, x14                        IF ID EX ME WB</code></p>\n<p><code>sub x15,x30,x14                             IF ID EX ME WB</code></p>\n</blockquote>\n<p>4.22.2 In general, is it possible to reduce the number of stalls/ NOP s resulting from this structural hazard by reordering code?</p>\n<p>Reordering code won’t help. Every instruction must be fetched; thus, every data access causes a stall. Reordering code will just change the pair of instructions that are in conflict.</p>\n<p>4.22.3 Must this structural hazard be handled in hardware? We have seen that data hazards can be eliminated by adding NOP s to the code. Can you do the same with this structural hazard? If so, explain how. If not, explain why not.</p>\n<p>You can’t solve this structural hazard with NOPs, because even the NOPs must be fetched from instruction memory.</p>\n<p>4.22.4 Approximately how many stalls would you expect this structural hazard to generate in a typical program? (Use the instruction mix from Exercise 4.8.)</p>\n<p><code>25%+11%=36%</code>. Every data access will cause a stall.</p>\n<p>87、 COD RISC-V 4.25 Consider the following loop.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">LOOP: </span><br><span class=\"line\">ld x10, 0(x13)</span><br><span class=\"line\">ld x11, 8(x13)</span><br><span class=\"line\">add x12, x10, x11</span><br><span class=\"line\">subi x13, x13, 16</span><br><span class=\"line\">bnez x12, LOOP</span><br></pre></td></tr></table></figure>\n<p>Assume that perfect branch prediction is used (no stalls due to control hazards), that there are no delay slots, that the pipeline has full forwarding support, and that branches are resolved in the EX (as opposed to the ID) stage.</p>\n<p>4.25.1 Show a pipeline execution diagram for the first two iterations of this loop.</p>\n<p>4.25.2 Mark pipeline stages that do not perform useful work. How often while the pipeline is full do we have a cycle in which all five pipeline stages are doing useful work? (Begin with the cycle during which the subi is in the IF stage. End with the cycle during which the bnez is in the IF stage.)</p>\n<p>… indicates a stall. ! indicates a stage that does not do useful work.</p>\n<blockquote>\n<p><code>ld x10, 0(x13)        IF ID EX ME | WB</code></p>\n<p><code>ld x11, 8(x13)           IF ID EX | ME WB</code></p>\n<p><code>add x12, x10, x11       IF ID | .. EX ME! WB</code></p>\n<p><code>subi x13, x13, 16          IF | .. ID EX ME! WB</code></p>\n<p><code>bnez x12, LOOP                 | .. IF ID EX ME! WB</code></p>\n<p><code>ld x10, 0(x13)                            IF ID EX ME WB</code></p>\n<p><code>ld x11, 8(x13)                               IF ID EX ME WB</code></p>\n<p><code>add x12, x10, x11                           IF ID .. EX | ME! WB</code></p>\n<p><code>subi x13, x13, 16                              IF .. ID | EX ME WB</code></p>\n<p><code>bnez x12, LOOP                                           IF | ID EX ME! WB!</code></p>\n<p><code>Completely busy               |  N  N  N  N  N  N  N  N |</code></p>\n</blockquote>\n<p>88、唐朔飞 8.23 在中断处理过程中，“保护现场”需要完成哪些任务？如何实现？</p>\n<p>中断处理过程中“保护现场”要完成保存程序的断点和通用寄存器及状态寄存器的内容，具体来说，可在中断服务程序的起始部分安排若干条指令，将寄存器的内容存到存储器中保存或用进栈指令将各存储器的内容推入堆栈保存，即进程序中断时间的“现场”保护起来。</p>\n<p>89、唐朔飞 8.24 现有 A、B、C、D 4个中断源，其优先级由高到底按<span class=\"math inline\">\\(A\\to B\\to C\\to D\\)</span>顺序排列。若中断服务程序的执行时间为<span class=\"math inline\">\\(20\\mu s\\)</span>，根据下图所示的中断源请求中断的时刻，画出CPU执行程序的轨迹。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200702152943506.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Njc2NjcwMw==,size_16,color_FFFFFF,t_70\" /></p>\n<p>90、中断周期要完成哪些微操作？</p>\n<p>请求中断→响应中断→关闭中断→保留断点→中断源识别→保护现场→中断服务子程序→恢复现场→中断返回。</p>\n<p>91、多周期状态机中，出现溢出的指令是否将错误结果写回？</p>\n<p>否。</p>\n<p>92、多周期中状态机中，如何响应中断？</p>\n<p>使用独立的状态进行响应。</p>\n<p>93、指令顺序执行，中断“精确”；指令流水执行，中断“精确”或“非精确”可选精确中断，为何提交点是M段？</p>\n<p>前一条指令已执行完成，后续指令被flush，保证没有指令完成写回。</p>\n<p>94、EPC和cause应该在哪个段？异常检测电路？</p>\n<p>都在WB段。</p>\n<p>95、MIPS异常返回指令eret如何实现？</p>\n<p>eret指令会原子性地把中断响应打开（置SR（EXL）），并把状态级由kernel转到user级，并返回原地址继续执行。</p>\n<p>96、异常与中断同时发生，优先级？</p>\n<p>异常优先级高。</p>\n<p>97、（分支）延迟槽中的指令发生异常，EPC = ？</p>\n<p>应该保存为分支正确后的地址。</p>\n<p>98、比较中断、异常、过程调用，请求时间、响应时间，断点与现场，返回点，同步异步，中断周期、系统状态？</p>\n<p>中断：中断是指计算机运行过程中，出现某些意外情况需主机干预时，机器能自动停止正在运行的程序并转入处理新情况的程序，处理完毕后又返回原被暂停的程序继续运行。</p>\n<p>异常：异常指的是在程序运行过程中发生的异常事件，通常是由外部问题（如硬件错误、输入错误）所导致的。在Java等面向对象的编程语言中异常属于对象。</p>\n<p>过程调用：一个过程调用包括将数据（以参数和返回值的形式）与控制从代码的一部分传递到另一部分。除此之外，在进入时为过程的局部变量分配空间，在退出的时候释放这些空间。数据传递、局部变量的分配和释放通过操纵程序栈来实现。栈作为一种能够实现先进后出、后进先出的数据结构，非常适合用于实现函数调用以及返回的机制。</p>\n<p>请求时间：客户发出请求到得到响应的整个过程的时间响应时间。</p>\n<p>响应时间：系统对请求作出响应的时间。</p>\n<p>断点：中断或异常发生的位置。</p>\n<p>现场：中断或异常发生时处理器中各个寄存器的值。</p>\n<p>返回点：中断或异常处理程序运行后返回到原程序的位置。</p>\n<p>同步：调用一旦开始，调用者必须等到方法调用返回后，才能继续后续的行为。</p>\n<p>异步：调用更像一个消息传递，一旦开始，方法调用就会立即返回，调用者就可以继续后续的操作。而，异步方法通常会在另外一个线程中，“真实”地执行着。整个过程，不会阻碍调用者的工作。</p>\n<p>中断周期：当CPU采用中断方式实现主机与I/O交换信息时，CPU在每条指令执行阶段结束前， 都要发中断查询信号，以检测是否有某个I/O提出中断请求。如果有请求，CPU则要进入中断响应阶段，又称中断周期。在这阶段， CPU必须将程序断点保存到存储器中。</p>\n<p>系统状态：操作系统的管理程序运行时的状态，它具有较高的特权级别。</p>\n<p>99、假设如下指令序列采用多周期执行方式和流水线非精确方式，在第几个周期检测出异常？（LW互锁=1）<code>80000184 SW $27, 1004</code>指令何时取指？</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">LOOP: </span><br><span class=\"line\">LW $1, 40($10) ；取$1</span><br><span class=\"line\">ADD $2,$3,$1 ；加法</span><br><span class=\"line\">SW $2, 40($10) ；存</span><br><span class=\"line\">SUB $9,$9,$11；迭代器</span><br><span class=\"line\">XXX $5,$7；异常-未定义指令（ID段检测）</span><br><span class=\"line\">BNE LOOP,$9,$0；分支指令    </span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">异常指令： </span><br><span class=\"line\">80000180 SW $26,1000（$0）</span><br><span class=\"line\">80000184 SW $27, 1004（$0）</span><br></pre></td></tr></table></figure>\n<p>多周期：5+4+4+4+2=19；19+3+4=26。</p>\n<p>流水线：1+1+1+1+1+1+1=7；7+3+2=12.</p>\n<p>\"Study the past if you would define the future.\" by Confucius.</p>\n<h1 id=\"存储系统\">存储系统</h1>\n<p>100、设CPU有16根地址线、8根数据线，并用<code>MREQ</code>作为访存控制信号（低电平有效），用WR作为读/写控制信号（高电平为读，低电平为写）。现有下列存储芯片：1K×4位RAM、4K×8位RAM、8K×8位RAM、2K×8位ROM、4K×8位ROM、8K×8位ROM及74138译码器和各种门电路。画出CPU与存储器的连接图，要求如下：<br />\n1）主存地址空间分配为：6000H ~ 67FFH为系统程序区；6800H ~ 6BFFH为用户程序区； 2）合理选用上述存储芯片，说明各选几片； 3）详细画出存储芯片的片选逻辑图。</p>\n<p>第一步，确定所要求的主存空间各区域容量。</p>\n<p>第二步，根据容量和用途，选片：系统区：1片2K×8位的ROM；用户区：2片1K×4位的RAM。</p>\n<p>第三步，分配CPU地址线。CPU的低11位地址线<span class=\"math inline\">\\(A_{10}\\textasciitilde A_0\\)</span> 与2K × 8位ROM的地址线相连；低10位地址线<span class=\"math inline\">\\(A_9\\textasciitilde A_0\\)</span> 与2片1K × 4位RAM的地址线相连。剩下的高位地址线与访存控制信号一起产生存储芯片的片选信号。</p>\n<p><img src=\"https://gsxgoldenlegendary.github.io/images/codh100-1.png\" /></p>\n<p>第四步，片选信号的形成。根据74138译码逻辑关系，必须保证控制端<span class=\"math inline\">\\(G_1\\)</span>为高电平，<span class=\"math inline\">\\(G_{2A}\\)</span> 和<span class=\"math inline\">\\(G_{2B}\\)</span> 为低电平，译码器才能正常工作。<span class=\"math inline\">\\(A_{15}\\)</span>始终为低、<span class=\"math inline\">\\(A_{14}\\)</span>始终为高，分别接<span class=\"math inline\">\\(G_{2A}\\)</span>和<span class=\"math inline\">\\(G_1\\)</span> ；而<code>MREQ</code>低电平有效，接<span class=\"math inline\">\\(G_{2B}\\)</span>剩下<span class=\"math inline\">\\(A_{13}\\)</span> 、<span class=\"math inline\">\\(A_{12}\\)</span> 、<span class=\"math inline\">\\(A_{11}\\)</span> ，分别接译码器的输入端C、B、A译码结果为4（<span class=\"math inline\">\\(Y_4\\)</span>有效），选中ROM；译码结果为5（<span class=\"math inline\">\\(Y_5\\)</span>有效），与<span class=\"math inline\">\\(A_{10}\\)</span> 一起通过与门，都为低电平有效时，选中2片RAM。</p>\n<p><img src=\"https://gsxgoldenlegendary.github.io/images/codh100-0.png\" /></p>\n<p>101、设CPU有16根地址线、8根数据线，并用MREQ作为访存控制信号（低电平有效），用WR作为读/写控制信号（高电平为读，低电平为写）。现有下列存储芯片：1K×4位RAM、4K×8位RAM、8K×8位RAM、2K×8位ROM、4K×8位ROM、8K×8位ROM及74138译码器和各种门电路。画出CPU与存储器的连接图。要求主存的地址空间：最小8K地址为系统程序区，与其相邻的16K地址为用户程序区，最大的4K地址空间为系统程序工作区。详细画出存储芯片的片选逻辑并指出存储芯片的种类及片数。</p>\n<p>第一步，根据题目的地址范围写出对应的二进制地址码。</p>\n<p>第二步，根据容量及作用，选片。系统程序区：1片8K×8位ROM；用户程序区：2片8K×8位RAM；系统程序工作区：1片4K×8位RAM。</p>\n<p>第三步，分配地址线。<span class=\"math inline\">\\(A_{12}\\textasciitilde A_0\\)</span>，与1片8K×8位ROM和2片8K×8位RAM的地址线相连；<span class=\"math inline\">\\(A_{11}\\textasciitilde A_0\\)</span> ，与1片4K×8位RAM的地址线相连。</p>\n<p><img src=\"https://gsxgoldenlegendary.github.io/images/codh101-0.png\" /></p>\n<p>第四步，形成片选信号。<span class=\"math inline\">\\(G_1\\)</span>接+5V，<span class=\"math inline\">\\(G_{2A}\\)</span>和<span class=\"math inline\">\\(G_{2B}\\)</span>接<code>MREQ</code>，保证译码器正常工作；<span class=\"math inline\">\\(A_{15}A_{14}A_{ 13}\\)</span>分别接译码输入端C、B、A，其译码输出<span class=\"math inline\">\\(Y_0\\)</span> 、<span class=\"math inline\">\\(Y_1\\)</span> 、<span class=\"math inline\">\\(Y_2\\)</span> 、<span class=\"math inline\">\\(Y _7\\)</span> 分别作为三类存储芯片的片选信号最大4K地址的片选，需要结合<span class=\"math inline\">\\(Y_7\\)</span> 和<span class=\"math inline\">\\(A_{12}\\)</span>。</p>\n<p><img src=\"https://gsxgoldenlegendary.github.io/images/codh101-1.png\" /></p>\n<p>102、 在一个具有4个存储体的低位多体交叉存储器中，如果处理器的访存地址为以下十进制值。求该存储器比单体存储器的平均访问速率提高多少（忽略初启时的延迟）？</p>\n<ol type=\"1\">\n<li><p>0001、0002、0003、…、0100</p></li>\n<li><p>0002、0004、0006、…、0200</p></li>\n<li><p>0003、0006、0009、…、0300</p></li>\n</ol>\n<p>62、 设存储器容量为32字，字长64位，模块数m=4，分别用多体高位交叉即顺序方式和多体低位交叉方式进行组织。存储周期T=200ns，数据总线宽度为64位，总线传送周期t=50ns。若连续读出4个字，问顺序存储器和交叉存储器的带宽各是多少?</p>\n<p>63、具有1位纠错能力的编码系统最小码距是多少？</p>\n<p>64、单纠错海明码码距是多少？</p>\n<p>65、<span class=\"math inline\">\\((n+k, n)\\)</span>CRC码码距是多少？</p>\n<p>66、比较海明码与CRC码的容错能力。</p>\n<p>67、有效信息为1010,生成多项式G(x)=1011，将其编成CRC码。</p>\n<p>68、调研新型存储器的典型特征，如原理、密度、易失性、速度、容量等。</p>\n<p>68、假设CPU执行某段程序时，共访问Cache命中2000次，访问主存50次。已知Cache存取周期为50ns，主存存取周期为200ns。求Cache-主存系统的命中率、效率和平均访问时间。</p>\n<p>69、假设主存只允许存放a、b、c三个页面，逻辑上构成a进c出的FIFO队列。某次操作中进程访存的序列是<code>0,1,2,4,2,3,0,2,1,3,2</code>（虚页号）。若分别采用FIFO算法、FIFO+LRU算法，请用列表法分别求两种替换策略情况下主存的命中率。</p>\n<p>70、COD RISC-V 5.5 For a direct-mapped cache design with a 64-bit address, the following bits of the address are used to access the cache.</p>\n<table>\n<thead>\n<tr class=\"header\">\n<th>Tag</th>\n<th>Index</th>\n<th>Offset</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>63-10</td>\n<td>9-5</td>\n<td>4-0</td>\n</tr>\n</tbody>\n</table>\n<p>5.5.1 What is the cache block size (in words)?</p>\n<p>5.5.2 How many blocks does the cache have?</p>\n<p>5.5.3 What is the ratio between total bits required for such a cache implementation over the data storage bits? Beginning from power on, the following byte-addressed cache references are recorded.</p>\n<p>Address:</p>\n<table>\n<thead>\n<tr class=\"header\">\n<th>Hex</th>\n<th>00</th>\n<th>04</th>\n<th>10</th>\n<th>84</th>\n<th>E8</th>\n<th>A0</th>\n<th>400</th>\n<th>1E</th>\n<th>8C</th>\n<th>C1C</th>\n<th>B4</th>\n<th>884</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>Dec</td>\n<td>0</td>\n<td>4</td>\n<td>16</td>\n<td>132</td>\n<td>232</td>\n<td>160</td>\n<td>1024</td>\n<td>30</td>\n<td>140</td>\n<td>3100</td>\n<td>180</td>\n<td>2180</td>\n</tr>\n</tbody>\n</table>\n<p>​</p>\n<p>71、 COD RISC-V 5.11 This exercise examines the effect of different cache designs, specifically comparing associative caches to the direct-mapped caches from Section 5.4. For these exercises, refer to the sequence of word address shown below. <span class=\"math display\">\\[\n    0x03, 0xb4, 0x2b, 0x02, 0xbe, 0x58, 0xbf, 0x0e, 0x1f, 0xb5,\n    0xbf, 0xba, 0x2e, 0xce\n\\]</span> 5.11.1 Sketch the organization of a three-way set associative cache with two-word blocks and a total size of 48 words. Your sketch should have a style similar to Figure 5.18, but clearly show the width of the tag and data fields.</p>\n<p>5.11.2 Trace the behavior of the cache from Exercise 5.11.1. Assume a true LRU replacement policy. For each reference, identify the binary word address, the tag, the index, the offset, whether the reference is a hit or a miss, and which tags are in each way of the cache after the reference has been handled.</p>\n<p>5.11.3 Sketch the organization of a fully associative cache with one-word blocks and a total size of eight words. Your sketch should have a style similar to Figure 5.18, but clearly show the width of the tag and data fields.</p>\n<p>5.11.4 Trace the behavior of the cache from Exercise 5.11.3. Assume a true LRU replacement policy. For each reference, identify the binary word address, the tag, the index, the offset, whether the reference is a hit or a miss, and the contents of the cache after each reference has been handled.</p>\n<p>5.11.5 Sketch the organization of a fully associative cache with two-word blocks and a total size of eight words. Your sketch should have a style similar to Figure 5.18, but clearly show the width of the tag and data fields.</p>\n<p>5.11.6 Trace the behavior of the cache from Exercise 5.11.5. Assume an LRU replacement policy. For each reference, identify the binary word address, the tag, the index, the offset, whether the reference is a hit or a miss, and the contents of the cache after each reference has been handled.</p>\n<p>5.11.7 Repeat Exercise 5.11.6 using MRU (most recently used) replacement.</p>\n<p>5.11.8 Repeat Exercise 5.11.6 using the optimal replacement policy (i.e., the one that gives the lowest miss rate).</p>\n<p>\"Study the past if you would define the future.\" by Confucius.</p>\n<h1 id=\"总线系统\">总线系统</h1>\n<p>72、唐朔飞 3.4 为什么要设置总线判优控制？常见的集中式总线控制有几种，各有何特点，哪种方式响应时间最快，哪种方式对电路故障最敏感？</p>\n<p>73、唐朔飞 3.8 为什么说半同步通信同时保留了同步通信和异步通信的特点？</p>\n<p>74、设数据总线上接有 A、B、C、D 4个寄存器，要求选用合适的74系列芯片，完成下列逻辑设计： （1）设计一个电路，在同一时间实现<span class=\"math inline\">\\(D\\to A\\)</span>、<span class=\"math inline\">\\(D\\to B\\)</span>和<span class=\"math inline\">\\(D\\to C\\)</span>寄存器间的传送。 （2）设计一个电路，实现下列操作。<span class=\"math inline\">\\(T_0\\)</span>时刻完成<span class=\"math inline\">\\(D\\to\\)</span>总线。<span class=\"math inline\">\\(T_1\\)</span>时刻完成总线<span class=\"math inline\">\\(\\to A\\)</span>。<span class=\"math inline\">\\(T_2\\)</span>时刻完成<span class=\"math inline\">\\(A\\to\\)</span>总线。<span class=\"math inline\">\\(T_3\\)</span>时刻完成总线<span class=\"math inline\">\\(\\to B\\)</span>。</p>\n<p>75、唐朔飞 3.14 设总线的时钟频率为8MHz，一个总线周期等于一个时钟周期。如果一个总线周期中并行传送16位数据，试问总线的带宽是多少？</p>\n<p>76、唐朔飞 3.15 在一个32位的总线系统中，总线的时钟频率为66MHz。假设总线最短传输周期为4个时钟周期，试计算总线的最大数据传输率。若想提高数据传输率，可采取什么措施？</p>\n<p>77、唐朔飞 3.16 在异步串行传送系统中，字符格式为：1个起始位、8个数据位、1个校验位、2个终止位。若要求每秒传送120个字符，试求传送的波特率和比特率。</p>\n<p>\"Study the past if you would define the future.\" by Confucius.</p>\n<h1 id=\"io系统\">IO系统</h1>\n<p>78、磁盘存储器有6个盘片，最外两侧盘面不能记录，每面有204条磁道，每条磁道有12个扇段，每个扇段512B，磁盘机以7200rpm的速度旋转，平均寻道时间为8ms。</p>\n<p>1）计算该磁盘存储器的存储容量。</p>\n<p>2）计算该磁盘存储器的平均寻址时间。</p>\n<p>79、唐朔飞 5.4 试比较程序查询方式、程序中断方式和DMA方式对CPU工作效率的影响。</p>\n<p>80、唐朔飞 5.8 某计算机的I/O设备采用异步串行传送方式传送字符信息。字符信息的格式为1位起始位、7位数据位、1位校验位和1位停止位。若要求每秒传送480个字符，那么该设备的数据传送速率为多少？</p>\n<p>81、唐朔飞 5.11 简述I/O接口的功能和基本组成。</p>\n<p>82、唐朔飞 8.23 在中断处理中，“保护现场”需要完成哪些任务？如何实现？</p>\n<p>83、唐朔飞 4.38 磁盘组有6片磁盘，最外两片盘面可以记录，存储区内径22cm，外径33cm，道密度40道/cm，内层密度400位/cm，转速3600转/分。</p>\n<p>（1）共有多少存储面可用？</p>\n<p>（2）共有多少柱面？</p>\n<p>（3）盘组总存储容量是多少？</p>\n<p>84、唐朔飞 4.44 试从存储容量、存取速度、使用寿命和应用场合方面比较磁盘、磁带和光盘存储器。</p>\n<p>\"Study the past if you would define the future.\" by Confucius.</p>\n<h1 id=\"指令的调度与优化\">指令的调度与优化</h1>\n<p>85、结合Arch2030报告，对神经网络六层循环不同层的循环展开分别代表的含义，采用上述技术应该如何优化（软件+硬件）？</p>\n<p>\"Study the past if you would define the future.\" by Confucius.</p>\n<h1 id=\"智能计算系统\">智能计算系统</h1>\n<h1 id=\"深度学习处理器原理\">深度学习处理器原理</h1>\n","categories":["Computer Science"],"tags":["Computer Organization"]},{"title":"categories","url":"/categories/index.html","content":"\n"},{"title":"Links","url":"/links/index.html","content":"<p>Friend sites are as follows.</p>\n<div class=\"link-grid\"><div class=\"link-grid-container\">\n<object class=\"link-grid-image\" data=\"http://castria.cn/images/icon.jpg\"></object>\n<p>Castria的博客</p><p>wyn 语言天才</p>\n<a href=\"http://castria.cn/\"></a>\n</div></div>\n<div class=\"link-grid\"><div class=\"link-grid-container\">\n<object class=\"link-grid-image\" data=\"http://home.ustc.edu.cn/~wukoutian/images/icons.png\"></object>\n<p>Koutian Wu's Homepage</p><p>wkt 一个自由、独立、完全，身体健康、人格健全、思维正常的同学、朋友，或其他角色。</p>\n<a href=\"http://home.ustc.edu.cn/~wukoutian/\"></a>\n</div></div>\n<div class=\"link-grid\"><div class=\"link-grid-container\">\n<object class=\"link-grid-image\" data=\"https://xkz0777.github.io/medias/avatar.jpg\"></object>\n<p>xkz's blog</p><p>xkz 计科卷王</p>\n<a href=\"https://xkz0777.github.io\"></a>\n</div></div>\n<div class=\"link-grid\"><div class=\"link-grid-container\">\n<object class=\"link-grid-image\" data=\"https://ysy-phoenix.github.io/medias/avatar.jpg\"></object>\n<p>Phoenix の blog</p><p>ysy yyds</p>\n<a href=\"https://ysy-phoenix.github.io\"></a>\n</div></div>\n<div class=\"link-grid\"><div class=\"link-grid-container\">\n<object class=\"link-grid-image\" data=\"https://s3.bmp.ovh/imgs/2021/10/2048226a800f8e08.jpg\"></object>\n<p>Layotiver</p><p>ch05 羽协社长</p>\n<a href=\"https://layotiver.github.io/\"></a>\n</div></div>\n<div class=\"link-grid\"><div class=\"link-grid-container\">\n<object class=\"link-grid-image\" data=\"https://i.loli.net/2021/07/12/zWQo2VrLBstvDEU.jpg\"></object>\n<p>llyのblog</p><p>lly 我的超人</p>\n<a href=\"http://home.ustc.edu.cn/~liuly0322/blog/\"></a>\n</div></div>\n<div class=\"link-grid\"><div class=\"link-grid-container\">\n<object class=\"link-grid-image\" data=\"https://i.loli.net/2021/10/20/Unp5fWsBXou6iQJ.jpg\"></object>\n<p>zzx的blog</p><p>zzx 超级高产</p>\n<a href=\"http://home.ustc.edu.cn/~zzx2002/new/\"></a>\n</div></div>\n<div class=\"link-grid\"><div class=\"link-grid-container\">\n<object class=\"link-grid-image\" data=\"https://i.loli.net/2021/07/31/Txvq78fELy6ZCN1.jpg\"></object>\n<p>Txtxj ΦωΦ</p><p>tx oi的神</p>\n<a href=\"https://txtxj.top/\"></a>\n</div></div>\n"},{"title":"Tags","url":"/tags/index.html","content":"\n"}]